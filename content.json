{"meta":{"title":"FinLab 量化實驗室","subtitle":"回測與選股教學部落格","description":"股票如何選擇？要怎麼學習量化投資？財報、技術指標如何看？FinLab利用股票分析、財經python教學！深入淺出的文章，讓你在在茫茫股海中，找到專屬於自己的投資方法。","author":"koreal6803","url":"https://www.finlab.tw"},"pages":[{"title":"糟糕，找不到網頁了！","date":"2018-01-23T12:50:05.000Z","updated":"2018-01-28T01:12:14.000Z","comments":true,"path":"404.html","permalink":"https://www.finlab.tw/404.html","excerpt":"","text":"奇怪，連結怪怪的啦XD不好意思啦！可以參考左側有些不錯的最新文章！或將問題回報於以下留言喔～ FinLab感謝您～","raw":null,"content":null},{"title":"","date":"2019-11-02T07:06:26.590Z","updated":"2019-11-02T07:06:26.590Z","comments":true,"path":"businesscard.html","permalink":"https://www.finlab.tw/businesscard.html","excerpt":"","text":"FinLab x MOPCON .info { padding-top: 0.5rem; padding-bottom: 0.5rem; } .info li { padding-top: 1rem; } a { color:rgb(60, 183, 197); } 芬嚮資訊有限公司 Finlab Technology Co. Ltd. 韓承佑 技術執行長 CTO Email koreal6803@gmail.com FinLab https://www.finlab.tw Linkedin shorturl.at/nGPS1","raw":null,"content":null},{"title":"","date":"2019-12-19T03:06:34.317Z","updated":"2019-12-19T03:06:34.317Z","comments":true,"path":"mopcon.html","permalink":"https://www.finlab.tw/mopcon.html","excerpt":"","text":"FinLab x 專題演講 a { background: black; } .link:hover { margin: 3px; } FinLab x 演講專題 實做 機器學習 x 量化交易 大盤擇時策略 投影片 想要更清晰的影像看這裡！ 程式碼 來跟我們一起做實驗吧！ 部落格 免費學習用程式投資！ 演講專屬合購 -900元限時優惠 ！ 方法 1. 可以點選連結，查看課程介紹 2. 在購買課程時，選擇合購優惠！ 3. 優惠只到 11/26 23:59 截止喔！ --> 基礎Python，選股回測 現折640元！--> 優惠代碼：HHFinLab2019 --> 進階Python，機器學習 現折800元！--> 優惠代碼：HHFinLabAI19 -->","raw":null,"content":null},{"title":"小資族選股策略：隱藏課程","date":"2018-02-21T17:19:34.000Z","updated":"2018-02-22T13:19:37.000Z","comments":true,"path":"小資族選股策略：隱藏課程/index.html","permalink":"https://www.finlab.tw/小資族選股策略：隱藏課程/index.html","excerpt":"","text":"恭喜你獲得神秘影片！希望對你有幫助～ 有人發現影片過多人看，無法開且的狀況，假如發生此狀況，請先加入我的最愛，隔幾個小時再來觀看吧！ 假如覺得獲益良多，那你更不能錯過我們的正式課程！可以留言寫一下看完課程的心得，順便給我們一些意見，讓我們的課程能夠更精進！再次謝謝您！","raw":null,"content":null},{"title":"關於","date":"2017-10-01T06:36:01.000Z","updated":"2018-02-28T12:32:46.000Z","comments":true,"path":"關於/index.html","permalink":"https://www.finlab.tw/關於/index.html","excerpt":"","text":"FinLab的理念FinLab，聽起來很學術，但內容非常實際，一般報章雜誌上看不到的技巧，看不到的統計結果，在這邊完全不私藏，通通秀給大家看！ 一般財經平台，有網站前端、後端、軟體人員、業務、財經專家，部落格小編，大家買他們的程式、社團的錢，有很大的部分都是花在他們的人力成本，最重要的是都花大錢了，有時候還是無法獲利。 FinLab部落格讓大家0成本複製我在財經的路上所學到的東西。（2018更正：我們也推出了影片課程供大家參考，然而我們會盡力維持部落格品質，保證部落格0成本！） 根據統計，世界上有80％的人不喜歡自己的工作，假如你也是其中之一的話，更應該懂得理財，讓自己不再為錢庸碌，活出自己的人生！ 創這個blog的動機為什麼會踏上這條路？其實原本想來玩玩大數據，順便學習理財的觀念，其實人的志向，一直都不是「啊哈！」一下突然就繃出來了，一定是自己的投入後，有了小小的成就，又使你更投入，這樣一個不斷循環的過程。 其實我們也不敢說自己是老師，我們只是希望將自己的能力複製出去，幫助大家少走一點冤枉路而已。對財經有興趣，其實完全是誤打誤撞，我在讀博士班時參加了 台大黑客松，那時我正好用 Google Trend 分析台灣股票市場，有很多財經相關的資料，於是跟朋友打造了一個 GUI 回測程式，所幸獲得 Fintech 組第一名，從此走上了量化投資這條路。 學經歷：法國巴黎南區大學資工所 博士（就讀中）台灣大學電子所 碩士中央大學電機系 學士獲獎經歷： 中國信託 Fintech 黑客松 第一名台大黑客松 2016 Fintech 組 第一名台大黑客松 2015 最佳人氣獎 第二名2013 電子書創作大賽 第一名2013 IC 自動化輔助設計 國內組 第二名","raw":null,"content":null},{"title":"","date":"2018-11-01T22:58:17.333Z","updated":"2018-02-21T12:57:00.000Z","comments":true,"path":"績效追蹤/index.html","permalink":"https://www.finlab.tw/績效追蹤/index.html","excerpt":"","text":".large { margin: 0; } .scards { display: flex; flex-wrap: wrap; justify-content: space-between; width: 100%; overflow-x: hidden; } .effect7 { position:relative; -webkit-box-shadow:0 1px 4px rgba(0, 0, 0, 0.2), 0 0 40px rgba(0, 0, 0, 0.1) inset; -moz-box-shadow:0 1px 4px rgba(0, 0, 0, 0.2), 0 0 40px rgba(0, 0, 0, 0.1) inset; box-shadow:0 1px 4px rgba(0, 0, 0, 0.2), 0 0 40px rgba(0, 0, 0, 0.1) inset; } .effect7:before, .effect7:after { content:\"\"; position:absolute; z-index:-1; -webkit-box-shadow:0 0 20px rgba(0,0,0,0.7); -moz-box-shadow:0 0 20px rgba(0,0,0,0.7); box-shadow:0 0 20px rgba(0,0,0,0.7); top:0; bottom:0; left:10px; right:10px; -moz-border-radius:100px / 10px; border-radius:100px / 10px; } .effect7:after { right:10px; left:auto; -webkit-transform:skew(8deg) rotate(3deg); -moz-transform:skew(8deg) rotate(3deg); -ms-transform:skew(8deg) rotate(3deg); -o-transform:skew(8deg) rotate(3deg); transform:skew(8deg) rotate(3deg); } .scard { border:1px solid #EEE; background: rgba(255,255,255,1); flex: 0 1 calc(50% - 45px); margin: 20px; color: rgb(122, 122, 122); } .scard>div { padding: 10px; margin: 0; display: -webkit-box; display: -moz-box; display: -ms-flexbox; display: -webkit-flex; display: flex; flex-direction: column; justify-content: center; } .small-panel { flex: 1; vertical-align: middle; } .small-panel>i { font-size: 3em; } @media only screen and (max-width: 40em) { .scard>div { width: 100%; } .scard { flex: 0 1 calc(100% - 10px); } .scards { padding: 10px; } } 來看看FinLab選股最近的績效吧！ 此頁可以追蹤FinLab策略股票觀察清單，並且瞭解其歷史績效。 用來玩股市大富翁遊戲使用，請勿用於股票投資！～ 投信小市值跟買 history 25.2 %年均報酬 timeline 18.0 %季均報酬 security -26.6 %最大跌幅 window.PLOTLYENV=window.PLOTLYENV || {};window.PLOTLYENV.BASE_URL=\"https://plot.ly\";Plotly.newPlot(\"0b686ac9-5be5-43c3-993e-ea69dda1f4d9\", [{\"type\": \"scatter\", \"x\": [\"2015-03-31\", \"2015-06-30\", \"2015-09-30\", \"2015-12-31\", \"2016-03-31\", \"2016-06-30\", \"2016-09-30\", \"2016-12-31\", \"2017-03-31\", \"2017-06-30\", \"2017-09-30\", \"2017-12-31\", \"2018-03-31\"], \"y\": [0.0, 3.2027237080375803, -3.259180865846978, 10.939736158300594, 20.458730439876184, 27.066844012779367, 42.42591479141695, 36.9854371372043, 52.026815041309746, 60.02168853749239, 59.76706593024834, 62.38249905446502, 84.15628452632131], \"name\": \"\\u5831\\u916c\\u7387\\uff08\\u542b\\u624b\\u7e8c\\u8cbb\\uff09\", \"line\": {\"color\": \"#F4537E\"}, \"stream\": {\"maxpoints\": 100}, \"xaxis\": \"x1\", \"yaxis\": \"y1\"}, {\"type\": \"scatter\", \"x\": [\"2015-03-31\", \"2015-06-30\", \"2015-09-30\", \"2015-12-31\", \"2016-03-31\", \"2016-06-30\", \"2016-09-30\", \"2016-12-31\", \"2017-03-31\", \"2017-06-30\", \"2017-09-30\", \"2017-12-31\", \"2018-03-31\"], \"y\": [0.0, 6.4172983479504175, 1.6169837124000663, 22.493088147598648, 37.29246614577699, 49.57688049144684, 75.0907596066529, 72.05740117025017, 98.78067870488331, 115.59775836309444, 123.2753450192817, 136.1401071754673, 176.50136376724114], \"name\": \"\\u5831\\u916c\\u7387\\uff08\\u7121\\u624b\\u7e8c\\u8cbb\\uff09\", \"line\": {\"color\": \"#4D4DFF\"}, \"stream\": {\"maxpoints\": 100}, \"xaxis\": \"x1\", \"yaxis\": \"y1\"}, {\"type\": \"scatter\", \"x\": [\"2015-03-31\", \"2015-06-30\", \"2015-09-30\", \"2015-12-31\", \"2016-03-31\", \"2016-06-30\", \"2016-09-30\", \"2016-12-31\", \"2017-03-31\", \"2017-06-30\", \"2017-09-30\", \"2017-12-31\", \"2018-03-31\"], \"y\": [0.0, 1.068089098050029, -10.729882063115681, -10.813756024682187, -12.47259336529215, -10.656909305455075, -4.516028495386093, -2.8126094335489515, 1.691875995295944, 5.96533660624039, 10.406560136145915, 12.387715702958157, 15.150741992532858], \"name\": \"\\u5927\\u76e4\", \"line\": {\"color\": \"gray\"}, \"stream\": {\"maxpoints\": 100}, \"xaxis\": \"x1\", \"yaxis\": \"y1\"}, {\"type\": \"bar\", \"x\": [\"2015-03-31\", \"2015-06-30\", \"2015-09-30\", \"2015-12-31\", \"2016-03-31\", \"2016-06-30\", \"2016-09-30\", \"2016-12-31\", \"2017-03-31\", \"2017-06-30\", \"2017-09-30\", \"2017-12-31\", \"2018-03-31\"], \"y\": [16, 19, 24, 37, 24, 19, 24, 28, 22, 20, 19, 24, 17], \"name\": \"\\u80a1\\u7968\\u6578\\u91cf\\uff08\\u5168\\u8cb7\\uff09\", \"marker\": {\"color\": \"#4D4DFF\"}, \"stream\": {\"maxpoints\": 100}, \"xaxis\": \"x1\", \"yaxis\": \"y2\"}, {\"type\": \"bar\", \"x\": [\"2015-03-31\", \"2015-06-30\", \"2015-09-30\", \"2015-12-31\", \"2016-03-31\", \"2016-06-30\", \"2016-09-30\", \"2016-12-31\", \"2017-03-31\", \"2017-06-30\", \"2017-09-30\", \"2017-12-31\", \"2018-03-31\"], \"y\": [16, 19, 24, 37, 24, 19, 24, 28, 22, 20, 19, 24, 17], \"name\": \"\\u80a1\\u7968\\u6578\\u91cf\\uff08\\u771f\\u5be6\\u72c0\\u6cc1\\uff09\", \"marker\": {\"color\": \"#F4537E\"}, \"stream\": {\"maxpoints\": 100}, \"xaxis\": \"x1\", \"yaxis\": \"y2\"}], {\"yaxis1\": {\"domain\": [0.4444444444444444, 1], \"anchor\": \"free\", \"position\": 0.0, \"title\": \"\\u7372\\u5229 (%)\", \"fixedrange\": true}, \"xaxis1\": {\"domain\": [0.0, 1.0], \"anchor\": \"y2\"}, \"yaxis2\": {\"domain\": [0.0, 0.41666666666666663], \"anchor\": \"x1\", \"title\": \"Amount\", \"fixedrange\": true}, \"showlegend\": false, \"xaxis\": {\"fixedrange\": true}, \"height\": 360, \"shapes\": [], \"annotations\": [], \"margin\": {\"l\": 60, \"r\": 20, \"b\": 20, \"t\": 20, \"pad\": 4}, \"paper_bgcolor\": \"rgba(0,0,0,0)\", \"plot_bgcolor\": \"rgba(0,0,0,0)\"}, {\"showLink\": false, \"linkText\": \"Export to plot.ly\", \"displayModeBar\": false}) --> PEB策略 history 7.8 %年均報酬 timeline 0 %季均報酬 security -13.1 %最大跌幅 window.PLOTLYENV=window.PLOTLYENV || {};window.PLOTLYENV.BASE_URL=\"https://plot.ly\";Plotly.newPlot(\"9862f4de-234b-4854-801c-8ad2bcb8275f\", [{\"type\": \"scatter\", \"x\": [\"2015-09-30\", \"2015-12-31\", \"2016-03-31\", \"2016-06-30\", \"2016-09-30\", \"2016-12-31\", \"2017-03-31\", \"2017-06-30\", \"2017-09-30\", \"2017-12-31\", \"2018-03-31\"], \"y\": [0.0, 3.227200661025109, 3.055266187834249, 5.878211142621592, 8.222572860302325, 13.267852489334487, 28.81943711942334, 27.022343974104345, 26.01478097676462, 26.01478097676462, 26.014780976764484], \"name\": \"\\u5831\\u916c\\u7387\\uff08\\u542b\\u624b\\u7e8c\\u8cbb\\uff09\", \"line\": {\"color\": \"#F4537E\"}, \"stream\": {\"maxpoints\": 100}, \"xaxis\": \"x1\", \"yaxis\": \"y1\"}, {\"type\": \"scatter\", \"x\": [\"2015-09-30\", \"2015-12-31\", \"2016-03-31\", \"2016-06-30\", \"2016-09-30\", \"2016-12-31\", \"2017-03-31\", \"2017-06-30\", \"2017-09-30\", \"2017-12-31\", \"2018-03-31\"], \"y\": [0.0, 4.622771833619144, 5.63983020619192, 8.580165854535915, 11.965117913525525, 18.36185621358968, 36.89620496182424, 35.02805660653472, 34.37229556485162, 34.372295564851576, 34.37229556485144], \"name\": \"\\u5831\\u916c\\u7387\\uff08\\u7121\\u624b\\u7e8c\\u8cbb\\uff09\", \"line\": {\"color\": \"#4D4DFF\"}, \"stream\": {\"maxpoints\": 100}, \"xaxis\": \"x1\", \"yaxis\": \"y1\"}, {\"type\": \"scatter\", \"x\": [\"2015-09-30\", \"2015-12-31\", \"2016-03-31\", \"2016-06-30\", \"2016-09-30\", \"2016-12-31\", \"2017-03-31\", \"2017-06-30\", \"2017-09-30\", \"2017-12-31\", \"2018-03-31\"], \"y\": [0.0, 1.9994496578074283, 0.1022905414210129, 2.178830225131523, 9.201958850377512, 11.150104652908354, 16.301740311664716, 21.189160288351736, 26.268445340237513, 28.534229484676565, 31.694214123167107], \"name\": \"\\u5927\\u76e4\", \"line\": {\"color\": \"gray\"}, \"stream\": {\"maxpoints\": 100}, \"xaxis\": \"x1\", \"yaxis\": \"y1\"}, {\"type\": \"bar\", \"x\": [\"2015-09-30\", \"2015-12-31\", \"2016-03-31\", \"2016-06-30\", \"2016-09-30\", \"2016-12-31\", \"2017-03-31\", \"2017-06-30\", \"2017-09-30\", \"2017-12-31\", \"2018-03-31\"], \"y\": [19, 19, 52, 50, 29, 21, 27, 12, 0, 0, 0], \"name\": \"\\u80a1\\u7968\\u6578\\u91cf\\uff08\\u5168\\u8cb7\\uff09\", \"marker\": {\"color\": \"#4D4DFF\"}, \"stream\": {\"maxpoints\": 100}, \"xaxis\": \"x1\", \"yaxis\": \"y2\"}, {\"type\": \"bar\", \"x\": [\"2015-09-30\", \"2015-12-31\", \"2016-03-31\", \"2016-06-30\", \"2016-09-30\", \"2016-12-31\", \"2017-03-31\", \"2017-06-30\", \"2017-09-30\", \"2017-12-31\", \"2018-03-31\"], \"y\": [19, 19, 52, 49, 29, 21, 27, 12, 0, 0, 0], \"name\": \"\\u80a1\\u7968\\u6578\\u91cf\\uff08\\u771f\\u5be6\\u72c0\\u6cc1\\uff09\", \"marker\": {\"color\": \"#F4537E\"}, \"stream\": {\"maxpoints\": 100}, \"xaxis\": \"x1\", \"yaxis\": \"y2\"}], {\"yaxis1\": {\"domain\": [0.4444444444444444, 1], \"anchor\": \"free\", \"position\": 0.0, \"title\": \"\\u7372\\u5229 (%)\", \"fixedrange\": true}, \"xaxis1\": {\"domain\": [0.0, 1.0], \"anchor\": \"y2\"}, \"yaxis2\": {\"domain\": [0.0, 0.41666666666666663], \"anchor\": \"x1\", \"title\": \"Amount\", \"fixedrange\": true}, \"showlegend\": false, \"xaxis\": {\"fixedrange\": true}, \"height\": 360, \"shapes\": [], \"annotations\": [], \"margin\": {\"l\": 60, \"r\": 20, \"b\": 20, \"t\": 20, \"pad\": 4}, \"paper_bgcolor\": \"rgba(0,0,0,0)\", \"plot_bgcolor\": \"rgba(0,0,0,0)\"}, {\"showLink\": false, \"linkText\": \"Export to plot.ly\", \"displayModeBar\": false}) --> 綜合大雜燴 history 10.4 %年均報酬 timeline 2.1 %季均報酬 security -8.7 %最大跌幅 window.PLOTLYENV=window.PLOTLYENV || {};window.PLOTLYENV.BASE_URL=\"https://plot.ly\";Plotly.newPlot(\"2cd541b5-4e75-406f-8d89-f6bbf13a85c0\", [{\"type\": \"scatter\", \"x\": [\"2016-03-31\", \"2016-06-30\", \"2016-09-30\", \"2016-12-31\", \"2017-03-31\", \"2017-06-30\", \"2017-09-30\", \"2017-12-31\", \"2018-03-31\"], \"y\": [0.0, 0.9079838335025903, 9.71587679499384, 11.549998403493111, 19.631206495826127, 21.41041455465953, 28.7960879894519, 30.59334080888656, 34.13964029288006], \"name\": \"\\u5831\\u916c\\u7387\\uff08\\u542b\\u624b\\u7e8c\\u8cbb\\uff09\", \"line\": {\"color\": \"#F4537E\"}, \"stream\": {\"maxpoints\": 100}, \"xaxis\": \"x1\", \"yaxis\": \"y1\"}, {\"type\": \"scatter\", \"x\": [\"2016-03-31\", \"2016-06-30\", \"2016-09-30\", \"2016-12-31\", \"2017-03-31\", \"2017-06-30\", \"2017-09-30\", \"2017-12-31\", \"2018-03-31\"], \"y\": [0.0, 0.3122538300868616, 12.11672925196623, 15.371398443408468, 25.79128648725113, 30.020646013732822, 41.98177320003826, 46.65855398939007, 52.73559804804784], \"name\": \"\\u5831\\u916c\\u7387\\uff08\\u7121\\u624b\\u7e8c\\u8cbb\\uff09\", \"line\": {\"color\": \"#4D4DFF\"}, \"stream\": {\"maxpoints\": 100}, \"xaxis\": \"x1\", \"yaxis\": \"y1\"}, {\"type\": \"scatter\", \"x\": [\"2016-03-31\", \"2016-06-30\", \"2016-09-30\", \"2016-12-31\", \"2017-03-31\", \"2017-06-30\", \"2017-09-30\", \"2017-12-31\", \"2018-03-31\"], \"y\": [0.0, -2.713754763444365, 3.9730884139353106, 5.827951988748148, 10.732914092570379, 15.386311840209377, 20.222387670157495, 22.379680246744282, 25.388356699651315], \"name\": \"\\u5927\\u76e4\", \"line\": {\"color\": \"gray\"}, \"stream\": {\"maxpoints\": 100}, \"xaxis\": \"x1\", \"yaxis\": \"y1\"}, {\"type\": \"bar\", \"x\": [\"2016-03-31\", \"2016-06-30\", \"2016-09-30\", \"2016-12-31\", \"2017-03-31\", \"2017-06-30\", \"2017-09-30\", \"2017-12-31\", \"2018-03-31\"], \"y\": [30, 69, 59, 60, 53, 66, 26, 58, 36], \"name\": \"\\u80a1\\u7968\\u6578\\u91cf\\uff08\\u5168\\u8cb7\\uff09\", \"marker\": {\"color\": \"#4D4DFF\"}, \"stream\": {\"maxpoints\": 100}, \"xaxis\": \"x1\", \"yaxis\": \"y2\"}, {\"type\": \"bar\", \"x\": [\"2016-03-31\", \"2016-06-30\", \"2016-09-30\", \"2016-12-31\", \"2017-03-31\", \"2017-06-30\", \"2017-09-30\", \"2017-12-31\", \"2018-03-31\"], \"y\": [28, 65, 55, 57, 47, 59, 26, 55, 36], \"name\": \"\\u80a1\\u7968\\u6578\\u91cf\\uff08\\u771f\\u5be6\\u72c0\\u6cc1\\uff09\", \"marker\": {\"color\": \"#F4537E\"}, \"stream\": {\"maxpoints\": 100}, \"xaxis\": \"x1\", \"yaxis\": \"y2\"}], {\"yaxis1\": {\"domain\": [0.4444444444444444, 1], \"anchor\": \"free\", \"position\": 0.0, \"title\": \"\\u7372\\u5229 (%)\", \"fixedrange\": true}, \"xaxis1\": {\"domain\": [0.0, 1.0], \"anchor\": \"y2\"}, \"yaxis2\": {\"domain\": [0.0, 0.41666666666666663], \"anchor\": \"x1\", \"title\": \"Amount\", \"fixedrange\": true}, \"showlegend\": false, \"xaxis\": {\"fixedrange\": true}, \"height\": 360, \"shapes\": [], \"annotations\": [], \"margin\": {\"l\": 60, \"r\": 20, \"b\": 20, \"t\": 20, \"pad\": 4}, \"paper_bgcolor\": \"rgba(0,0,0,0)\", \"plot_bgcolor\": \"rgba(0,0,0,0)\"}, {\"showLink\": false, \"linkText\": \"Export to plot.ly\", \"displayModeBar\": false}) --> 杜邦分析策略 history 16.7 %年均報酬 timeline 1.2 %季均報酬 security -15.2 %最大跌幅 window.PLOTLYENV=window.PLOTLYENV || {};window.PLOTLYENV.BASE_URL=\"https://plot.ly\";Plotly.newPlot(\"39c9d2da-7795-4cdf-bf2d-59badb846eaa\", [{\"type\": \"scatter\", \"x\": [\"2015-06-30\", \"2015-09-30\", \"2015-12-31\", \"2016-03-31\", \"2016-06-30\", \"2016-09-30\", \"2016-12-31\", \"2017-03-31\", \"2017-06-30\", \"2017-09-30\", \"2017-12-31\", \"2018-03-31\"], \"y\": [0.0, 3.0981336669644977, 15.85954762761974, 17.962089845751517, 18.943975132555103, 19.435226122124185, 14.6023457513204, 29.073280538925772, 36.064553051553695, 52.882394004496746, 59.876826271354375, 66.5475395142035], \"name\": \"\\u5831\\u916c\\u7387\\uff08\\u542b\\u624b\\u7e8c\\u8cbb\\uff09\", \"line\": {\"color\": \"#F4537E\"}, \"stream\": {\"maxpoints\": 100}, \"xaxis\": \"x1\", \"yaxis\": \"y1\"}, {\"type\": \"scatter\", \"x\": [\"2015-06-30\", \"2015-09-30\", \"2015-12-31\", \"2016-03-31\", \"2016-06-30\", \"2016-09-30\", \"2016-12-31\", \"2017-03-31\", \"2017-06-30\", \"2017-09-30\", \"2017-12-31\", \"2018-03-31\"], \"y\": [0.0, 4.0950814229485655, 18.37927083320372, 21.666667985411614, 24.919655062836487, 29.425723788508783, 26.051470737087467, 40.45349684463324, 47.850147652289074, 67.3066480497813, 76.77449832753109, 86.1026818302887], \"name\": \"\\u5831\\u916c\\u7387\\uff08\\u7121\\u624b\\u7e8c\\u8cbb\\uff09\", \"line\": {\"color\": \"#4D4DFF\"}, \"stream\": {\"maxpoints\": 100}, \"xaxis\": \"x1\", \"yaxis\": \"y1\"}, {\"type\": \"scatter\", \"x\": [\"2015-06-30\", \"2015-09-30\", \"2015-12-31\", \"2016-03-31\", \"2016-06-30\", \"2016-09-30\", \"2016-12-31\", \"2017-03-31\", \"2017-06-30\", \"2017-09-30\", \"2017-12-31\", \"2018-03-31\"], \"y\": [0.0, -11.030241903699745, -11.113833661430217, -12.767089648159446, -10.957514671488921, -4.837295579179301, -3.1396078716820597, 1.3497216846649618, 5.6088037333591245, 10.03508424288706, 12.009573978131316, 14.763303739875134], \"name\": \"\\u5927\\u76e4\", \"line\": {\"color\": \"gray\"}, \"stream\": {\"maxpoints\": 100}, \"xaxis\": \"x1\", \"yaxis\": \"y1\"}, {\"type\": \"bar\", \"x\": [\"2015-06-30\", \"2015-09-30\", \"2015-12-31\", \"2016-03-31\", \"2016-06-30\", \"2016-09-30\", \"2016-12-31\", \"2017-03-31\", \"2017-06-30\", \"2017-09-30\", \"2017-12-31\", \"2018-03-31\"], \"y\": [15, 20, 20, 17, 37, 18, 26, 18, 32, 9, 19, 22], \"name\": \"\\u80a1\\u7968\\u6578\\u91cf\\uff08\\u5168\\u8cb7\\uff09\", \"marker\": {\"color\": \"#4D4DFF\"}, \"stream\": {\"maxpoints\": 100}, \"xaxis\": \"x1\", \"yaxis\": \"y2\"}, {\"type\": \"bar\", \"x\": [\"2015-06-30\", \"2015-09-30\", \"2015-12-31\", \"2016-03-31\", \"2016-06-30\", \"2016-09-30\", \"2016-12-31\", \"2017-03-31\", \"2017-06-30\", \"2017-09-30\", \"2017-12-31\", \"2018-03-31\"], \"y\": [13, 18, 19, 17, 35, 18, 25, 17, 32, 9, 19, 21], \"name\": \"\\u80a1\\u7968\\u6578\\u91cf\\uff08\\u771f\\u5be6\\u72c0\\u6cc1\\uff09\", \"marker\": {\"color\": \"#F4537E\"}, \"stream\": {\"maxpoints\": 100}, \"xaxis\": \"x1\", \"yaxis\": \"y2\"}], {\"yaxis1\": {\"domain\": [0.4444444444444444, 1], \"anchor\": \"free\", \"position\": 0.0, \"title\": \"\\u7372\\u5229 (%)\", \"fixedrange\": true}, \"xaxis1\": {\"domain\": [0.0, 1.0], \"anchor\": \"y2\"}, \"yaxis2\": {\"domain\": [0.0, 0.41666666666666663], \"anchor\": \"x1\", \"title\": \"Amount\", \"fixedrange\": true}, \"showlegend\": false, \"xaxis\": {\"fixedrange\": true}, \"height\": 360, \"shapes\": [], \"annotations\": [], \"margin\": {\"l\": 60, \"r\": 20, \"b\": 20, \"t\": 20, \"pad\": 4}, \"paper_bgcolor\": \"rgba(0,0,0,0)\", \"plot_bgcolor\": \"rgba(0,0,0,0)\"}, {\"showLink\": false, \"linkText\": \"Export to plot.ly\", \"displayModeBar\": false}) --> PETER的外資買賣策略 history 8.6 %年均報酬 timeline -5.9 %季均報酬 security -13.6 %最大跌幅 window.PLOTLYENV=window.PLOTLYENV || {};window.PLOTLYENV.BASE_URL=\"https://plot.ly\";Plotly.newPlot(\"29637d5b-bf8b-432a-88d9-eb366e4c2cfb\", [{\"type\": \"scatter\", \"x\": [\"2015-03-31\", \"2015-06-30\", \"2015-09-30\", \"2015-12-31\", \"2016-03-31\", \"2016-06-30\", \"2016-09-30\", \"2016-12-31\", \"2017-03-31\", \"2017-06-30\", \"2017-09-30\", \"2017-12-31\", \"2018-03-31\"], \"y\": [0.0, 4.978329774893386, 5.419902371342533, 13.998029288345503, 15.955988428790292, 17.667994441651413, 27.27241482448999, 23.658247036236624, 33.41010595121499, 32.736868361552936, 35.77178011084978, 35.93486145186149, 34.26737456739741], \"name\": \"\\u5831\\u916c\\u7387\\uff08\\u542b\\u624b\\u7e8c\\u8cbb\\uff09\", \"line\": {\"color\": \"#F4537E\"}, \"stream\": {\"maxpoints\": 100}, \"xaxis\": \"x1\", \"yaxis\": \"y1\"}, {\"type\": \"scatter\", \"x\": [\"2015-03-31\", \"2015-06-30\", \"2015-09-30\", \"2015-12-31\", \"2016-03-31\", \"2016-06-30\", \"2016-09-30\", \"2016-12-31\", \"2017-03-31\", \"2017-06-30\", \"2017-09-30\", \"2017-12-31\", \"2018-03-31\"], \"y\": [0.0, 8.779751954146953, 11.422797707121601, 23.90122279803226, 29.1006475445204, 33.97957655225421, 49.894987327947035, 53.49702029968344, 73.67522414287566, 78.816819389308, 87.49023551573801, 94.0543009325497, 96.29516200447341], \"name\": \"\\u5831\\u916c\\u7387\\uff08\\u7121\\u624b\\u7e8c\\u8cbb\\uff09\", \"line\": {\"color\": \"#4D4DFF\"}, \"stream\": {\"maxpoints\": 100}, \"xaxis\": \"x1\", \"yaxis\": \"y1\"}, {\"type\": \"scatter\", \"x\": [\"2015-03-31\", \"2015-06-30\", \"2015-09-30\", \"2015-12-31\", \"2016-03-31\", \"2016-06-30\", \"2016-09-30\", \"2016-12-31\", \"2017-03-31\", \"2017-06-30\", \"2017-09-30\", \"2017-12-31\", \"2018-03-31\"], \"y\": [0.0, 0.3335620246577964, -11.378665660933063, -11.461930056254932, -13.108711554631148, -11.306223243428281, -5.209972179995692, -3.518932964551391, 0.9528154596789351, 5.195218072556673, 9.604164362921864, 11.570921592796957, 14.313867185958994], \"name\": \"\\u5927\\u76e4\", \"line\": {\"color\": \"gray\"}, \"stream\": {\"maxpoints\": 100}, \"xaxis\": \"x1\", \"yaxis\": \"y1\"}, {\"type\": \"bar\", \"x\": [\"2015-03-31\", \"2015-06-30\", \"2015-09-30\", \"2015-12-31\", \"2016-03-31\", \"2016-06-30\", \"2016-09-30\", \"2016-12-31\", \"2017-03-31\", \"2017-06-30\", \"2017-09-30\", \"2017-12-31\", \"2018-03-31\"], \"y\": [30, 55, 22, 67, 52, 50, 58, 53, 46, 50, 51, 19, 29], \"name\": \"\\u80a1\\u7968\\u6578\\u91cf\\uff08\\u5168\\u8cb7\\uff09\", \"marker\": {\"color\": \"#4D4DFF\"}, \"stream\": {\"maxpoints\": 100}, \"xaxis\": \"x1\", \"yaxis\": \"y2\"}, {\"type\": \"bar\", \"x\": [\"2015-03-31\", \"2015-06-30\", \"2015-09-30\", \"2015-12-31\", \"2016-03-31\", \"2016-06-30\", \"2016-09-30\", \"2016-12-31\", \"2017-03-31\", \"2017-06-30\", \"2017-09-30\", \"2017-12-31\", \"2018-03-31\"], \"y\": [30, 55, 22, 67, 52, 49, 57, 53, 46, 50, 51, 19, 29], \"name\": \"\\u80a1\\u7968\\u6578\\u91cf\\uff08\\u771f\\u5be6\\u72c0\\u6cc1\\uff09\", \"marker\": {\"color\": \"#F4537E\"}, \"stream\": {\"maxpoints\": 100}, \"xaxis\": \"x1\", \"yaxis\": \"y2\"}], {\"yaxis1\": {\"domain\": [0.4444444444444444, 1], \"anchor\": \"free\", \"position\": 0.0, \"title\": \"\\u7372\\u5229 (%)\", \"fixedrange\": true}, \"xaxis1\": {\"domain\": [0.0, 1.0], \"anchor\": \"y2\"}, \"yaxis2\": {\"domain\": [0.0, 0.41666666666666663], \"anchor\": \"x1\", \"title\": \"Amount\", \"fixedrange\": true}, \"showlegend\": false, \"xaxis\": {\"fixedrange\": true}, \"height\": 360, \"shapes\": [], \"annotations\": [], \"margin\": {\"l\": 60, \"r\": 20, \"b\": 20, \"t\": 20, \"pad\": 4}, \"paper_bgcolor\": \"rgba(0,0,0,0)\", \"plot_bgcolor\": \"rgba(0,0,0,0)\"}, {\"showLink\": false, \"linkText\": \"Export to plot.ly\", \"displayModeBar\": false}) --> 獲利高淨值低股票 history 11.9 %年均報酬 timeline -7.7 %季均報酬 security -22.5 %最大跌幅 window.PLOTLYENV=window.PLOTLYENV || {};window.PLOTLYENV.BASE_URL=\"https://plot.ly\";Plotly.newPlot(\"ac421e58-f88c-445e-8162-2c7edf8aea9d\", [{\"type\": \"scatter\", \"x\": [\"2015-12-31\", \"2016-03-31\", \"2016-06-30\", \"2016-09-30\", \"2016-12-31\", \"2017-03-31\", \"2017-06-30\", \"2017-09-30\", \"2017-12-31\", \"2018-03-31\"], \"y\": [0.0, -0.07944678072971945, 1.533314928045848, -0.5948862352877837, 8.43937942104034, 35.43406211769913, 39.02076904553296, 46.9216538547152, 51.064135755252195, 49.9702103449126], \"name\": \"\\u5831\\u916c\\u7387\\uff08\\u542b\\u624b\\u7e8c\\u8cbb\\uff09\", \"line\": {\"color\": \"#F4537E\"}, \"stream\": {\"maxpoints\": 100}, \"xaxis\": \"x1\", \"yaxis\": \"y1\"}, {\"type\": \"scatter\", \"x\": [\"2015-12-31\", \"2016-03-31\", \"2016-06-30\", \"2016-09-30\", \"2016-12-31\", \"2017-03-31\", \"2017-06-30\", \"2017-09-30\", \"2017-12-31\", \"2018-03-31\"], \"y\": [0.0, 1.5842579151236214, 4.356982140099119, 5.17825673223633, 16.859150897342268, 52.58383819825805, 57.00801008656693, 68.38990824259457, 75.41041026254504, 74.15577711352329], \"name\": \"\\u5831\\u916c\\u7387\\uff08\\u7121\\u624b\\u7e8c\\u8cbb\\uff09\", \"line\": {\"color\": \"#4D4DFF\"}, \"stream\": {\"maxpoints\": 100}, \"xaxis\": \"x1\", \"yaxis\": \"y1\"}, {\"type\": \"scatter\", \"x\": [\"2015-12-31\", \"2016-03-31\", \"2016-06-30\", \"2016-09-30\", \"2016-12-31\", \"2017-03-31\", \"2017-06-30\", \"2017-09-30\", \"2017-12-31\", \"2018-03-31\"], \"y\": [0.0, -1.2132668296245153, 0.8359826984621899, 7.76681245041797, 9.689355466473803, 14.773287656836365, 19.596476522117754, 24.60900894673088, 26.845015860136634, 29.963471567959623], \"name\": \"\\u5927\\u76e4\", \"line\": {\"color\": \"gray\"}, \"stream\": {\"maxpoints\": 100}, \"xaxis\": \"x1\", \"yaxis\": \"y1\"}, {\"type\": \"bar\", \"x\": [\"2015-12-31\", \"2016-03-31\", \"2016-06-30\", \"2016-09-30\", \"2016-12-31\", \"2017-03-31\", \"2017-06-30\", \"2017-09-30\", \"2017-12-31\", \"2018-03-31\"], \"y\": [15, 16, 11, 9, 21, 9, 9, 9, 18, 15], \"name\": \"\\u80a1\\u7968\\u6578\\u91cf\\uff08\\u5168\\u8cb7\\uff09\", \"marker\": {\"color\": \"#4D4DFF\"}, \"stream\": {\"maxpoints\": 100}, \"xaxis\": \"x1\", \"yaxis\": \"y2\"}, {\"type\": \"bar\", \"x\": [\"2015-12-31\", \"2016-03-31\", \"2016-06-30\", \"2016-09-30\", \"2016-12-31\", \"2017-03-31\", \"2017-06-30\", \"2017-09-30\", \"2017-12-31\", \"2018-03-31\"], \"y\": [15, 16, 11, 8, 20, 9, 9, 9, 18, 15], \"name\": \"\\u80a1\\u7968\\u6578\\u91cf\\uff08\\u771f\\u5be6\\u72c0\\u6cc1\\uff09\", \"marker\": {\"color\": \"#F4537E\"}, \"stream\": {\"maxpoints\": 100}, \"xaxis\": \"x1\", \"yaxis\": \"y2\"}], {\"yaxis1\": {\"domain\": [0.4444444444444444, 1], \"anchor\": \"free\", \"position\": 0.0, \"title\": \"\\u7372\\u5229 (%)\", \"fixedrange\": true}, \"xaxis1\": {\"domain\": [0.0, 1.0], \"anchor\": \"y2\"}, \"yaxis2\": {\"domain\": [0.0, 0.41666666666666663], \"anchor\": \"x1\", \"title\": \"Amount\", \"fixedrange\": true}, \"showlegend\": false, \"xaxis\": {\"fixedrange\": true}, \"height\": 360, \"shapes\": [], \"annotations\": [], \"margin\": {\"l\": 60, \"r\": 20, \"b\": 20, \"t\": 20, \"pad\": 4}, \"paper_bgcolor\": \"rgba(0,0,0,0)\", \"plot_bgcolor\": \"rgba(0,0,0,0)\"}, {\"showLink\": false, \"linkText\": \"Export to plot.ly\", \"displayModeBar\": false}) -->","raw":null,"content":null},{"title":"","date":"2018-11-01T22:58:19.000Z","updated":"2018-02-21T12:57:00.000Z","comments":true,"path":"strategies/獲利高淨值低股票_finlab.html","permalink":"https://www.finlab.tw/strategies/獲利高淨值低股票_finlab.html","excerpt":"","text":"獲利高淨值低股票 .staticrypt-hr { margin-top: 20px; margin-bottom: 20px; border: 0; border-top: 1px solid #eee; } .staticrypt-page { width: 360px; padding: 8% 0 0; margin: auto; box-sizing: border-box; } .staticrypt-form { position: relative; z-index: 1; background: #FFFFFF; max-width: 360px; margin: 0 auto 100px; padding: 45px; text-align: center; box-shadow: 0 0 20px 0 rgba(0, 0, 0, 0.2), 0 5px 5px 0 rgba(0, 0, 0, 0.24); } .staticrypt-form input { outline: 0; background: #f2f2f2; width: 100%; border: 0; margin: 0 0 15px; padding: 15px; box-sizing: border-box; font-size: 14px; } .staticrypt-form .staticrypt-decrypt-button { text-transform: uppercase; outline: 0; background: rgba(77,77,255,1); width: 100%; border: 0; padding: 15px; color: #FFFFFF; font-size: 14px; cursor: pointer; } .staticrypt-form .staticrypt-decrypt-button:hover, .staticrypt-form .staticrypt-decrypt-button:active, .staticrypt-form .staticrypt-decrypt-button:focus { background: #43A047; } .staticrypt-html { height: 100%; } .staticrypt-body { margin-bottom: 1em; background: rgba(77,77,255,1); /* fallback for old browsers */ background: -webkit-linear-gradient(right, rgba(77,77,255,1), rgba(120,0,255,1)); background: -moz-linear-gradient(right, rgba(77,77,255,1), rgba(120,0,255,1)); background: -o-linear-gradient(right, rgba(77,77,255,1), rgba(120,0,255,1)); background: linear-gradient(to left, rgba(77,77,255,1), rgba(120,0,255,1)); font-family: \"Arial\", sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; } .staticrypt-instructions { margin-top: -1em; margin-bottom: 1em; } .staticrypt-title { font-size: 1.5em; } .staticrypt-footer { position: fixed; height: 20px; font-size: 16px; padding: 2px; bottom: 0; left: 0; right: 0; margin-bottom: 0; } .staticrypt-footer p { margin: 2px; text-align: center; float: right; } .staticrypt-footer a { text-decoration: none; } 獲利高淨值低股票 document.addEventListener(\"DOMContentLoaded\", function(event) { //do work var passphrase = localStorage.getItem(\"passphrase\"); if (passphrase === null) return; document.getElementById(\"staticrypt-password\").value = passphrase; document.getElementsByClassName(\"staticrypt-decrypt-button\")[0].click(); console.log(document.getElementsByClassName(\"staticrypt-decrypt-button\")[0]); }); document.getElementById('staticrypt-form').addEventListener('submit', function(e) { e.preventDefault(); var passphrase = document.getElementById('staticrypt-password').value, encryptedMsg = '', encryptedHMAC = encryptedMsg.substring(0, 64), encryptedHTML = encryptedMsg.substring(64), decryptedHMAC = CryptoJS.HmacSHA256(encryptedHTML, CryptoJS.SHA256(passphrase).toString()).toString(); if (decryptedHMAC !== encryptedHMAC) { alert('Bad passphrase !'); return; } localStorage.setItem(\"passphrase\", passphrase); var plainHTML = CryptoJS.AES.decrypt(encryptedHTML, passphrase).toString(CryptoJS.enc.Utf8); document.write(plainHTML); document.close(); });","raw":null,"content":null},{"title":"","date":"2019-11-02T07:03:23.905Z","updated":"2018-02-21T12:57:00.000Z","comments":true,"path":"strategies/PEB策略_finlab.html","permalink":"https://www.finlab.tw/strategies/PEB策略_finlab.html","excerpt":"","text":"PEB策略 .staticrypt-hr { margin-top: 20px; margin-bottom: 20px; border: 0; border-top: 1px solid #eee; } .staticrypt-page { width: 360px; padding: 8% 0 0; margin: auto; box-sizing: border-box; } .staticrypt-form { position: relative; z-index: 1; background: #FFFFFF; max-width: 360px; margin: 0 auto 100px; padding: 45px; text-align: center; box-shadow: 0 0 20px 0 rgba(0, 0, 0, 0.2), 0 5px 5px 0 rgba(0, 0, 0, 0.24); } .staticrypt-form input { outline: 0; background: #f2f2f2; width: 100%; border: 0; margin: 0 0 15px; padding: 15px; box-sizing: border-box; font-size: 14px; } .staticrypt-form .staticrypt-decrypt-button { text-transform: uppercase; outline: 0; background: rgba(77,77,255,1); width: 100%; border: 0; padding: 15px; color: #FFFFFF; font-size: 14px; cursor: pointer; } .staticrypt-form .staticrypt-decrypt-button:hover, .staticrypt-form .staticrypt-decrypt-button:active, .staticrypt-form .staticrypt-decrypt-button:focus { background: #43A047; } .staticrypt-html { height: 100%; } .staticrypt-body { margin-bottom: 1em; background: rgba(77,77,255,1); /* fallback for old browsers */ background: -webkit-linear-gradient(right, rgba(77,77,255,1), rgba(120,0,255,1)); background: -moz-linear-gradient(right, rgba(77,77,255,1), rgba(120,0,255,1)); background: -o-linear-gradient(right, rgba(77,77,255,1), rgba(120,0,255,1)); background: linear-gradient(to left, rgba(77,77,255,1), rgba(120,0,255,1)); font-family: \"Arial\", sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; } .staticrypt-instructions { margin-top: -1em; margin-bottom: 1em; } .staticrypt-title { font-size: 1.5em; } .staticrypt-footer { position: fixed; height: 20px; font-size: 16px; padding: 2px; bottom: 0; left: 0; right: 0; margin-bottom: 0; } .staticrypt-footer p { margin: 2px; text-align: center; float: right; } .staticrypt-footer a { text-decoration: none; } PEB策略 document.addEventListener(\"DOMContentLoaded\", function(event) { //do work var passphrase = localStorage.getItem(\"passphrase\"); if (passphrase === null) return; document.getElementById(\"staticrypt-password\").value = passphrase; document.getElementsByClassName(\"staticrypt-decrypt-button\")[0].click(); console.log(document.getElementsByClassName(\"staticrypt-decrypt-button\")[0]); }); document.getElementById('staticrypt-form').addEventListener('submit', function(e) { e.preventDefault(); var passphrase = document.getElementById('staticrypt-password').value, encryptedMsg = '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', encryptedHMAC = encryptedMsg.substring(0, 64), encryptedHTML = encryptedMsg.substring(64), decryptedHMAC = CryptoJS.HmacSHA256(encryptedHTML, CryptoJS.SHA256(passphrase).toString()).toString(); if (decryptedHMAC !== encryptedHMAC) { alert('Bad passphrase !'); return; } localStorage.setItem(\"passphrase\", passphrase); var plainHTML = CryptoJS.AES.decrypt(encryptedHTML, passphrase).toString(CryptoJS.enc.Utf8); document.write(plainHTML); document.close(); });","raw":null,"content":null},{"title":"","date":"2018-11-01T22:58:19.009Z","updated":"2018-02-21T12:57:00.000Z","comments":true,"path":"strategies/跟著法人一起買_finlab.html","permalink":"https://www.finlab.tw/strategies/跟著法人一起買_finlab.html","excerpt":"","text":"跟著法人一起買 .staticrypt-hr { margin-top: 20px; margin-bottom: 20px; border: 0; border-top: 1px solid #eee; } .staticrypt-page { width: 360px; padding: 8% 0 0; margin: auto; box-sizing: border-box; } .staticrypt-form { position: relative; z-index: 1; background: #FFFFFF; max-width: 360px; margin: 0 auto 100px; padding: 45px; text-align: center; box-shadow: 0 0 20px 0 rgba(0, 0, 0, 0.2), 0 5px 5px 0 rgba(0, 0, 0, 0.24); } .staticrypt-form input { outline: 0; background: #f2f2f2; width: 100%; border: 0; margin: 0 0 15px; padding: 15px; box-sizing: border-box; font-size: 14px; } .staticrypt-form .staticrypt-decrypt-button { text-transform: uppercase; outline: 0; background: rgba(77,77,255,1); width: 100%; border: 0; padding: 15px; color: #FFFFFF; font-size: 14px; cursor: pointer; } .staticrypt-form .staticrypt-decrypt-button:hover, .staticrypt-form .staticrypt-decrypt-button:active, .staticrypt-form .staticrypt-decrypt-button:focus { background: #43A047; } .staticrypt-html { height: 100%; } .staticrypt-body { margin-bottom: 1em; background: rgba(77,77,255,1); /* fallback for old browsers */ background: -webkit-linear-gradient(right, rgba(77,77,255,1), rgba(120,0,255,1)); background: -moz-linear-gradient(right, rgba(77,77,255,1), rgba(120,0,255,1)); background: -o-linear-gradient(right, rgba(77,77,255,1), rgba(120,0,255,1)); background: linear-gradient(to left, rgba(77,77,255,1), rgba(120,0,255,1)); font-family: \"Arial\", sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; } .staticrypt-instructions { margin-top: -1em; margin-bottom: 1em; } .staticrypt-title { font-size: 1.5em; } .staticrypt-footer { position: fixed; height: 20px; font-size: 16px; padding: 2px; bottom: 0; left: 0; right: 0; margin-bottom: 0; } .staticrypt-footer p { margin: 2px; text-align: center; float: right; } .staticrypt-footer a { text-decoration: none; } 跟著法人一起買 document.addEventListener(\"DOMContentLoaded\", function(event) { //do work var passphrase = localStorage.getItem(\"passphrase\"); if (passphrase === null) return; document.getElementById(\"staticrypt-password\").value = passphrase; document.getElementsByClassName(\"staticrypt-decrypt-button\")[0].click(); console.log(document.getElementsByClassName(\"staticrypt-decrypt-button\")[0]); }); document.getElementById('staticrypt-form').addEventListener('submit', function(e) { e.preventDefault(); var passphrase = document.getElementById('staticrypt-password').value, encryptedMsg = '', encryptedHMAC = encryptedMsg.substring(0, 64), encryptedHTML = encryptedMsg.substring(64), decryptedHMAC = CryptoJS.HmacSHA256(encryptedHTML, CryptoJS.SHA256(passphrase).toString()).toString(); if (decryptedHMAC !== encryptedHMAC) { alert('Bad passphrase !'); return; } localStorage.setItem(\"passphrase\", passphrase); var plainHTML = CryptoJS.AES.decrypt(encryptedHTML, passphrase).toString(CryptoJS.enc.Utf8); document.write(plainHTML); document.close(); });","raw":null,"content":null},{"title":"","date":"2018-11-01T22:58:18.997Z","updated":"2018-02-21T12:57:00.000Z","comments":true,"path":"strategies/PETER的外資買賣策略_finlab.html","permalink":"https://www.finlab.tw/strategies/PETER的外資買賣策略_finlab.html","excerpt":"","text":"PETER的外資買賣策略 .staticrypt-hr { margin-top: 20px; margin-bottom: 20px; border: 0; border-top: 1px solid #eee; } .staticrypt-page { width: 360px; padding: 8% 0 0; margin: auto; box-sizing: border-box; } .staticrypt-form { position: relative; z-index: 1; background: #FFFFFF; max-width: 360px; margin: 0 auto 100px; padding: 45px; text-align: center; box-shadow: 0 0 20px 0 rgba(0, 0, 0, 0.2), 0 5px 5px 0 rgba(0, 0, 0, 0.24); } .staticrypt-form input { outline: 0; background: #f2f2f2; width: 100%; border: 0; margin: 0 0 15px; padding: 15px; box-sizing: border-box; font-size: 14px; } .staticrypt-form .staticrypt-decrypt-button { text-transform: uppercase; outline: 0; background: rgba(77,77,255,1); width: 100%; border: 0; padding: 15px; color: #FFFFFF; font-size: 14px; cursor: pointer; } .staticrypt-form .staticrypt-decrypt-button:hover, .staticrypt-form .staticrypt-decrypt-button:active, .staticrypt-form .staticrypt-decrypt-button:focus { background: #43A047; } .staticrypt-html { height: 100%; } .staticrypt-body { margin-bottom: 1em; background: rgba(77,77,255,1); /* fallback for old browsers */ background: -webkit-linear-gradient(right, rgba(77,77,255,1), rgba(120,0,255,1)); background: -moz-linear-gradient(right, rgba(77,77,255,1), rgba(120,0,255,1)); background: -o-linear-gradient(right, rgba(77,77,255,1), rgba(120,0,255,1)); background: linear-gradient(to left, rgba(77,77,255,1), rgba(120,0,255,1)); font-family: \"Arial\", sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; } .staticrypt-instructions { margin-top: -1em; margin-bottom: 1em; } .staticrypt-title { font-size: 1.5em; } .staticrypt-footer { position: fixed; height: 20px; font-size: 16px; padding: 2px; bottom: 0; left: 0; right: 0; margin-bottom: 0; } .staticrypt-footer p { margin: 2px; text-align: center; float: right; } .staticrypt-footer a { text-decoration: none; } PETER的外資買賣策略 document.addEventListener(\"DOMContentLoaded\", function(event) { //do work var passphrase = localStorage.getItem(\"passphrase\"); if (passphrase === null) return; document.getElementById(\"staticrypt-password\").value = passphrase; document.getElementsByClassName(\"staticrypt-decrypt-button\")[0].click(); console.log(document.getElementsByClassName(\"staticrypt-decrypt-button\")[0]); }); document.getElementById('staticrypt-form').addEventListener('submit', function(e) { e.preventDefault(); var passphrase = document.getElementById('staticrypt-password').value, encryptedMsg = '', encryptedHMAC = encryptedMsg.substring(0, 64), encryptedHTML = encryptedMsg.substring(64), decryptedHMAC = CryptoJS.HmacSHA256(encryptedHTML, CryptoJS.SHA256(passphrase).toString()).toString(); if (decryptedHMAC !== encryptedHMAC) { alert('Bad passphrase !'); return; } localStorage.setItem(\"passphrase\", passphrase); var plainHTML = CryptoJS.AES.decrypt(encryptedHTML, passphrase).toString(CryptoJS.enc.Utf8); document.write(plainHTML); document.close(); });","raw":null,"content":null},{"title":"","date":"2018-11-01T22:58:18.998Z","updated":"2018-02-21T12:57:00.000Z","comments":true,"path":"strategies/杜邦分析策略_finlab.html","permalink":"https://www.finlab.tw/strategies/杜邦分析策略_finlab.html","excerpt":"","text":"杜邦分析策略 .staticrypt-hr { margin-top: 20px; margin-bottom: 20px; border: 0; border-top: 1px solid #eee; } .staticrypt-page { width: 360px; padding: 8% 0 0; margin: auto; box-sizing: border-box; } .staticrypt-form { position: relative; z-index: 1; background: #FFFFFF; max-width: 360px; margin: 0 auto 100px; padding: 45px; text-align: center; box-shadow: 0 0 20px 0 rgba(0, 0, 0, 0.2), 0 5px 5px 0 rgba(0, 0, 0, 0.24); } .staticrypt-form input { outline: 0; background: #f2f2f2; width: 100%; border: 0; margin: 0 0 15px; padding: 15px; box-sizing: border-box; font-size: 14px; } .staticrypt-form .staticrypt-decrypt-button { text-transform: uppercase; outline: 0; background: rgba(77,77,255,1); width: 100%; border: 0; padding: 15px; color: #FFFFFF; font-size: 14px; cursor: pointer; } .staticrypt-form .staticrypt-decrypt-button:hover, .staticrypt-form .staticrypt-decrypt-button:active, .staticrypt-form .staticrypt-decrypt-button:focus { background: #43A047; } .staticrypt-html { height: 100%; } .staticrypt-body { margin-bottom: 1em; background: rgba(77,77,255,1); /* fallback for old browsers */ background: -webkit-linear-gradient(right, rgba(77,77,255,1), rgba(120,0,255,1)); background: -moz-linear-gradient(right, rgba(77,77,255,1), rgba(120,0,255,1)); background: -o-linear-gradient(right, rgba(77,77,255,1), rgba(120,0,255,1)); background: linear-gradient(to left, rgba(77,77,255,1), rgba(120,0,255,1)); font-family: \"Arial\", sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; } .staticrypt-instructions { margin-top: -1em; margin-bottom: 1em; } .staticrypt-title { font-size: 1.5em; } .staticrypt-footer { position: fixed; height: 20px; font-size: 16px; padding: 2px; bottom: 0; left: 0; right: 0; margin-bottom: 0; } .staticrypt-footer p { margin: 2px; text-align: center; float: right; } .staticrypt-footer a { text-decoration: none; } 杜邦分析策略 document.addEventListener(\"DOMContentLoaded\", function(event) { //do work var passphrase = localStorage.getItem(\"passphrase\"); if (passphrase === null) return; document.getElementById(\"staticrypt-password\").value = passphrase; document.getElementsByClassName(\"staticrypt-decrypt-button\")[0].click(); console.log(document.getElementsByClassName(\"staticrypt-decrypt-button\")[0]); }); document.getElementById('staticrypt-form').addEventListener('submit', function(e) { e.preventDefault(); var passphrase = document.getElementById('staticrypt-password').value, encryptedMsg = '', encryptedHMAC = encryptedMsg.substring(0, 64), encryptedHTML = encryptedMsg.substring(64), decryptedHMAC = CryptoJS.HmacSHA256(encryptedHTML, CryptoJS.SHA256(passphrase).toString()).toString(); if (decryptedHMAC !== encryptedHMAC) { alert('Bad passphrase !'); return; } localStorage.setItem(\"passphrase\", passphrase); var plainHTML = CryptoJS.AES.decrypt(encryptedHTML, passphrase).toString(CryptoJS.enc.Utf8); document.write(plainHTML); document.close(); });","raw":null,"content":null},{"title":"","date":"2018-11-01T22:58:19.004Z","updated":"2018-02-21T12:57:00.000Z","comments":true,"path":"strategies/投信小市值跟買_finlab.html","permalink":"https://www.finlab.tw/strategies/投信小市值跟買_finlab.html","excerpt":"","text":"投信小市值跟買 .staticrypt-hr { margin-top: 20px; margin-bottom: 20px; border: 0; border-top: 1px solid #eee; } .staticrypt-page { width: 360px; padding: 8% 0 0; margin: auto; box-sizing: border-box; } .staticrypt-form { position: relative; z-index: 1; background: #FFFFFF; max-width: 360px; margin: 0 auto 100px; padding: 45px; text-align: center; box-shadow: 0 0 20px 0 rgba(0, 0, 0, 0.2), 0 5px 5px 0 rgba(0, 0, 0, 0.24); } .staticrypt-form input { outline: 0; background: #f2f2f2; width: 100%; border: 0; margin: 0 0 15px; padding: 15px; box-sizing: border-box; font-size: 14px; } .staticrypt-form .staticrypt-decrypt-button { text-transform: uppercase; outline: 0; background: rgba(77,77,255,1); width: 100%; border: 0; padding: 15px; color: #FFFFFF; font-size: 14px; cursor: pointer; } .staticrypt-form .staticrypt-decrypt-button:hover, .staticrypt-form .staticrypt-decrypt-button:active, .staticrypt-form .staticrypt-decrypt-button:focus { background: #43A047; } .staticrypt-html { height: 100%; } .staticrypt-body { margin-bottom: 1em; background: rgba(77,77,255,1); /* fallback for old browsers */ background: -webkit-linear-gradient(right, rgba(77,77,255,1), rgba(120,0,255,1)); background: -moz-linear-gradient(right, rgba(77,77,255,1), rgba(120,0,255,1)); background: -o-linear-gradient(right, rgba(77,77,255,1), rgba(120,0,255,1)); background: linear-gradient(to left, rgba(77,77,255,1), rgba(120,0,255,1)); font-family: \"Arial\", sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; } .staticrypt-instructions { margin-top: -1em; margin-bottom: 1em; } .staticrypt-title { font-size: 1.5em; } .staticrypt-footer { position: fixed; height: 20px; font-size: 16px; padding: 2px; bottom: 0; left: 0; right: 0; margin-bottom: 0; } .staticrypt-footer p { margin: 2px; text-align: center; float: right; } .staticrypt-footer a { text-decoration: none; } 投信小市值跟買 document.addEventListener(\"DOMContentLoaded\", function(event) { //do work var passphrase = localStorage.getItem(\"passphrase\"); if (passphrase === null) return; document.getElementById(\"staticrypt-password\").value = passphrase; document.getElementsByClassName(\"staticrypt-decrypt-button\")[0].click(); console.log(document.getElementsByClassName(\"staticrypt-decrypt-button\")[0]); }); document.getElementById('staticrypt-form').addEventListener('submit', function(e) { e.preventDefault(); var passphrase = document.getElementById('staticrypt-password').value, encryptedMsg = '', encryptedHMAC = encryptedMsg.substring(0, 64), encryptedHTML = encryptedMsg.substring(64), decryptedHMAC = CryptoJS.HmacSHA256(encryptedHTML, CryptoJS.SHA256(passphrase).toString()).toString(); if (decryptedHMAC !== encryptedHMAC) { alert('Bad passphrase !'); return; } localStorage.setItem(\"passphrase\", passphrase); var plainHTML = CryptoJS.AES.decrypt(encryptedHTML, passphrase).toString(CryptoJS.enc.Utf8); document.write(plainHTML); document.close(); });","raw":null,"content":null},{"title":"","date":"2018-11-01T22:58:18.998Z","updated":"2018-02-21T12:57:00.000Z","comments":true,"path":"strategies/綜合大雜燴_finlab.html","permalink":"https://www.finlab.tw/strategies/綜合大雜燴_finlab.html","excerpt":"","text":"綜合大雜燴 .staticrypt-hr { margin-top: 20px; margin-bottom: 20px; border: 0; border-top: 1px solid #eee; } .staticrypt-page { width: 360px; padding: 8% 0 0; margin: auto; box-sizing: border-box; } .staticrypt-form { position: relative; z-index: 1; background: #FFFFFF; max-width: 360px; margin: 0 auto 100px; padding: 45px; text-align: center; box-shadow: 0 0 20px 0 rgba(0, 0, 0, 0.2), 0 5px 5px 0 rgba(0, 0, 0, 0.24); } .staticrypt-form input { outline: 0; background: #f2f2f2; width: 100%; border: 0; margin: 0 0 15px; padding: 15px; box-sizing: border-box; font-size: 14px; } .staticrypt-form .staticrypt-decrypt-button { text-transform: uppercase; outline: 0; background: rgba(77,77,255,1); width: 100%; border: 0; padding: 15px; color: #FFFFFF; font-size: 14px; cursor: pointer; } .staticrypt-form .staticrypt-decrypt-button:hover, .staticrypt-form .staticrypt-decrypt-button:active, .staticrypt-form .staticrypt-decrypt-button:focus { background: #43A047; } .staticrypt-html { height: 100%; } .staticrypt-body { margin-bottom: 1em; background: rgba(77,77,255,1); /* fallback for old browsers */ background: -webkit-linear-gradient(right, rgba(77,77,255,1), rgba(120,0,255,1)); background: -moz-linear-gradient(right, rgba(77,77,255,1), rgba(120,0,255,1)); background: -o-linear-gradient(right, rgba(77,77,255,1), rgba(120,0,255,1)); background: linear-gradient(to left, rgba(77,77,255,1), rgba(120,0,255,1)); font-family: \"Arial\", sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; } .staticrypt-instructions { margin-top: -1em; margin-bottom: 1em; } .staticrypt-title { font-size: 1.5em; } .staticrypt-footer { position: fixed; height: 20px; font-size: 16px; padding: 2px; bottom: 0; left: 0; right: 0; margin-bottom: 0; } .staticrypt-footer p { margin: 2px; text-align: center; float: right; } .staticrypt-footer a { text-decoration: none; } 綜合大雜燴 document.addEventListener(\"DOMContentLoaded\", function(event) { //do work var passphrase = localStorage.getItem(\"passphrase\"); if (passphrase === null) return; document.getElementById(\"staticrypt-password\").value = passphrase; document.getElementsByClassName(\"staticrypt-decrypt-button\")[0].click(); console.log(document.getElementsByClassName(\"staticrypt-decrypt-button\")[0]); }); document.getElementById('staticrypt-form').addEventListener('submit', function(e) { e.preventDefault(); var passphrase = document.getElementById('staticrypt-password').value, encryptedMsg = '', encryptedHMAC = encryptedMsg.substring(0, 64), encryptedHTML = encryptedMsg.substring(64), decryptedHMAC = CryptoJS.HmacSHA256(encryptedHTML, CryptoJS.SHA256(passphrase).toString()).toString(); if (decryptedHMAC !== encryptedHMAC) { alert('Bad passphrase !'); return; } localStorage.setItem(\"passphrase\", passphrase); var plainHTML = CryptoJS.AES.decrypt(encryptedHTML, passphrase).toString(CryptoJS.enc.Utf8); document.write(plainHTML); document.close(); });","raw":null,"content":null}],"posts":[{"title":"Bokeh 探索頻道(2)~客製化技術圖表升級","slug":"bokeh-stock-chart-with-technical-analysis","date":"2020-06-26T04:27:53.000Z","updated":"2020-06-26T04:34:24.852Z","comments":true,"path":"bokeh-stock-chart-with-technical-analysis/","link":"","permalink":"https://www.finlab.tw/bokeh-stock-chart-with-technical-analysis/","excerpt":"","text":"改造動機上次介紹了Bokeh厲害的地方，那可不可以應用到投資圖表的繪製呢？在Hahow課程：『Python 理財：打造小資族選股策略』的單元20中，韓老師用Talib和matplotlib套件示範了如何提取資料和客製化技術圖表繪圖，點出應用方向，然而課程重點是放在選股，不是在視覺化，圖表功能比較簡單，當時Bokeh也沒那麼厲害。 有些同學希望能有更精美的圖表可使用，搭配課程精彩的選股程式技巧，不就更完美了？這個願望今天就可以實現，後面有銜接課程的程式碼直接提供使用。現在有Bokeh的幫忙，用Python也能打造不錯的互動圖表效果，接下來就要綜合小資族課程、Bokeh、網路上各路技巧，來打造適用於Hahow課程的新圖表。沒參與課程的可以用github 連結裡的demo_json檔來試試，只要資料格式對應，都可使用。 github:https://github.com/benbilly3/bokeh_explore使用的程式檔為technical_chart。 繪圖技巧說明寫Python就要利用其他魔法師的咒語，省時有效率，先來Bokeh gallery看看沒有範例。結果有現成的Ｋ線圖範例，太好了！ 雖然仍是陽春的靜態圖，但至少有了改造藍圖，從官網的程式碼：https://docs.bokeh.org/en/latest/docs/gallery/candlestick.html 可以發現bokeh輕鬆地用pandas分類紅黑棒資料，再用segment畫引線和用vbar畫長棒圖。眼尖的人可以發現股價碰到假日的時候會有空值，這造成閱讀上有些礙眼，能否有讓時間序列日期資料的解決辦法呢？ 在還不熟bokeh的時候，stackoverflow也是我們好朋友．．．處理關鍵在讓日期轉為文字，不用會自動補假日日期的datetime。 1234fig.xaxis.major_label_overrides = &#123; i: date.strftime('%Y/%m/%d') for i, date in enumerate(pd.to_datetime(df[\"date\"])) # pd.date_range(start='3/1/2000', end='1/08/2018') &#125; bokeh是物件導向繪圖庫，都封裝相當好，基本上沒啥程式技巧，就像玩樂高積木一樣，搜尋工具來堆，不難，比較繁瑣，內容頗多。接著主要會實踐下列功能到圖表，有興趣學的可以看連結。 1. figure圖紙設定，bokeh各種models應用https://docs.bokeh.org/en/latest/docs/reference/plotting.html 2. 處理假日日期造成的資料不連續問題，x_range overwrite技巧https://stackoverflow.com/questions/23585545/how-do-i-make-bokeh-omit-missing-dates-when-using-datetime-as-x-axis 3. hover互動資料顯示https://docs.bokeh.org/en/latest/docs/user_guide/tools.html 4. legend物件控制，從label控制線圖開關。將legend移到圖表外，讓版面清晰。https://stackoverflow.com/questions/26254619/position-of-the-legend-in-a-bokeh-plothttps://docs.bokeh.org/en/latest/docs/user_guide/interaction/legends.html 5. 位移、縮放、十字線、重置、存檔工具https://docs.bokeh.org/en/latest/docs/user_guide/tools.html 6. second y_ranges繪製(使用雙軸)https://docs.bokeh.org/en/latest/docs/user_guide/plotting.html#userguide-plotting-twin-axes 7. 利用vbar和segment快速繪製k線,並將均線帶入。https://docs.bokeh.org/en/latest/docs/gallery/candlestick.html 8. 建立技術線子圖組https://docs.bokeh.org/en/latest/docs/user_guide/layout.html#userguide-layout 經過神奇的魔法就有hahow課程的進化版，包含以上的功能，實踐了不錯的效果！加入output_file(‘檔名’)就可產生html檔在瀏覽器使用，只要再寫一個傳導查詢變數的API，就能串接做一個服務出來，之後會講用FastApi寫後端來串Bokeh。 課程相容資料提取工具從python小資族的sqlite提取資料若DB為pickle檔，須將pd.read_sql那行修改為read_pickle，並要注意格式。 如果有上過韓老師python小資族，可將course11.ipynb上頭用read_sql取資料的程式改為下部份取資料，輸入股號和資料開始日期，產出的data丟入後面的繪圖程式，即可產生互動式圖表。1234567891011121314151617181920212223242526272829303132333435import pandas as pdimport sqlite3import osimport jsonfrom talib import abstractdef get_price_data(stock_id,date): # connect to sql conn = sqlite3.connect(os.path.join('data', \"data.db\")) # read data from sql df = pd.read_sql(f\"select stock_id,證券名稱, date, 開盤價, 收盤價, 最高價, 最低價, 成交股數 from price where stock_id='&#123;stock_id&#125;' and date &gt; '&#123;date&#125;'\", conn, index_col=['date']) # rename the columns of dataframe df.index=df.index.astype(str).str.split(\" \").str[0] df.rename(columns=&#123;'收盤價':'close','證券名稱':'name', '開盤價':'open', '最高價':'high', '最低價':'low', '成交股數':'volume'&#125;, inplace=True) df['MA5']=df['close'].rolling(5).mean() df['MA10']=df['close'].rolling(10).mean() df['MA20']=df['close'].rolling(20).mean() df['MA60']=df['close'].rolling(60).mean() df['MA120']=df['close'].rolling(120).mean() df['volume']=df['volume']/1000 RSI = pd.DataFrame(abstract.RSI(df, timeperiod=12),columns=['RSI_12']) RSI['RSI_36']=abstract.RSI(df, timeperiod=36) RSI=RSI.to_dict() STOCH = abstract.STOCH(df).to_dict() MACD=abstract.MACD(df).to_dict() basic=df.iloc[-1,:2].to_dict() df=df.drop(columns=['stock_id','name']).to_dict() data=&#123;'basic':basic,'price_df':df,'RSI':RSI,'STOCH' :STOCH,'MACD':MACD &#125; return data 程式碼下載使用的繪圖程式檔為technical_chart，將get_price_data(stock_id,date)帶入technical_chart(json_df)即可繪圖，可到gitlab下載bokeh_explore。 github:https://github.com/benbilly3/bokeh_explore tags: bokeh","raw":null,"content":null,"categories":[{"name":"財經Python教學","slug":"財經Python教學","permalink":"https://www.finlab.tw/categories/財經Python教學/"}],"tags":[{"name":"python","slug":"python","permalink":"https://www.finlab.tw/tags/python/"},{"name":"資料視覺化","slug":"資料視覺化","permalink":"https://www.finlab.tw/tags/資料視覺化/"},{"name":"bokeh","slug":"bokeh","permalink":"https://www.finlab.tw/tags/bokeh/"}]},{"title":"策略最佳化是有效的嗎？（附程式碼）","slug":"backtesting-key-optimization","date":"2020-06-23T06:22:59.000Z","updated":"2020-06-23T13:00:28.977Z","comments":true,"path":"backtesting-key-optimization/","link":"","permalink":"https://www.finlab.tw/backtesting-key-optimization/","excerpt":"","text":"你有沒有用過 Python 、 Multicharts、R 等等的回測工具嗎？工具越來越強大，伴隨著平行運算，參數最佳化變得越來越容易但有時候，這些強大的工具，反而是一種陷阱！讓我們一步步走進陷阱而不自知 就連學術期刊都如此！一個策略可能有很多的參數，可以用來進行最佳化你會發現，當參數越多，越有可能會找到很好的回測結果但是，這樣的回測結果，究竟能不能在未來「重現」基本上是非常有疑慮的 舉一個例子假設我們有一個簡單的均線策略，當均線黃金交叉買入，死亡交叉賣出，在這個策略中，我們會有兩個參數，分別是兩條均線的參數，分別叫做 n1 和 n2假如我們現在要來最佳化，以下有兩種方法，你會選哪個呢？ 第一種最佳化方法： n1 從 10 ~ 100 n2 從 10 ~ 100 分別枚舉（暴力列舉）n1 跟 n2 在上述範圍內的所有可能，並且找最佳化後的結果 第二種最佳化方法跟上面雷同，但是 n1 跟 n2 只能從以下的數字枚舉 n1 從 [2, 5, 13, 21, 34, 55, 89] n2 從 [2, 5, 13, 21, 34, 55, 89] 選好了嗎？以下開始解說 假如你想找到最佳的報酬率，當然會選第一種方案呀！畢竟枚舉的數量多了，自然會找到更好的最佳解！而且現在電腦運算這麼快，第一種方法跟第二種方法，實際上都只需要幾秒鐘而已，只是多幾秒鐘，績效變高20％多好呀！ 但方案一真的那麼好嗎？事實是，使用第一種方法，找到過擬合（overfitting）的模型機率也非常高！你可以想像下面這三張圖，圖中每一個點，都代表著價格，一個能預測價格的模型，應該像中間這張圖，也就是模型跟價格實際的曲線非常接近，但假如我們求好心切，用各種方式，為模型增加各種變數，暴力枚舉，最後有可能會變成右邊那張圖片，連歷史的雜訊都給預測了，最後實際使用的時候，反而效果大打折扣。 為了避免產生 overfitting 的結果，我們在做參數最佳化時，就必需要非常小心，並且不要做過多優化什麼叫做「過多優化」？要怎麼樣才能避免呢？ 我們將用更客觀的角度，量化上述兩個最佳化的實驗，哪一個比較好！我們延續上一篇文章中的介紹，使用「the probability backtest overfitting」來分析，我們這兩種優化過程中 overfitting 的機率。 下方的實驗結果，都會是兩張圖左右並排，同樣是簡單的均線策略左邊是「最佳化方法一」，右邊是「最佳化方法二」首先，我們先做出均線策略，在不同參數下的色溫圖如下，我們可以發現，枚舉的「密度」上有很大的差異 由於「最佳化方法一」用了很多的參數，自然會得到比較連續的函數，然而「最佳化方法二」的參數都比較不連續，代表這樣比較不好嗎？ 所以究竟哪種方法好？所以我們可以利用上一篇文章介紹的「the probability of backtest overfitting」來幫我們比較這兩種方法的差異： 上圖中，是overfitting的機率分佈圖，左邊是「最佳化方法一」，右邊是「最佳化方法二」我們是使用 sharpe ratio 來當作最後的績效指標，採樣時，會從「樣本內」的最佳參數，測試在「樣本外」是否也一樣好，該最佳參數在「樣本內」是第一名，而在樣本外，至少要是「前50％」我們才會說這樣的優化是有效果的（雖然還是滿寬鬆的XD） 上圖中，大於 0 的樣本，就是優化後有效果的，而小於 0 的樣本，代表優化並沒有效果。 上圖左圖，分佈偏左側（小於零），代表 overfitting 的機率比較大而右邊的圖中，分佈比較偏向右邊（x &gt; 0），代表其 overfitting 的機率比較小 第一階段：右邊的「最佳方法二」勝利 實際的原理，可以參考上一篇文章「the probability of backtest overfitting」來獲得更詳細的介紹喔！ 除了以上的機率，該文章作者也提供不同的角度，檢視overfitting的問題， 像是 Perfornace degradation在「樣本內」最好的測略，其績效會在「樣本外」衰減，以下就是「樣本內的績效跟樣本外的績效」比較圖左邊是「最佳化方法一」，右邊是「最佳化方法二」X軸是「樣本內」績效，而Y軸是樣本外績效，績效以 sharpe ratio 當代表，可以換成 return、maximum drawdown 等等也可以： 上面兩張圖，將「樣本內」最佳數值，跟「樣本外」的數值做比較，你會以為「樣本內」績效，應該要跟「樣本外」績效成「正相關」但現實是，大多數最佳化，都會出現這樣的「負相關 」，稱為 Performance degradation簡而言之，你會發現 「樣本內」sharpe ratio 越高，則「樣本外」sharpe ratio 越低代表我們找到的績效越好，越可能是 overfitting 的結果！是一件非常可怕的事情！ 要怎麼比較上述兩張圖的好壞呢？以視覺上來說，可以看哪張圖的 y 軸數值平均來說比較大，以統計上來說，可以用線性回歸比較斜率（越負相關越不好）左邊的回歸後，斜率是 -1.034而右邊是 -0.988 第二階段：右邊的「最佳方法二」勝利稍微好一點而已 感覺沒有差很多，有沒有更好的判斷法？另外我們可以用 Stochastic dominance 來判別「究竟要不要使用最佳化後的結果」Stochastic dominance 可以想像是學校的兩個班級，A 班跟 B 班因為 A 班是資優般的關係，所以針對一次模擬考，60分以上的人比 B 班多，是很正常的假如我們發現 A 班 10 分、20分、30分、…90分以上的人數都比 B 班相同分數以上的人多，則我們就說 A 班的成績是「隨機優勢」於 B 班的（A has first-level stochastic domoinance over B）（好難翻譯呀！） 這邊的 A 跟 B，所指的就是「優化前」跟「優化後」的比較，下圖中，左邊是「最佳化方法一」，右邊是「最佳化方法二」，其中的 optimized-IS 就是指用了「樣本內」優化後的策略，的累積分佈圖 non-optimize-OOS 是指沒有優化過，隨機採樣的分佈圖 其中 x 軸是績效，也就是 sharpe ratio而 y 軸是累積的樣本數量 假如累積的比較比較慢，代表整體績效比較好，因為分數較高的樣本都在後面， 我們可以看到，上圖右圖中，優化過的策略，累積的比較慢，所以代表「最佳化方法二」是有效果的，也代表我們用優化後的策略，從統計的角度來說「優化成功的期望值是偏正的」所以第三階段：右邊的「最佳方法二」再次勝利 你可以從colab上直接運行實驗結果 待改進之處當然任何研究都會有優缺點的，此篇文章的作者提及一些待改進的空間， 就算是有 overfitting 的狀況，當中還是可能會有針對「樣本外」效果很好的策略，舉一個例子，上述的兩種最佳化方法，其實非常巧合的，都優化在（13、21）這個參數位置，也就是說，這兩種方法最後的策略效果一樣，但是過程是不一樣。不過換一種商品，相信也會有不同的特性，究竟整體對策略研發而言，可以進步多少，還有待後續的驗證 此方法並沒有考慮參數與模型之間的關係，所以無法將考慮高原參數給考量進去，或許可以藉由機器學習將參數做 clustering 並且以「多參數組」來取代單一「樣本內」最佳參數，來判定過擬合的機率。 假如長時間使用，理論上，這個方法會變成越來越無效！因為使用了這種「避免overfitting的方法」，最終你有可能讓你不小心 overfit 這種「避免 overfitting 的方法」（overfit the algorithm that prevent overfitting）。我想這應該是所有這類演算法的通病吧！ overfitting 真的是魔王中的魔王，創造夢境中的夢境！夢裡中樂透，醒來發現一場夢，又中樂透，醒來又發現一場夢！","raw":null,"content":null,"categories":[{"name":"選股策略","slug":"選股策略","permalink":"https://www.finlab.tw/categories/選股策略/"}],"tags":[{"name":"python","slug":"python","permalink":"https://www.finlab.tw/tags/python/"}]},{"title":"策略優化 - 如何避免過擬合？","slug":"backtesting-overfitting-probability","date":"2020-06-20T02:40:25.000Z","updated":"2020-06-23T08:54:19.507Z","comments":true,"path":"backtesting-overfitting-probability/","link":"","permalink":"https://www.finlab.tw/backtesting-overfitting-probability/","excerpt":"","text":"當你做回測做久了，就會發現，找到「歷史報酬率」好的策略很簡單，但是找到「未來報酬率」好的策略非常難。原因在於做了過多的參數枚舉與優化，當樣本數夠大，自然會有極端的數據產生，就像是夜路走多了會碰到鬼，人多必有白癡，樹多必有枯枝，就像是量子力學中，波函數\b坍縮成我們所處的現實，代表著均值，但在極端的多重宇宙樣本中，你也有可能是總統，代表著眾多巧合下的極端事件。 本文就是用口語的方式，帶你瞭解如何判斷過擬合的演算法牛頓從蘋果落地的現象，發現了萬有引力，F=ma，因為實驗的雜訊很小（風、熱能散失等等），才能有經典簡潔的公式，然而把牛頓的實驗，換到財經領域時，可能就不是這麼管用了，當我們在建模時，價格的雜訊遠大於規律， 我們很有可能是優化雜訊，而非優化價格的規律。要怎麼辨別這兩者的不同呢？我們可以先從直觀的角度出發，究竟歷史上成功的偉人，Bill Gates、Steve Jobs、Elon Musk，這些科技巨擘，他們之所以能夠有今天的成就，是一連串的巧合，還是他們有一些人格特質，促使他們的成功？另一個極端的例子，假如今天某人中了樂透彩而一夕爆富，那很明顯，他很可能是多重宇宙中，非常成功的一個版本，但他的成功，可能並非來自他的人格特質，而是來自運氣。今天就運氣跟命運，來討論策略模型過擬合的問題。 模型的過擬合，就像是簽樂透彩，只要參數夠多了，總會中獎。所以策略績效好，究竟是不是運氣好，最重要的事，就是要確保「實驗是有效的」。如何定義實驗是有效的呢？ 樣本內的「最佳參數」在樣本外的「績效」也是顯著的機率是高的 聽不懂？別走，讓我舉個例子這邊的「樣本內」就是指我們現在的現實世界，已經發生了的事情，例如我們知道 Steve Jobs 是頻果創辦人，將科技與時尚結合，促進科技的進步功不可沒，所以他就是我們在樣本內的「最佳人選」。而「樣本外」就是指那些我們沒見過的多重宇宙，在多重宇宙中，假如都有 Steve Jobs 這個人，而他都有一番豐功偉業，那就代表那是他貨真價實的實力。 回到策略的角度，如何驗證「貨真價實的策略」？最簡單的方式，一般我們會使用 hold-out，將歷史資料分成樣本內（in-sample IS）和樣本外（out-of-sampe OOS）並且在 IS 做最佳化後，再用 OOS 驗證，這樣的方法有幾個缺點： 由於 IS 跟 OOS 都是人為定義，所以當重複優化很多次後，還是會對於 OOS 的績效越來越熟悉，最後不免還是用了 OOS 的資訊來設計模型 資料量的問題，回測跟驗證都需要一定長度的歷史數據，將歷史數據分成 IS 跟 OOS 顯然有點浪費 OOS 通常是時間序列的尾端，代表近期的資料，對於策略效能有決定性的影響，然而卻不能拿來開發 所以比較好的方法是？The probability of backtest overfitting的作者是這樣做的：Bailey, D.H., Borwein, J., Lopez de Prado, M. and Zhu, Q.J., 2016. The probability of backtest overfitting. Journal of Computational Finance, forthcoming. 1. 確定參數效果真的比較好任何策略都有好與不好的時候，要確定參數效果很好，不是看績效是正的就好，而是要跟其他參數的績效作比較，例如最近台股上漲，雞犬升天，所以任何人投資績效都是正的，但不帶表大家都是投資高手，所以就算績效是正的，還要看績效的排名才行！ 所以論文中的作者，針對所有參數產生出來績效，從「樣本內」找到「最佳參數」，並且將「樣本外的績效」由小到大排名，並且觀察「最佳參數」是否位於前 1/2 的機率 2. 產生多重的 IS 跟 OOS假如只有一組 IS 跟 OOS 實再是太少了，這樣驗證的樣本會不足，所以作者不使用「歷史數據」來區分 IS 跟 OOS，而是將回測整個跑完後，將績效的時間序列切成 S 份，任選 S/2 份當作 IS，其他當作 OOS，這樣的話可以產生超多種組合 實驗結果：下圖就是作者使用此方法的實驗範例， x 代表「最佳參數」在「樣本外」的效果，越右邊代表效果越好，而 y 軸是樣本的數量我們會發現，下圖這個例子，整個分佈偏向左邊，也就是 x 軸小於零，代表其實最佳化後，大部分的績效都是比較差的！每100個樣本，就有74個樣本，最佳化後的效果小於績效的中位數，所以 74% 的機率，最佳化後的效果比較差 一個比較好的策略，應該會是如下圖，整個每100個樣本，只有4個樣本，最佳化後的效果小於績效的中位數，所以只有 4% 的機率，有過擬合的風險，算是一個很不錯的參數優化過程 結果我上網找了一下，都沒有 python 的程式碼所以\b假如大家有興趣，我之後可以提供這篇 paper 的程式碼，雖然但我不確定大家有沒有興趣就是了XDDD 後記：大家好像滿有興趣的，所以準備了下一篇程式和數據分享！趕快來看看吧！","raw":null,"content":null,"categories":[{"name":"選股策略","slug":"選股策略","permalink":"https://www.finlab.tw/categories/選股策略/"}],"tags":[]},{"title":"AI讀書心得：人工智慧在台灣：產業轉型的契機與挑戰","slug":"ai-in-taiwan","date":"2020-06-15T03:48:37.000Z","updated":"2020-06-15T06:00:23.063Z","comments":true,"path":"ai-in-taiwan/","link":"","permalink":"https://www.finlab.tw/ai-in-taiwan/","excerpt":"","text":"書目連結：https://www.books.com.tw/products/0010821934 前言：陳昇瑋博士是台灣人工智慧學界名人，除了是中研院院士與台灣人工智慧學校的CEO，也致力於人工智慧的產官學合作、落地化應用，不是純學術的學者，而是入世科學家。不幸的是，陳博士於今年因意外離世，無法繼續完成他的夢想。這本2019年出版的著作說明他對台灣AI產業發展的理想，也以淺顯易懂的文字介紹人工智慧為何？就算完全不懂程式，也能輕鬆理解概論，如果你是開發者，也能從此書了解產業脈絡與實務應用。總結來說是一本人人必讀的AI通識書，以下節錄一些重點和想法。 AI進程AI浪潮在過去發生過兩波，但後來都冷卻掉，新一波在2010年後由圍棋大師：Alpha Go引爆第三波熱潮，受惠於算力強大的晶片、大數據基礎、演算法成熟的天時地利人合，許多以前表現不如預期的項目，如影像辨識、語音辨識，都有突破性的進展，且在產業界有成功應用，如醫療判讀、產品瑕疵檢測，讓許多科學家斷言這波AI浪潮和以前不一樣了，不再空有理論，而是逐步影響人類的生活。 不過目前的AI仍屬『弱人工智慧』，也就是無創造力的AI，其學習完全依賴人類輸入的資料，具主動思考、感情的『強人工智慧』在短期(50年內)連影子都沒有，且無法用目前機器學習演算法來發展，應該會以另一套新技術來發展，所以科幻片如西部世界或全民公敵的情節、一大堆工作被取代的推想，純屬想像，目前只有重複性高的工作如客服、檢測員、駕駛等重複性高的工作會被逐漸取代，其他行業趨勢為人機合作。 機器學習簡單分 監督式學習：人類先標註label，如標註是狗還是貓，讓電腦填鴨式學習，目前90%算法都用這。 非監督式學習：不先標註label，讓電腦自動去依照變數去分群，資料科學家再判讀分群結果的意義，讓電腦學習自己去分類。 深度學習：機器學習演算法的一隻，與一般機器學習差異在，不用先人工作特徵擷取(做指標)，讓電腦去找特徵，如不用給電腦看KD值，只丟價量資料讓電腦自己生成指標。在降低人為涉入 AI產業化的難題以前硬體是問題，現在晶片算力強、伺服器便宜，現在比較麻煩的是資料和人材問題。 技術債-資料處理基礎建設:沒有資料，演算法再強也沒用，大數據不是量多就好，質量更重要，不然做出來的只是自己爽的Trash。陳博士蠻多youtube影音資源可看，有一篇就在說醫學資料label標註的問題，若視網膜影像只給一位醫生標註有無病變，誤差率很高，同一張圖給33位醫生看，只有60%影像是看法全部一致，可見1.資料要給數位專家多數決標註、2.人類判讀不穩定性很高，但要請專家來標註資料，這成本可不低，企業會願意花錢處理資料嗎？ 截自陳教授演講：https://www.youtube.com/watch?v=OddYM6aq-zM 另外具筆者工作經驗，許多企業ERP、CRM、EC外包給多廠商做，資料庫系統與格式都不同，光日期就有好幾種格式，或是沒有埋紀錄使用者操作的程式，在後來想導入AI推薦系統或精準行銷時，會在資料處理和搜集遇到困難，有多少企業願意先花大把時間還完技術債？ AI人材困境現今AI人材供需失衡，且技術迭代太快(畢業3年後，原先技術就偏老)，要找有產業經驗加懂最新演算法的很難，因為剛畢業的新鮮人沒經驗、產業老鳥沒太多時間學新技術(台灣習慣省人力成本，老闆很難放你平日丟下工作去學新技術)，台灣仍以硬體代工為王，純軟工的企業待遇差國外一大截，造成人材不是往豬屎屋跑，就是遠走高飛，上市櫃軟體企業多做代理、維護追求短期獲利，無論是演算法開發、雲平台服務都落後國外甚多。 作者指出企業計畫導入AI時，必須由上而下的支持，AI專案不能用傳統KPI定義績效，經理人須掃除管理障礙，因為初期會花很多時間還技術債和試誤，應該用投資新創以小博大的視角來評斷，如投入獲利的10%來養AI拚未來趨勢領先權，若成功，報酬率會很高;若失敗，也不影響太多主體獲利。經理人不一定要很懂程式，但一定要對AI適合解決哪些問題、企業待解決問題的優先權、跨部門整合溝通有足夠理解。資料量缺乏、不可知情境多的，機器學習能幫助的就有限。 團隊工作流培養厲害的工程師很重要，培養了解AI的老闆更重要，工程師才能少受點折磨。具我目前在產業的經驗，完整的團隊配置是： 資料工程師：蒐集與清洗資料 機器學習工程師：特徵擷取、套用或開發演算法、建模 資料科學家：領導工程團隊，訂定研究方向、判讀商業價值。 UX Resercher，沒錢請資料科學家的公司，可能請使用者體驗研究員來設計解決方案，補足工程師弱項。差在其不大懂程式，工程師要花較多時間溝通可行性。 一組前後端將模型判讀結果刻出API與BI(儀表板)畫面 PO or PM：經理人與市場部溝通問題優先權、目標、可能情境變數。 實際是…見&lt;打造第一隻AI團隊,陳教授著&gt;https://www.leadercampus.com.tw/desktop/course/free/960 產業案例陳教授最看好醫療應用的成功，原因是台灣有完整的健保資料庫，醫學資料生成也較穩定專業，label標記單純，現在知名的雲象科技(腫瘤檢測)、PTT創世神的AI Lab(基因檢測、病毒基因序)就屬代表。 再來由於台灣是硬體王國，有不少機器生產管理的數據可作機器故障預測、產品瑕疵檢測，製成優化應用也是看好的方向。如AOI光學檢測升級、布料染色配方、石化業工廠管理等等。以後物聯網更發達後，又有更多數據可導入。 金融業數據也齊全，陳教授生前也擔任玉山金科技長，將AI導入信用卡管理、洗錢法遵、投資理財等，近來台灣官方剛開放些保守態度，有創立監理沙盒給金融新創試驗金融數據，未來也有潛力。 總結文筆非常好的科普書，未來AI將會影響生活各層面，就算不投入此行，也該思考自己的生活會受何影響？AI會帶來什麼方便與危機？初探AI領域、課程的人在寫程式前最好先看這本書，你才不會覺得AI很抽象，再搭配陳教授生前的網路演講影音，更有成效，你也會敬佩這位科學家的理想與為台灣付出的努力！","raw":null,"content":null,"categories":[{"name":"AI看股票","slug":"AI看股票","permalink":"https://www.finlab.tw/categories/AI看股票/"}],"tags":[{"name":"機器學習","slug":"機器學習","permalink":"https://www.finlab.tw/tags/機器學習/"},{"name":"Machine Learning","slug":"Machine-Learning","permalink":"https://www.finlab.tw/tags/Machine-Learning/"},{"name":"AI","slug":"AI","permalink":"https://www.finlab.tw/tags/AI/"},{"name":"人工智慧","slug":"人工智慧","permalink":"https://www.finlab.tw/tags/人工智慧/"}]},{"title":"每天只要15分鐘 - 超簡單學會 Python 自動化投資比特幣","slug":"btc-summary","date":"2020-06-10T01:38:45.000Z","updated":"2020-06-13T11:57:16.050Z","comments":true,"path":"btc-summary/","link":"","permalink":"https://www.finlab.tw/btc-summary/","excerpt":"","text":"2017年12月，比特幣曾一天上漲20％！我的朋友說，他投資了加密貨幣，但過了一個禮拜，比特幣的價格開始崩盤，而他卻買在高點， 我就在想，有沒有一種投資方法，可以投資加密貨幣，卻不用承受這麼高的風險？於是開始研究基於加密貨幣的量化投資，寫成一系列的文章，共12篇，一篇只需要操作 15 分鐘分享給大家 為什麼要投資加密貨幣加密貨幣當前是個小眾市場，但是有很大的潛力從貨幣供給、基本面的角度，加密貨幣也是非常有市場的是值得投資的商品 德意志交易所（Deutsche Bórse）這個月發行了 BTC-E是由 100% BTC 支持的代表每個德國人，都可以從股票帳戶購買 BTC！ 當初被世界各國禁止，現在反而是逐漸開放，從期貨、現貨等，進入人們的日常，你還覺得加密貨幣沒有未來嗎？ 前導：（Python x Crypto (Part 1)：為什麼是比特幣？） 然而投資跟投機往往一線之間，像是比特幣波動就非常大！所以持有時加密貨幣一定要 少部位 用量化分析降低風險 買入時機： Miner Capitulation 指標長期投資，究竟要怎麼投資比特幣？可以參考一個很有用的指標，不過這個指標的原理，比較複雜，需要兩篇的時間慢慢解說： 用Python投資加密貨幣：比特幣操作最強指標(原理篇) 用Python投資加密貨幣：比特幣操作最強指標(技術篇) 學完後，你就可以製作出下面這種專業的操盤工具喔！ 上述指標在歷史上看來很準確但是可以投資的時機真的太少了畢竟比特幣的上漲跟下跌週期非常長 要怎麼樣可以安穩的投資加密貨幣呢？我們可以用量化投資的方式，只要重複做簡單的操作就可以有效控制風險！ 用 Python 做量化投資要打造一個可用的交易策略，可以參考下方的文章每一步程式碼都可以在 Colab 線上執行不需要安裝和設定 Python 環境，你可以現在就跟我們一起來做量化投資的實驗喔！ 獲得歷史數據：加密貨幣爬蟲撰寫 找出交易訊號：交易策略訊號實做 模擬回測績效：實做回測績效驗證 策略參數優化：二十倍的策略優化 學完上方單元，就能做出歷史績效高達20倍的比特幣交易策略喔！ 有了以上的研究，再加上你自己的創意，不斷的嘗試，就會有底氣，可以買入人生第一枚加密貨幣了！ 加密貨幣入金然而，究竟要怎麼買？買多少？這篇文章告訴你： 如何投資加密貨幣 加密貨幣入金 上面的文章總結，我們可以有兩種投資的方法： 小額長線投資 量化策略投資 其中，量化投資需要有紀律的操作，但是，萬一訊號出現在午夜，難道我們要熬夜操做嗎？也太累了吧？！ 所以我們也額外教大家怎麼做一個全自動化的策略我們是利用 Amazon Web Service （AWS）裡面的 Lambda 功能來自動監控策略，決定買入賣出的喔！ 策略雲端交易使用 AWS Lambda 的好處就是在每個月提供 400,000 GB-seconds 的額度照著下方的教學，基本上不太會超額讓你雲端免費自動下單交易！ 基本功能：AWS 簡易架設 \b用 AWS 算出策略多空 AWS 手機監控與雲端下單 有了雲端的自動執行策略，就可以讓你 忘記交易直到某一天 突然想起打開手機，發現帳戶資產多了個零！（為了押韻，純屬效果XD） 用最科學的方式，投資最先進的貨幣加密貨幣是體制上的顛覆，加密貨幣之於傳統貨幣，就像是Uber之於計程車行一樣，引入新的科技，必然會有一些配套措施來不及因應（詐騙、價格波動），也會引來舊有制度的既得利益者反感。 加密貨幣的發展有些顛頗，但長期來說，整個世代會朝著先進、便利的方向發展。或許一百年後的未來，大家會嘲笑現在的金融體制怎麼這麼不方便呢！ FinLab 的目標，就是希望可以在量化投資的路上，當大家的「武器製造商」！就讓我們一起用 Python 勇闖未來吧！","raw":null,"content":null,"categories":[{"name":"加密貨幣","slug":"加密貨幣","permalink":"https://www.finlab.tw/categories/加密貨幣/"}],"tags":[{"name":"python","slug":"python","permalink":"https://www.finlab.tw/tags/python/"},{"name":"比特幣","slug":"比特幣","permalink":"https://www.finlab.tw/tags/比特幣/"},{"name":"BTC","slug":"BTC","permalink":"https://www.finlab.tw/tags/BTC/"}]},{"title":"Bokeh 探索頻道(1)~Python互動式圖表函數庫初體驗","slug":"python-bokeh1-setup-and-first-impression","date":"2020-06-08T01:27:10.000Z","updated":"2020-06-26T04:32:19.382Z","comments":true,"path":"python-bokeh1-setup-and-first-impression/","link":"","permalink":"https://www.finlab.tw/python-bokeh1-setup-and-first-impression/","excerpt":"","text":"Python 視覺化套件使用經驗Python套件多，品質不一。用module之前，我習慣先看github星星確認認可度，有1000個以上多是品質保證，再看release history，看是否有被持續維護，那種2年以上沒新版本的，採坑機率高。Bokeh看來沒問題。 平常python視覺化的主力套件是matplotlib和seaborn，前者是20歲老套件，是視覺化元祖，許多套件基礎都是建構在matplotlib上，像seaborn就是，有更簡潔的寫法和精美圖例，兩者都以靜態視覺居多，缺乏變化性(或是要費點功)。Python守備範圍廣，但在網頁前端仍難以與Java Script抗衡，而D3.js函數庫也要花不少學習成本，有沒有辦法用Python做出JS動態視覺的效果？ Bokeh的出世，提供了Python與D3.js之間的橋梁，讓你可以用Python做出D3.js常用功能的效果，減少學習成本，高效開發，輕鬆描述統計結果。 厲害在哪裡？先來看Gallory，python視覺化套件很多，範例圖不夠精美的，可考慮跳過。 化學元素週期表 雷達圖 互動式wiget散點圖表 逛了一圈，發現Bokeh圖表精美、範例多、都有附原始碼，官方教學也完整，有tutorial jupyter檔案教學。看來比matplotlib強大，也比plotly漂亮…，函數庫使用看來也不難，且可鑲嵌到Django等Web框架，無論是local或遠端的前端呈現都可以效率開發。 開箱試玩時間要注意的是bokeh會預設連BokehJS cdn，但連線有時不是很穩定，這時可多加”INLINE”環境變數設定，讓BokehJS驅動於local python env。 12from bokeh.resources import INLINEbokeh.io.output_notebook(INLINE) Bokeh可以在Jupyter呈現開發也可以跳轉出html檔，可自由設定，預設是跳轉html檔(output_file())。若要更改預設，必須加上bokeh.io.reset_output()重設環境預設。 12output_notebook() ＃jupyter呈現output_file() ＃html呈現 fig物件可設定tools參數，圖表會自帶縮放、重整、儲存等功能。以下是參考官方範例後微調的程式。 1234567891011121314151617181920212223242526272829303132333435from bokeh.plotting import figure, output_file, show, output_notebookimport bokeh.iofrom bokeh.resources import INLINE# env settings 環境變數設定bokeh.io.reset_output()bokeh.io.output_notebook(INLINE)# prepare some datax = [0.1, 0.5, 1.0, 1.5, 2.0, 2.5, 3.0]y0 = [i**2 for i in x]y1 = [10**i for i in x]y2 = [10**(i**2) for i in x]# output to static HTML file# output_file(\"log_lines.html\")# create a new plotp = figure(tools=\"pan,box_zoom,reset,save\",y_axis_type=\"log\", y_range=[0.001, 10**11], title=\"log axis example\",x_axis_label='sections', y_axis_label='particles')# add some renderersp.line(x, x, legend_label=\"y=x\")p.circle(x, x, legend_label=\"y=x\", fill_color=\"white\", size=8)p.line(x, y0, legend_label=\"y=x^2\", line_width=3)p.line(x, y1, legend_label=\"y=10^x\", line_color=\"red\")p.circle(x, y1, legend_label=\"y=10^x\", fill_color=\"red\", line_color=\"red\", size=6)p.line(x, y2, legend_label=\"y=10^x^2\", line_color=\"orange\", line_dash=\"4 4\")# show the resultsshow(p)output_notebook() 投資圖表試玩Bokeh官方有提供sample_data給大家練習，gallery豐富的範例都取自sample_data，對比官方的資料格式就能輕鬆模仿應用，沒啥高深程式技巧。下載sample_data指令為bokeh.sampledata.download()，直接貼在jupyter執行。檔案會下載到bokeh module裡。 檢查蘋果電腦範例資料(json)1234from bokeh.sampledata.stocks import AAPL# 檢查欄位AAPL.keys()#dict_keys(['date', 'open', 'high', 'low', 'close', 'volume', 'adj_close']) ColumnDataSource物件為Bokeh資料驅動渲染核心dataframe要傳入ColumnDataSource才能驅動js。providing the data that is visualized by the glyphs of the plothttps://docs.bokeh.org/en/latest/docs/user_guide/data.html HoverTool游標滑過時顯示資料 Click_policy藉由標籤控制數值顯示hide為隱藏，mute為切換自訂顯示模式可在muted_color控制顏色, muted_alpha控制顏色濃淡 程式範例123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960import bokeh.iofrom bokeh.resources import INLINEfrom bokeh.models import HoverToolfrom bokeh.palettes import Spectral4from bokeh.plotting import figure, output_file, show, output_notebook, ColumnDataSourcefrom bokeh.sampledata.stocks import AAPL, GOOG, IBM, MSFTimport pandas as pd# env settingsbokeh.io.reset_output()bokeh.io.output_notebook(INLINE)# set hover## HoverTool# 游標滑過時顯示資料,date格式需要轉換，不然會是timestamphover = HoverTool( tooltips = [ (\"date\", \"@date\"), (\"close\", \"@open\"), (\"close\", \"@close\"), (\"high\", \"@high\"), (\"low\", \"@low\"), (\"volume\",\"@volume\") ], formatters=&#123;\"@date\":\"datetime\"&#125;)# set figurep = figure( plot_width=1000, plot_height=400, x_axis_type=\"datetime\", tools=[hover,\"pan,box_zoom,reset,save\"],)p.title.text = 'Stock_Price--Click on legend entries to mute the corresponding lines and show daily details in hover'# use ColumnDataSource to control# click_policy# 藉由標籤控制數值顯示# hide為隱藏，mute為切換自訂顯示模式# 可在muted_color控制顏色, muted_alpha控制顏色濃淡for data, name, color in zip([AAPL, IBM, MSFT, GOOG], [\"AAPL\", \"IBM\", \"MSFT\", \"GOOG\"], Spectral4): df = pd.DataFrame(data) df['date'] = pd.to_datetime(df['date']) source = ColumnDataSource(df) p.line(x=\"date\",y=\"close\", line_width=2, color=color, alpha=0.8, muted_color=color, muted_alpha=0.2, legend_label=name,source=source)p.legend.location = \"top_left\"# use hide or mutep.legend.click_policy=\"mute\"# output_file(\"interactive_legend.html\", title=\"interactive_legend.py example\")show(p)output_notebook() 兩種模式結果比較 Mute Hide 小結這篇主要是來體會一下Bokeh的效果，不用會JS，隨便玩就有這種效果，蠻滿意的，值得再深入一下細節，把以前matplotlib的圖表都轉來bokeh，無論是在工作上的資料報告還是看盤需要，都蠻方便的。 假如想要進一步學習 Bokeh，我將會分享一系列文章，來介紹 Bokeh 在投資領域的視覺化喔！下一篇文章，帶你繪製專業的股價和技術指標！ 程式檔案連結https://github.com/benbilly3/bokeh_explore tags: bokeh","raw":null,"content":null,"categories":[{"name":"財經Python教學","slug":"財經Python教學","permalink":"https://www.finlab.tw/categories/財經Python教學/"}],"tags":[{"name":"python","slug":"python","permalink":"https://www.finlab.tw/tags/python/"},{"name":"資料視覺化","slug":"資料視覺化","permalink":"https://www.finlab.tw/tags/資料視覺化/"},{"name":"bokeh","slug":"bokeh","permalink":"https://www.finlab.tw/tags/bokeh/"}]},{"title":"用Python投資加密貨幣：手機監控與自動下單 (Part 12)","slug":"btc-aws-signal-trigger-condition","date":"2020-05-31T20:23:13.000Z","updated":"2020-06-10T01:46:51.896Z","comments":true,"path":"btc-aws-signal-trigger-condition/","link":"","permalink":"https://www.finlab.tw/btc-aws-signal-trigger-condition/","excerpt":"","text":"我們上次已經寫好了「核心」程式但什麼時候，才能執行這些程式呢？總共有兩種方式啟動程式： 一種是連上網監控 另一種是時間間格、自動下單（每4小時） 1. 連上網監控我們可以用「新增觸發條件」來觸發，並且點選「API Gateway」： 最後會給你一個網址用任何手機、筆電 連進去就可以了！ 2. 時間間格、自動下單首先我們先將原本的 API Gateway 刪除然後再增加新的 Trigger：每4小時執行一次 這樣就會四小時執行一次了！ 假如我們希望它四小時判斷多空與下單，可以將上一個單元的範例做以下的修改 新增 client 使用金鑰登入（可以到 Binance 申請） 做多時，要買入「BTCUSDT」 做空時，賣出「BTCUSDT」 以下的範例，在做空時，我們只單純的賣出，而不額外做空因為我們現在是用現貨且無槓桿的交易帳戶所以沒有辦法做空喔！假如想要做BTC期貨，也可以參考官方的Margin Trading End Point 以下就是現貨範例，123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566import jsonfrom binance.client import Clientdef lambda_handler(event, context): ########## # Login # ########## # before: # client = Client() # after: PUBLIC = '&lt;YOUR-PUBLIC-KEY&gt;' SECRET = '&lt;YOUR-SECRET-KEY&gt;' QUANTITY = 0.0001 client = Client(api_key=PUBLIC, api_secret=SECRET) ################### # historical data # ################### klines = client.get_historical_klines(\"BTCUSDT\", Client.KLINE_INTERVAL_4HOUR, \"two week ago\") def sma(n): return sum([float(k[4]) for k in klines[-n-1:-1]])/n def prev_sma(n): return sum([float(k[4]) for k in klines[-n-2:-2]])/n sma60 = sma(65) sma5 = sma(5) psma60 = prev_sma(65) psma5 = prev_sma(5) ################### # Trade # ################### ret = '' if sma5 &gt; sma60 and psma5 &lt; psma60: ret = 'long' order = client.order_market_buy( symbol='BTCUSDT', quantity=QUANTITY) if sma5 &lt; sma60 and psma5 &gt; psma60: ret = 'short' order = client.order_market_sell( symbol='BTCUSDT', quantity=QUANTITY) if sma5 &lt; sma60 and psma5 &lt; psma60: ret = 'hold short' if sma5 &gt; sma60 and psma5 &gt; psma60: ret = 'hold long' # TODO implement return &#123; 'statusCode': 200, 'body': json.dumps('btc-trading-signal: ' + ret) &#125; 經過這12個單元，相信大家對於加密貨幣量化交易有初步的理解大概瞭解如何建構一個自動化的交易系統 你會發現手刻一個交易系統，其實沒有很難難的在於，如何「系統化」的建立一個多元的交易策略研發多個策略 並統整起來，考驗大家撰寫策略、系統化的能力 怕輸太多錢嗎？沒關係，因為加密貨幣可以切割至 10 的 8 次方！就算你有一百種不同的策略，也可以用300元台幣順利分散風險喔！所以不要再猶豫了，趕快來試試看吧！","raw":null,"content":null,"categories":[{"name":"加密貨幣","slug":"加密貨幣","permalink":"https://www.finlab.tw/categories/加密貨幣/"}],"tags":[{"name":"python","slug":"python","permalink":"https://www.finlab.tw/tags/python/"},{"name":"比特幣","slug":"比特幣","permalink":"https://www.finlab.tw/tags/比特幣/"},{"name":"BTC","slug":"BTC","permalink":"https://www.finlab.tw/tags/BTC/"}]},{"title":"用Python投資加密貨幣：用AWS Lambda即時更新交易訊號 (Part 11)","slug":"btc-aws-lambda-signal-update","date":"2020-05-25T06:35:48.000Z","updated":"2020-06-11T17:28:29.116Z","comments":true,"path":"btc-aws-lambda-signal-update/","link":"","permalink":"https://www.finlab.tw/btc-aws-lambda-signal-update/","excerpt":"","text":"上一個單元中，大家都已經操作好了 AWS Lambda建立一個簡單的 Hello World 接下來，我們就可以開始建構比特幣的交易系統了 首先，可以先在 local 端架設環境，方便我們確認程式可以跑，之後再把它複製到雲端即可。 首先在本地端先安裝 python-binance用來收報價與下單： 1pip install python-binance 再來，撰寫交易系統的程式碼： 1234567891011121314151617181920212223242526272829303132333435363738from binance.client import Client# get price from binance apiclient = Client()klines = client.get_historical_klines(\"BTCUSDT\", Client.KLINE_INTERVAL_4HOUR, \"two week ago\")# function to calculate sma valuedef sma(n): return sum([float(k[4]) for k in klines[-n-1:-1]])/n# function to calculate previous sma valuedef prev_sma(n): return sum([float(k[4]) for k in klines[-n-2:-2]])/n# calculate sma 5 and 65sma60 = sma(65)sma5 = sma(5)# calculate previous sma 5 and 65psma60 = prev_sma(65)psma5 = prev_sma(5)# golden crossif sma5 &gt; sma60 and psma5 &lt; psma60: print('flip to long') # dead crossif sma5 &lt; sma60 and psma5 &gt; psma60: print('flip to short')# hold for shortif sma5 &lt; sma60 and psma5 &lt; psma60: print('hold short')# hold for longif sma5 &gt; sma60 and psma5 &gt; psma60: print('hold long') 以上，我們建構一個簡單的程式碼每次執行，都可以產生出當前的訊號～這個策略就是我們在前個單元中經過優化後的均線策略，這邊我們用不同的方式撰寫一次 接下來就是將以上的程式碼移到 AWS Lambda 上！ 首先，跟剛剛一樣，在 Lambda 上，我們可以先來安裝Binance 的 API來獲取報價跟下單 之前，我們只需要使用pip install python-binance就可以安裝了 但 AWS 上要安裝 package 呢？AWS 沒有一台 server 可以下安裝指令所以我們可以先自己下載 「python-binance」這個 package壓縮成壓縮檔，這個檔案以AWS的術語，叫做 AWS Layer ，我已經幫大家打包好了，可以點此下載並將 AWS Layer 上傳上去，方法如下圖： 就等於是安裝完畢了 剩下就簡單了！我們可以到上個單元創建的 Lambda 函數： 並在這個 lambda 函數中新增我們剛剛上傳的layer： 最後，我們點選 Hello Lmabda 並往下拉到程式碼編輯視窗： 複製到下方的程式碼，到程式碼編輯視窗之中：1234567891011121314151617181920212223242526272829303132333435363738394041import jsonfrom binance.client import Clientdef lambda_handler(event, context): client = Client() klines = client.get_historical_klines(\"BTCUSDT\", Client.KLINE_INTERVAL_4HOUR, \"two week ago\") def sma(n): return sum([float(k[4]) for k in klines[-n-1:-1]])/n def prev_sma(n): return sum([float(k[4]) for k in klines[-n-2:-2]])/n sma60 = sma(65) sma5 = sma(5) psma60 = prev_sma(65) psma5 = prev_sma(5) ret = '' if sma5 &gt; sma60 and psma5 &lt; psma60: ret = 'flip to long' if sma5 &lt; sma60 and psma5 &gt; psma60: ret = 'flip to short' if sma5 &lt; sma60 and psma5 &lt; psma60: ret = 'hold short' if sma5 &gt; sma60 and psma5 &gt; psma60: ret = 'hold long' # TODO implement return &#123; 'statusCode': 200, 'body': json.dumps('btc-trading-signal: ' + ret) &#125; 點選「測試」按鈕後，可以用了！ 上圖中，顯示「hold short」代表我們現在是持續偏空的狀態每次按一下 test ，就可以顯示目前的訊號喔！ 目前我們要登入AWS並且執行 lambda 才能看到訊號有點麻煩呀！ 所以在下一個單元，我們將會分享怎麼樣從手機上看到交易訊號以及把這個交易訊號實際下單的方法！可以到粉專按讚追蹤才不會錯過我們每週的更新喔！","raw":null,"content":null,"categories":[{"name":"加密貨幣","slug":"加密貨幣","permalink":"https://www.finlab.tw/categories/加密貨幣/"}],"tags":[{"name":"python","slug":"python","permalink":"https://www.finlab.tw/tags/python/"},{"name":"比特幣","slug":"比特幣","permalink":"https://www.finlab.tw/tags/比特幣/"},{"name":"BTC","slug":"BTC","permalink":"https://www.finlab.tw/tags/BTC/"}]},{"title":"用Python投資加密貨幣：架設一個簡易的AWS交易系統 (Part 10)","slug":"aws-lambda-initial-setup","date":"2020-05-18T06:35:48.000Z","updated":"2020-06-11T17:27:49.358Z","comments":true,"path":"aws-lambda-initial-setup/","link":"","permalink":"https://www.finlab.tw/aws-lambda-initial-setup/","excerpt":"","text":"延續之前的介紹，這個單元中，我們將架設一個簡單的 AWS Lambda function是 AWS ( Amazon cloud service ) 底下的一個服務 AWS Lambda function，是一段可以自定義的程式碼會在 AWS 主機上執行可以經由任意的方式啟動，例如每個整點執行一次 例如以下的例子，就是當使用者上傳照片後就可以用 Lambda function雲端將照片縮小，然後輸出到網頁上： 之後我們的交易系統，就會寫在這樣的 function 裡面 AWS免費提供40萬秒/月，可以讓我們執行 AWS Lambda function所以假如我們的策略頻率是「小時」的話，是非常充足的！ 首先我們可以打開Amazon Web Service網頁，並且註冊帳號，取得服務，在這個過程中，會需要輸入信用卡，不過並不會額外收費， 進入了主控台們點選 Lambda 新增 Lambda 函數 並且選擇最簡單的Hello World程式語言設定成「Python3.6」按一下右下角確定，稍等一會就成功了！ 接下來，我們就會看到lambda的頁面，可以在這個頁面下，它已經預設了一個程式， 我們之後會來修改它不過先不急，我們先跑跑看 可以按「測試」並且建立預設的事件，你就會看到測試結果：成功！ 接下來我們就要在這個基礎下，來建構一個交易的邏輯，並且每個小時來執行一次！詳情請看：AWS Lambda 交易訊號產生假如對於我們的新文章有興趣，可以幫我們追蹤我們的粉絲團喔！","raw":null,"content":null,"categories":[{"name":"加密貨幣","slug":"加密貨幣","permalink":"https://www.finlab.tw/categories/加密貨幣/"}],"tags":[{"name":"python","slug":"python","permalink":"https://www.finlab.tw/tags/python/"},{"name":"比特幣","slug":"比特幣","permalink":"https://www.finlab.tw/tags/比特幣/"},{"name":"BTC","slug":"BTC","permalink":"https://www.finlab.tw/tags/BTC/"}]},{"title":"創新高股票，你還少看了這個因子！","slug":"break-new-high-roe-stock","date":"2020-05-17T05:21:38.000Z","updated":"2020-06-05T07:29:51.016Z","comments":true,"path":"break-new-high-roe-stock/","link":"","permalink":"https://www.finlab.tw/break-new-high-roe-stock/","excerpt":"","text":"假如你是追高的選股策略，有沒有一種感覺？就是往往創新高的股票，大部分都賠錢，只有少部分賺錢， 今天我們將介紹一個因子，大幅提昇創新高獲利的效果！ \b這種追高的策略，有幾個比較難克服的地方，我們將介紹一個可以破解這些課題的策略。 1. 心理因素一個就是心魔，因為勝率真的很低所以你會覺得怎麼一直輸錢？造成人為干預嚴重 所以在追高股票時，最好還是讓自己「分心」也就是透過持有多檔股票的方式讓自己不會過度在乎一檔個股 2. 選到亂漲一通的股票另外，有時候股票市場很感性不能用理性的方式來交易 有些個股明明股價淨值比都5以上本益比都50了還漲個沒完 針對這種個股要是去追高很有可能買在高點！ 所以我們可以用「基本面」來分析這檔股票的「創新高」合不合理 總結以上兩點 製作創新高策略1. 動態調整 Portfolio每兩個禮拜調整一次所選的股票，並將資產「平均分配」於所選的股票中， 2. 基本面篩選我們並不是看到創新高就無條件選這些股票必須搭配基本面的因子，來選出更有可能維持上漲的股票： 創新高：股價突破60天內股價 ROE大於3，前一季ROE大於1 另外由於股價容易受流動性影響，我們希望買入賣出有流動性的股票： 股價大於7 成交量大於100張 才能更順利在任意時刻買賣股票 3. 新因子研發最後，最重要的因子忍痛割愛告訴大家我們特別研發一個「成長+價值」的複合因子： 新因子 = 當季ROE / 前一季ROE / 股價淨值比 新因子可以拆解成兩個部分： 第一部份：成長股篩選這個新因子當中，成長的部分是「當季ROE / 前一季ROE」這些ROE成長的股票，這個數值會大於1 第二部分：價值股篩選接下來，我們要選 CP 值高的股票股價淨值比就是一個很好的指標可以幫我們判斷股票的價格是否太高，我們希望「1 ／ 股價淨值比」越大越好，可以參考「股價淨值比」來瞭解更詳細的原理喔！ 將上述兩種因子合併用乘法，將這兩種因子合併起來： 新因子 = 當季ROE / 前一季ROE / 股價淨值比 我們將每檔股票都算出此因子，假如當天有超過三檔股票創新高，用這個因子排序，並選出前 3 名的股票，新增到我們的 portfolio 組合裡面 賣出策略當股價收盤價小於 20 日均，則賣出 回測結果本文章所公佈的「新因子」究竟對於這些創新高有什麼樣子的影響呢？ 上圖中藍色的數值為使用「新因子」，每次加入3檔股票的方法而橘色的為，「沒有用新因子」，每次加入數檔股票的方法效果差距非常多！以下是策略的回測相關數值和風險，假如你希望用 Python跟我們一起研究量化投資，可以參加「小資族選股策略」和「AI股票理專」，一起來研發有用的選股邏輯喔！假如你是有加入課程的同學，可以直接使用以下的程式碼開始選股喔！123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657from finlab.data import Datadata = Data()############## 股價淨值比 ##############price = data.get(&apos;收盤價&apos;, 300)股東權益 = data.get(&apos;歸屬於母公司業主之權益合計&apos;, 1)股本 = data.get(&apos;普通股股本&apos;, 1)流通股數 = 股本 / 10每股淨值 = 股東權益 / 流通股數今日股價 = price.iloc[-1]股價淨值比pb = (今日股價 / 每股淨值).squeeze()###################### 股東權益報酬率 ROE ######################稅後淨利 = data.get(&apos;本期淨利（淨損）&apos;, 2)# 股東權益，有兩個名稱，有些公司叫做權益總計，有些叫做權益總額# 所以得把它們抓出來權益總計 = data.get(&apos;權益總計&apos;, 2)權益總額 = data.get(&apos;權益總額&apos;, 2)# 並且把它們合併起來權益總計.fillna(權益總額, inplace=True)股東權益報酬率 = 稅後淨利.iloc[-1] / 權益總計.iloc[-1]股東權益報酬率_上季 = 稅後淨利.iloc[-2] / 權益總計.iloc[-2]###################### 成交量 ######################vol = data.get(&apos;成交股數&apos;, 100)############# 篩選股票 #############condition1 = (price.rolling(60).max() == price).iloc[-10:].sum() &gt; 0condition2 = (股東權益報酬率 &gt; 0.03) &amp; (股東權益報酬率_上季 &gt; 0.01)condition3 = (price.iloc[-1] &gt; 7) &amp; (vol.iloc[-1] &gt; 100000)rank = 股東權益報酬率 / 股東權益報酬率_上季 / 股價淨值比pb * (condition1 &amp; condition2 &amp; condition3)print(&apos;近10天創新高的股票數量&apos;)print(condition1.sum())print(&apos;rank 前10名的股票&apos;)print(rank[rank &gt; 0].nlargest(10))附上策略的回測結果祝大家選股愉快！","raw":null,"content":null,"categories":[{"name":"股票策略","slug":"股票策略","permalink":"https://www.finlab.tw/categories/股票策略/"}],"tags":[{"name":"如何買股票","slug":"如何買股票","permalink":"https://www.finlab.tw/tags/如何買股票/"},{"name":"量化投資","slug":"量化投資","permalink":"https://www.finlab.tw/tags/量化投資/"}]},{"title":"用Python投資加密貨幣：入金加密貨幣 (Part 9)","slug":"btc-deposit-ways","date":"2020-05-07T06:50:43.000Z","updated":"2020-06-11T17:36:57.727Z","comments":true,"path":"btc-deposit-ways/","link":"","permalink":"https://www.finlab.tw/btc-deposit-ways/","excerpt":"","text":"這陣子加密貨幣大漲，大家都躍躍欲試了吧？但我沒有很開心 因為價格就是漲漲跌跌漲上去的 - 會下來跌下去的 - 會上去 不開心就不會難過平心靜氣的投資才是最好的方式（果然文章還沒寫完，就跌了15％XD） 這個階段，在建構初步的買賣的規劃後終於要來買入人生中的第一枚加密貨幣了！ 請不要買太多！！！！假如你下的金額，明天歸零你會心疼那就代表下太多了！ 首先，來看一下入金到交易全部過程總覽： 以台幣來說，可以交易的方式就是以下這幾種： 透過「簡單買賣」來買加密貨幣 先入金台幣，再「擇時買賣」加密貨幣 最主要是以下這四個平台，可以用台幣買加密貨幣喔！ 簡單買賣Maicoin和Bitoex都是可以簡單買入的平台申請帳號其實很簡單，只要提供 身份證 第二證件就可以辦了，因為人工審核需要花一點時間，這段時間就可以來學學前面所教的投資方式 擇時買賣這類的平台有 MAX 跟 BitoPro假如用以上連結註冊會員的話，你可以享手續費8折喔！而我也會收到平台的獎勵，當作是這個免費的課程的支持XD 以上這兩個平台其實就是 Maicoin 跟 BitoEx 的加強版都是以0成本先入金台幣，再做交易，做交易酌收手續費 Binance P2P 直接購買 BTC其實Binance也有提供P2P來購買BTC的方式但是現在只限BTC，沒有USDT，且由於是P2P，交易比較沒有保障 為什麼要提供多家呢？因為多方比對，找出最便宜的入金方式，是很重要的以上四個平台的價格，報價都是不一樣的，所以一定要貨比多家！，另外「簡單買賣」那兩家，入金完全是看該加密貨幣的報價，手續費已經算進去了而「擇時買賣」的平台，是台幣入金不用錢，但是交易要扣0.05%手續費 假如要交易，我建議一次辦好這四個，反正要上傳的東西都是一樣的！ 這四家都辦好了，要買什麼幣呢？可以給你個方向， 假如你有做超長線交易，那就可以直接買 BTC，不過因為長期持有風險就比較高，請自行斟酌 假如你想交易波段，那就先買入 USDT，在前幾篇有提到這是跟美金 1:1 的加密貨幣 之後交易時，在來用 USDT 買賣 BTC 如何自動交易呢？我比較喜歡去成交量大一點的交易平台，這邊我以 Binance 為例，我們將購入的 USDT 轉到 Binance，不論金額，這四個平台都差不多，將會有約 100 元台幣的出金手續費 下圖以 Maicoin為例，講解一次整體的操作過程，主要分成兩個步驟， 買入 USDT 將 USDT 存入 Binance 1. 買入 USDT首先，我們點選「購買」-&gt;「USDT」，然後輸入，購買的數量，通常我會直接輸入台幣，平台自動換算選擇付款方式，然後按購買跟網拍一樣XDDD 2. 存入 Binance在Maicoin介面，購買後，選擇「發送」-&gt;「USDT」在Binance介面，選擇「收取」-&gt;「USDT」這時候，Binance就會提供一個虛擬位置，請複製起來，並且在Maicoin的介面上貼上 以上的步驟，要小心，千萬要選擇 USDT 的「發送」和「收取」不然你的$就會丟失喔！請非常小心，再三確認！ 由於交易鏈不會馬上傳送，會先以區塊的方式保留，所以你暫時會看到，你的兩邊存款都是0，XDD但不用擔心，你的轉帳手續正在驗證中，你可以到 USDT待驗證區塊的搜尋網站輸入帳戶位置，就可以看到正在驗證的交易，所以$沒有丟失啦！ 我建議，假如你想要做波段，並且跟著課程走可以先開戶，等後面的文章出來了，先操作小金額，例如500、1000元台幣，測試看看沒錯，小金額就可以架設波段交易程式了！瞭解所有的操作流程，再來考慮增加一點資金。 下個單元中，我們將教你如何用 Python API在Binance上做 BTC/USDT 的交易！ 可以先申請點下方連結註冊https://www.binance.com/tw/register?ref=HXO25II1來節省每筆10％的交易手續費， 入金完畢！那我們就在下個單元 - 架設雲端交易系統囉！","raw":null,"content":null,"categories":[{"name":"加密貨幣","slug":"加密貨幣","permalink":"https://www.finlab.tw/categories/加密貨幣/"}],"tags":[{"name":"python","slug":"python","permalink":"https://www.finlab.tw/tags/python/"},{"name":"比特幣","slug":"比特幣","permalink":"https://www.finlab.tw/tags/比特幣/"},{"name":"BTC","slug":"BTC","permalink":"https://www.finlab.tw/tags/BTC/"}]},{"title":"用Python投資加密貨幣：如何投資(投機) 加密貨幣 (Part 8)","slug":"btc-deposit-how","date":"2020-05-04T20:23:13.000Z","updated":"2020-06-11T17:31:09.885Z","comments":true,"path":"btc-deposit-how/","link":"","permalink":"https://www.finlab.tw/btc-deposit-how/","excerpt":"","text":"自從本blog開始介紹 BTC 以來，BTC已經上漲了約25％！我是有稍微選一下發文時機的，很想說自己未卜先知，但世界上沒有這種事情，只能說是個美麗的巧合吧！ 畢竟所有的指標都是參考用，我們處在瞬息萬變的世界，別想要預測市場而是以最機械的方式來投資才不會無所適從、舉棋不定 這個單元中，要來介紹，我用哪些方法來投資比特幣，最主要是兩種只是分享，非建議喔！ 1. 長線投資記得在2013年的時候， 有一個大學生問「我現在有1萬元，要投資什麼比較好？」 有人回答「買入比特幣，不要管它，等你畢業了再換成現金」 要是當時真的照這個方法操作，畢業後，基本上就已經財富自由了 這個故事告訴我們，有時候挑好商品，買了放著，不要亂動，其實也滿好的 買入的原因買 BTC一定是有價格以外的原因，就像是去菜市場買菜，為什麼買這顆蘋果？因為它顏色鮮豔、比較大顆、看起來比較甜，等而不是因為這顆蘋果最近上漲（沒人這樣買蘋果吧？） 買 BTC 一樣要有理由而不是覺得大家都在買，就跟著買不然，大家都再賣，就跟著賣，很容易就賠錢了 我的買入原因我的買入理由，就是BTC市值當時跟黃金比不到1/50BTC 有著優越的貨幣的特性，理論上應該是很有潛力的 設定一個出場條件，然後嚴格執行， 出場條件例如我的出場條件就是：BTC 到達跟 黃金市值平起平坐，不過世界上哪有一定準確的預言？所以保險起見可以設定「比特幣：黃金」「市值 1：10」「市值 1：5」「市值 1：2」「市值 1：1」分別出場，這並不是投資建議，只是我自己的規劃而已一定要做賣出條件，因為「不要愛上任何投資的標的」「沒有永遠都上漲的商品」 達成這個條件之前，我是分批慢慢買入， 買入條件直到金額到達自己投資「單項商品的上限」為止不要壓身家，不要壓身家，不要壓身家！ 畢竟這種超長線，最怕的就是買在高點！而很少人可以準確預測未來股價所以平均分攤風險，是比較建議的 用以上的方法，價格高高低低，心情也會受影響，所以為何不用「量化投資」來幫助我們獲利呢？ 2. 量化投資量化投資也就是利用程式機械式的操作來避免不必要的風險 例如前一篇文章所介紹的策略 回測跑得好，策略得開始運轉吧？ 但架設server，還是有一定的難度，為了幫助大家做一個簡單的自動化交易系統， 接下來的文章，首先我們會介紹 BTC 如何入金，也就是正式開始投資 BTC， 然後呢，我們會用AWS，也就是Amazon推出的雲端伺服器將前一篇文章所介紹的策略真實上線使用重點是：成本為0，完全免費！詳情請看：雲端建置交易信號","raw":null,"content":null,"categories":[{"name":"加密貨幣","slug":"加密貨幣","permalink":"https://www.finlab.tw/categories/加密貨幣/"}],"tags":[{"name":"python","slug":"python","permalink":"https://www.finlab.tw/tags/python/"},{"name":"比特幣","slug":"比特幣","permalink":"https://www.finlab.tw/tags/比特幣/"},{"name":"BTC","slug":"BTC","permalink":"https://www.finlab.tw/tags/BTC/"}]},{"title":"用Python投資加密貨幣：三年20倍的策略參數最佳化 (Part 7)","slug":"btc-backtesting-optimization","date":"2020-04-26T20:23:13.000Z","updated":"2020-06-11T17:29:30.813Z","comments":true,"path":"btc-backtesting-optimization/","link":"","permalink":"https://www.finlab.tw/btc-backtesting-optimization/","excerpt":"這篇文章中，我們將承接著之前的單元，來教大家怎麼做最佳化，\n","text":"這篇文章中，我們將承接著之前的單元，來教大家怎麼做最佳化， 必備的單元提要： 環境設定：使用 colab 並且安裝相關 packages 簡單回測：利用均線相交產生買賣訊號回測 要執行完上述兩個單元的程式碼才能繼續接下來的單元喔！ 我們將上次的回測程式改成以下的樣子請大家來比較一下有什麼不同 12345678910111213141516171819202122232425262728293031from backtesting import Backtestfrom backtesting.lib import SignalStrategyimport pandas as pdclass Strategy(SignalStrategy): n1 = 20 n2 = 60 def init(self): super().init() # Precompute the two moving averages close = pd.Series(self.data.Close) sma1 = close.rolling(self.n1).mean() sma2 = close.rolling(self.n2).mean() # Precompute signal signal_long = (sma1 &gt; sma2) &amp; (sma1.shift() &lt; sma2.shift()) signal_short = (sma1 &lt; sma2) &amp; (sma1.shift() &gt; sma2.shift()) # combine signal signal = signal_long signal[signal_short] = -1 # add signal self.set_signal(signal)bt = Backtest(df, Strategy)result1 = bt.run()bt.plot() 沒錯，我們新增了7、8行的物件參數，分別代表兩條均線的參數並且在15、16行，製作均線時，使用該參數來製作均線 另外我們也在倒數第二行，將回測結果存到 result1等等可以做比較 你應該會看到跟上次一樣的結果： 接下來就可以自動最佳化了 暴力枚舉你可能以為要寫for迴圈，但其實 backtesting 已經幫你寫好了我們只要將參數範圍傳入 bt.optimize就可以了，非常方便：12result2 = bt.optimize(n1=range(5, 100, 5), n2=range(5, 100, 5)) 優化後的結果由於策略優化完後，參數會自動更新所以我們可以用1bt.plot()來看優化後的績效就可以了！ 三年半 20 倍，是不是很夢幻呀！而且還多空都賺拿量化交易的方式交易比特幣，就像是拿大砲對付刀劍一樣 我們可以將優化前後的績效比對一下，真的差很多呢！ 12result1._trade_data.Equity.plot()result2._trade_data.Equity.plot() 但隨著期貨市場的開放這樣的績效，或許沒辦法重現，或許市場已經慢慢走向效率化，可以看到2019年以後，賺得比較少 但是加密貨幣又不是只有 BTC，一定有很多未開發的地帶，等著量化交易去開拓的！所以也不用太擔心！ 這些單元的用意就是在你在開江闢土時提供你豐富的資源，讓你在開發策略事半功倍！ 更新：很多人都躍躍欲試呢！我幫大家寫好完整的代碼，可以在線上直接運行喔！請點此 下個階段，我們就可以來真的入金交易囉！ 你可以到FinLab粉專點選追蹤，或點讚，就可以收到我們的新單元囉！","raw":null,"content":null,"categories":[{"name":"加密貨幣","slug":"加密貨幣","permalink":"https://www.finlab.tw/categories/加密貨幣/"}],"tags":[{"name":"python","slug":"python","permalink":"https://www.finlab.tw/tags/python/"},{"name":"比特幣","slug":"比特幣","permalink":"https://www.finlab.tw/tags/比特幣/"},{"name":"BTC","slug":"BTC","permalink":"https://www.finlab.tw/tags/BTC/"}]},{"title":"用Python投資加密貨幣：比特幣操作最強指標(看盤篇) (Part 6)","slug":"btc-tradingview-intro","date":"2020-04-26T03:44:58.000Z","updated":"2020-06-11T17:34:33.931Z","comments":true,"path":"btc-tradingview-intro/","link":"","permalink":"https://www.finlab.tw/btc-tradingview-intro/","excerpt":"","text":"我們當然可以用 Python 來幫我們做分析但是人都是懶惰的，假如有好用的工具，即使不是 Python 也沒關係 這篇文章接續前一篇，將來一探究竟究竟這個好用的指標怎麼看 TradingView介紹一款我覺得很好用的平台，TradingView這並不是業配，只是真的滿好用的以加密貨幣來說，我都會用它來看盤 可以在商品代碼中，輸入「BTCUSDT」來搜尋比特幣的價格 並且按一下全功能圖表 這時候就會跳出這檔商品的技術分析圖表然後我們再上方功能列表，可以點選「fx」來添加技術指標 這些是別人已經寫好並且開源的技術指標可以直接拿來用# Hash Ribbons 指標接下來，搜尋並點選「Hash Ribbon」就可以看到這個指標了！你應該會看到以下的圖表 可以看到「Hash Ribbon」這張圖表中綠色像是階梯狀的數值，就是「Hash rate」也就是「所有的挖礦機」的算力總和也就是每秒可以暴力解多少次可以參考之前的文章瞭解更多原理的部分 另外有兩條均線，分別是淺綠色，跟灰色，分別是30日和60日均線，這些數字我們不用調整，用它預設的即可 另外有紅色的區域，從均線的死亡交叉開始出現代表 Miner Capitulation 發生的時刻此時比特幣會進入超跌的狀態， 最後當紅色區域的末稍，也就是均線黃金交叉時代表礦工恢復運作，通常在這個時候買入近三年的平均來說，會有約5000％的報酬 當然歷史不代表未來不論部落格提供怎麼樣的訊息你還是得自己做決定 比特幣波動是非常大的起床發現突然下跌 30％都是可能的 以長期投資而言，注重風險的讀者，真的不能下注太大呀！ 看完了主觀交易的部分，讓我們回到正題來做量化投資吧！ 注：另外假如要看 BTC 的長期價格，可以用 tradingview 搜尋 「BLX」就可以找到了！","raw":null,"content":null,"categories":[{"name":"加密貨幣","slug":"加密貨幣","permalink":"https://www.finlab.tw/categories/加密貨幣/"}],"tags":[{"name":"python","slug":"python","permalink":"https://www.finlab.tw/tags/python/"},{"name":"比特幣","slug":"比特幣","permalink":"https://www.finlab.tw/tags/比特幣/"},{"name":"BTC","slug":"BTC","permalink":"https://www.finlab.tw/tags/BTC/"}]},{"title":"用Python投資加密貨幣：比特幣操作最強指標(原理篇) (Part 5)","slug":"best-indicator-bitcoin","date":"2020-04-25T07:36:15.000Z","updated":"2020-06-10T01:47:15.733Z","comments":true,"path":"best-indicator-bitcoin/","link":"","permalink":"https://www.finlab.tw/best-indicator-bitcoin/","excerpt":"","text":"這是臨時加開的一篇文章主要是因為就在今天有個非常準的比特幣上漲指標發生了罕見的重磅訊號！ 近三年，只要這個指標產生買入訊號，平均來說，比特幣上漲幅度為 5000％ 這個指標的原理是什麼呢？首先我們要介紹幾個名詞： 1. Miner 挖礦機比特幣的運作機制，是讓所有的電腦互相競爭，看誰最快產生一串隨機字串 s，使得以下公式hash = sha256(phash + leger + s)中 hash 的開頭「 n 個 0 」， 其中 phash 就是前一個 block（區塊）的 hashleger 是待驗證的 BTC 交易帳本，sha256 是一個不可逆的加密函數 不可逆函數意味著我們不可能反推s是多少，而是必需要用暴力法，硬猜 s 是多少，一個個嘗試，直到成功為止 專門在嘗試暴力法枚舉的電腦，我們就稱為「挖礦機」 2. 為何要找 s ？ 感覺很沒意義因為這樣子，我們就可以驗證此帳本是真的這種驗證機智叫做 proof-of-work也就是用電腦的勞力來確保紀錄的資料不受串改， 舉個例子，假如今天某駭客想上傳一個假的block，這個時候，他必須先解出 上述 s 是多少，還必須將下一個block的 s 也算出來，和下下個 block 的 s和下下下個 block 的 s…等直到其他電腦承認他的那條「假區塊鏈」為止， 也就是這個駭客的電腦算力，必須跟其他正規礦機的算力總和披敵，並且持續非常長的一段時間都能戰勝正規礦機的總和才有辦法將假的block驗證成功， 3. Miner Capitulation 礦機的投降為什麼會有人想挖礦？因為辛苦挖礦可以獲得新發行的比特幣 但當今天比特幣價格下降，導致挖礦獲利減少時，礦工挖礦成本 大於 挖到的比特幣價值有些礦工乾脆就不運轉，或是賣掉BTC去添購新的挖礦機型也就是 Miner Capitulation 4. Miner Capitulation 是好的買入機會Miner Capitulation通常發生在 BTC 價格下跌時BTC 的價格跌破了挖礦成本開始 很多的礦機持有者，在這個時候 賣掉已經挖到的 BTC 來購買新的礦機 乾脆機器收一收，BTC賣一賣了結出場 就會引發一系列超賣 5. 如何判斷 Miner Capitulation？我們可以從BTC調整「挖礦的困難程度」來當成 Miner Capitulation 的延遲指標 因為這個「挖礦難易程度」會動態調整的：根據比特幣白皮書一個 block 的出產時間必須在約10分鐘左右 所以當礦機很多時，算力上升，這樣用暴力法找 s 的速度就會變快所以找 s 難度也必須提升才行 還記得 hash 開頭必須包含 n 個 0 嗎？這個 n 就可以用來控制難度，當 n 越大，代表要產生越多開頭為 0 的 hash而難度也會跟著加大 6. 我們可以藉由 n 來推算 hash ratehash rate 就是比特幣網路的算力，每秒可以暴力解 x 次這個 hash rate 降低，也代表著礦工的退出，礦工退出，就會將 BTC 兌現BTC 就會有比較大的跌幅 而當 hash rate 反轉升高時就代表礦機更新完畢、礦場被整併，新礦機上線近三年，這樣子的狀況，比特幣都有不錯的報酬如今這個訊號也發生了，就不知道接下來歷史會不會重演呢？ 下一集將分享怎麼用 trading view 來開啟hash rate 訊號買賣點！","raw":null,"content":null,"categories":[{"name":"加密貨幣","slug":"加密貨幣","permalink":"https://www.finlab.tw/categories/加密貨幣/"}],"tags":[{"name":"python","slug":"python","permalink":"https://www.finlab.tw/tags/python/"},{"name":"比特幣","slug":"比特幣","permalink":"https://www.finlab.tw/tags/比特幣/"},{"name":"BTC","slug":"BTC","permalink":"https://www.finlab.tw/tags/BTC/"}]},{"title":"用Python投資加密貨幣：實做回測策略 (Part 4)","slug":"btc-simple-sma-backtesting","date":"2020-04-25T00:54:09.000Z","updated":"2020-06-11T17:31:58.107Z","comments":true,"path":"btc-simple-sma-backtesting/","link":"","permalink":"https://www.finlab.tw/btc-simple-sma-backtesting/","excerpt":"","text":"接下來我們廢話不多說，結合前一篇的買賣訊號來建構一個加密貨幣的策略吧！ 複習前幾篇的知識這篇文章，將接續著之前的單元，假如還沒看過前面的部分可以參考以下的連結喔！ 為什麼要投資加密貨幣 加密貨幣爬蟲 策略訊號建立 這篇我寫的比較仔細一點，所以文章稍長，但程式碼很短，先給大家聞香一下 想知道怎麼做出來，要看到最後喔！將上一篇的程式碼統整，我們可以得到12signal_long = (sma1 &gt; sma2) &amp; (sma1.shift() &lt; sma2.shift())signal_short = (sma1 &lt; sma2) &amp; (sma1.shift() &gt; sma2.shift())接下來，我們將 signal_long 跟 signal_short 整合在一起這邊的 signal_long 跟 signal_short是進場訊號，一個做多、一個是做空 的時間序列當訊號為 True 時代表入場 多空訊號結合 接下來為了配合 backtesting 函式庫我們想將 signal_long 跟 signal_short 合併起來產生一個翻轉策略：當 signal_long 為 True 時，不論目前有什麼部位，都翻多當 signal_short 為 True 時，不論目前什麼部位，一律翻空我們想要做出一個新的訊號 叫做 signal其做多訊號為 1，做空訊號為 -1 ，維持不變則為0可以用以下的寫法，首先copy signal_long 序列，並且將 signal_short 為 True 的部分改成 -1這樣就可以了！123# combine long and short signalsignal = signal_long.copy()signal[signal_short] = -1 完整總和來說，我們目前已經有以下的程式碼， 12345678910111213141516from finlab import crypto# geth the historical pricedf = crypto.get_all_binance('BTCUSDT', '4h')# calculate moving averagessma1 = df.Close.rolling(20).mean()sma2 = df.Close.rolling(60).mean()# create long and short signalsignal_long = (sma1 &gt; sma2) &amp; (sma1.shift() &lt; sma2.shift())signal_short = (sma1 &lt; sma2) &amp; (sma1.shift() &gt; sma2.shift())# combine long and short signalsignal = signal_long.copy()signal[signal_short] = -1 接下來我們直接比對一下，回測的程式碼，橘色部分比較特別，會逐一介紹 (先不急著抄寫，文末會附上完整代碼)首先，上圖中第一二行，我們將 Backtest 和 SignalStrategy 匯入Backtest 是一個幫我們回測的 interface，而 SignalStrategy 是一個 class我們可以繼承 SignalStrategy (第5行)就能把剛剛的訊號 signal 匯入來回測這邊會用到物件導向的概念，可以參考w3c提供的簡單 python 物件導向教學有了一個strategy空殼，接下來就可以實做內部功能了第7行中，我們覆寫一個parent 方法，叫做 init，在 init 這個方法中，我們可以計算回測要用的訊號這個方法會在回測開始前執行一次所以當我們先把訊號計算好這樣回測的時候就不用計算，速度上會比較快init中大部分的程式碼，跟我們開頭所述的非常雷同，有幾點不一樣而已：首先，在第8行中parent class 會先執行他的 init你可以想像，父母先吃飯，小孩再吃飯的道理1super().init()然後，第11行，也做了一點修正，從原本的12# 原本的df = crypto.get_all_binance('BTCUSDT', '4h')變成12# 新的close = pd.Series(self.data.Close)我們可以用 self.data.Close 來獲取「開高低收」的歷史價格這是繼承 SignalStrategy 附加的功能可以讓程式碼中的「策略」跟「價格」解耦讓策略不只交易 BTCUSDT還能交易其他加密貨幣，甚至是股票！最後12～21行，都跟之前一樣，所以就略過囉！最後的24行，就是將我們產生的 signal 給匯入1elf.set_signal(signal)這樣子 SignalStrategy 裡面就會根據 signal來進行翻多翻空的交易囉！上述 1～26 行，都是一個策略藍圖，我們只是規劃，並沒有真正執行這些程式碼所以我們還要額外家三行，建構出規劃好的策略，並且回測、統計回測結果：123bt = Backtest(df, Strategy)bt.run()bt.plot() 執行後會顯示出非常詳細的買賣點，這個就是所謂 窮人版 python 版的 multicharts 了吧！不過看起來策略的 performnace 不太好，賺不到什麼 $$所以下一個單元，我們就來使用內建的 optimize 方法，找尋最優的均線交叉策略！優化後的績效，先給大家聞香一下 點我進入下一個單元：策略優化 以下是完整的程式碼：另外也可以參考完整的 colab notebook 範例 123456789101112131415161718192021222324252627282930313233from finlab import cryptofrom backtesting import Backtestfrom backtesting.lib import SignalStrategyimport pandas as pddf = crypto.get_all_binance('BTCUSDT', '4h')class Strategy(SignalStrategy): def init(self): super().init() # Precompute the two moving averages close = pd.Series(self.data.Close) sma1 = close.rolling(20).mean() sma2 = close.rolling(60).mean() # Precompute signal signal_long = (sma1 &gt; sma2) &amp; (sma1.shift() &lt; sma2.shift()) signal_short = (sma1 &lt; sma2) &amp; (sma1.shift() &gt; sma2.shift()) signal = signal_long signal[signal_short] = -1 self.set_signal(signal) def next(self): super().next()bt = Backtest(df, Strategy)bt.run()bt.plot()","raw":null,"content":null,"categories":[{"name":"加密貨幣","slug":"加密貨幣","permalink":"https://www.finlab.tw/categories/加密貨幣/"}],"tags":[{"name":"python","slug":"python","permalink":"https://www.finlab.tw/tags/python/"},{"name":"比特幣","slug":"比特幣","permalink":"https://www.finlab.tw/tags/比特幣/"},{"name":"BTC","slug":"BTC","permalink":"https://www.finlab.tw/tags/BTC/"}]},{"title":"用Python投資加密貨幣：交易策略訊號實做 (Part 3)","slug":"btc-trading-signal","date":"2020-04-23T20:20:56.000Z","updated":"2020-06-11T17:35:12.040Z","comments":true,"path":"btc-trading-signal/","link":"","permalink":"https://www.finlab.tw/btc-trading-signal/","excerpt":"","text":"這篇文章中，我們將用 pandas 來做一個簡易的交易訊號， Pandas 是一個資料處理用的 Package專門用來做資料處理，你可以想像它是 python 裡面的 excel，可以產生並且處理各式各樣的表格 Pandas 操作介紹承接著上一篇文章，我們繼續在 google colab 上進行程式的實驗此時的 df 已經是歷史資料 就是一個 pandas.DataFrame 物件這個物件就像是 excel 表格一樣有很多的行跟列 每一個列都可以簡單的呼叫出來，以我們的例子，每一列都是一個時間序列： 1df.Close 由上圖可知，每一列也是一種物件叫做 pd.Series，這種物件，就是一條序列，可以想像是excel的單一一列的意思 製作簡易的均線策略pd.Series有很多特別的功能例如計算移動窗格，我們可以用pd.Series.rolling()來產生移動窗格，並且用pd.Series.rolling().mean()來產生這個移動窗格的平均數從時間序列的角度這個就是「均線」 123456sma1 = df.Close.rolling(20).mean()sma2 = df.Close.rolling(60).mean()df.Close.plot()sma1.plot()sma2.plot() 上圖中，我們將BTCUSDT的歷史紀錄 與兩條均線畫出來會發現，時間跨度太大，導致價格跟均線看不清楚，我們可以額外 zoom in 選取「某年」來觀察，可以使用中括號來選取時間範圍： 123df.Close['2020'].plot()sma1['2020'].plot()sma2['2020'].plot() 接下來，我們來設計交易訊號我們希望做一個簡單的均線策略： 假如短週期均線 sma1 超過 長週期 sma2 -&gt; 做多反之做空 要怎麼做出這樣的訊號呢？我們可以用不等式來進行， 不等式條件不等式，就是所謂的「大於等於小於」，我們假如將兩條時間序列做不等式運算， 在這兩條時間序列中，每一個元素會被一一拿出來比對，並且產生出新的「布林」時間序列：12condition = sma1 &gt; sma2condition 上圖中就是布林時間序列，每個時間點對映到「Ture」或是「False」假如今天條件成立，也就是「sma1 &gt; sma2」的話該時間點對映到的就會是 True反之則是 False 因為我們是均線突破策略，要怎麼結合不等式，來產生均線突破條件呢？我們還需要pd.Series.shift這個功能 調用「昨天」的價格 pd.Series.shiftpd.Series.shift是一個好用的function，可以將時間序列全部都往後延遲一天，例如以下的例子 12print(df.Close)print(df.Close.shift(1)) 你會發現兩者相差一天，所以在做策略時，我會傾向於，將pd.Series.shift(n)當作是「n個時間單位前的價格」，這邊我們用的是 ‘4h’ 4小時的歷史價格所以pd.Series.shift(1)就是4小時前，而pd.Series.shift(2)就是8小時前以此類推 假如我們只使用pd.Series.shift()n 不設定參數的話pandas 會預設 n=1 喔！ 結合上述的範例，產生策略訊號我們希望的做出來的邏輯：做多: 當(今天短週期均線 &gt; 今天長週期均線) 且 (昨天短週期均線 &lt; 昨天長週期均線)做空: 當(今天短週期均線 &lt; 今天長週期均線) 且 (昨天短週期均線 &gt; 昨天長週期均線) 我們可以將上述中文，對映到以下的程式碼：12signal_long = (sma1 &gt; sma2) &amp; (sma1.shift() &lt; sma2.shift())signal_short = (sma1 &lt; sma2) &amp; (sma1.shift() &gt; sma2.shift()) 上述程式碼中的 &amp; 就是「且」的意思 我們可以將訊號繪製出來：12signal_long.astype(int).plot()(-signal_short.astype(int)).plot() 以上這張圖我用 -1 顯示 賣出訊號，而 1 是買進訊號當我們將 True False 轉換成 int 時，會轉換成「1」跟「0」的數值 製作策略然而我們怎麼知道照著這個交易訊號操作實際的績效是怎麼樣呢？下一個單元中：回測，會教大家怎麼用 backtesting 這個 package來實做回測，模擬這個策略的績效敬請期待！","raw":null,"content":null,"categories":[{"name":"加密貨幣","slug":"加密貨幣","permalink":"https://www.finlab.tw/categories/加密貨幣/"}],"tags":[{"name":"python","slug":"python","permalink":"https://www.finlab.tw/tags/python/"},{"name":"比特幣","slug":"比特幣","permalink":"https://www.finlab.tw/tags/比特幣/"},{"name":"BTC","slug":"BTC","permalink":"https://www.finlab.tw/tags/BTC/"}]},{"title":"用Python投資加密貨幣：爬蟲下載歷史數據 (Part 2)","slug":"btc-crawler-py","date":"2020-04-22T20:42:33.000Z","updated":"2020-06-11T17:32:45.873Z","comments":true,"path":"btc-crawler-py/","link":"","permalink":"https://www.finlab.tw/btc-crawler-py/","excerpt":"","text":"這個單元，分享如何獲取比特幣歷史價格 可以打開colab線上編輯python跟我們一起做實驗吧！colab 是 google 提供，線上運行 python 的平台打開後，新增一個notebook直接一步步貼上下面的代碼程式就會順利運行了 獲取 python 函式庫首先，我們要先獲取幫大家寫好的 package 可以到github上下載12!git clone https://github.com/koreal6803/crypto_backtrader.git%cd crypto_backtrader 上面的指令，會先將預先寫好的程式從 github 上下載下來並且將目錄切換到 crypto_backtrader也就是下載下來的資料夾中 安裝一些必要的packages接下來我們來安裝一些必要的 dependencies這樣等會才能順利執行程式 1234!pip install python-binance!pip install bitmex!pip install Backtesting!pip install backtrader 加密貨幣命名方法這篇文章中，我們爬取 BTCUSDT 的價格BTCUSDT 這個 symbol 可以拆逞兩個部分一個是 BTC、另一個是 USDTBTCUSDT 代表，BTC 的價格，以 USDT 為單位，這邊為什麼我們要用 USDT 呢？因為他是跟 USD 是美元是表兄弟，USDT 是一種跟 USD 約略 1:1 兌換的穩定虛擬貨幣USDT 的好處是 在交易時，假如用 加密貨幣 和 法定貨幣（美元）來回交易這種方式交易，手續費會非常高昂例如我們以 Maicoin 買入跟賣出手續費約高達 1%， 今天我們假如使用 BTCUSDT pair 來交易由於同樣是加密貨幣，所以手續費算是大幅的降低，目前手續費在各平台，一般的標準是0.1%，根據平台的優惠、交易量可以打折，成本算是低很多， 交易對(trading pair)的相關介紹 那廢話不多說，趕快來下載歷史資料吧！ 使用幫大家寫好的函式庫我們可以使用from finlab import crypto將一些好用的 function 給叫進來 然後用crypto.get_all_binance 這個 function來獲取交易對(trading pair) 123from finlab import cryptodf = crypto.get_all_binance(&apos;BTCUSDT&apos;, &apos;4h&apos;)df.head() 上述這個 get_all_binance除了幫你整理好下載資料外，還會將這些資料資料，存在 crypto_backtrader/history/crypto/ 當中以 csv 的方式存起來方便你用 excel、multicharts 等程式來打開 你也可以輸入不同的 trading pair 名稱，可以binance官網查找 下一步，我們會分享怎麼用 Python 回測一個簡單的交易策略！","raw":null,"content":null,"categories":[{"name":"加密貨幣","slug":"加密貨幣","permalink":"https://www.finlab.tw/categories/加密貨幣/"}],"tags":[{"name":"python","slug":"python","permalink":"https://www.finlab.tw/tags/python/"},{"name":"比特幣","slug":"比特幣","permalink":"https://www.finlab.tw/tags/比特幣/"},{"name":"BTC","slug":"BTC","permalink":"https://www.finlab.tw/tags/BTC/"}]},{"title":"用Python投資加密貨幣：為什麼是比特幣？ (Part 1)","slug":"python-bitcoin-trading-why-bitcoin","date":"2020-04-20T06:09:14.000Z","updated":"2020-06-10T02:56:42.378Z","comments":true,"path":"python-bitcoin-trading-why-bitcoin/","link":"","permalink":"https://www.finlab.tw/python-bitcoin-trading-why-bitcoin/","excerpt":"","text":"原本想說開一個課程介紹加密貨幣做portfolio selection不過因為種種因素決定還是寫成免費一系列的文章介紹用 Python 建置 比特幣 交易系統 新科技如 machine learning、blockchain，或許可以說「有缺點」、「不成熟」、「尚未完善」但同時也是充滿機會的地方！不論這是投資還是投機我都會想要試試看這可以說是我對於程式和科技的執著吧！ 我想研究比特幣 可以分成三個原因： 1. 隨著時間推移科技的進步是很可怕的！你絕對沒辦法想像30年前，大家對個人電腦嗤之以鼻：「翻書1秒鐘，開機卻要3分鐘！」「書 比 電腦 要方便太多了！」「沒有理由大家需要電腦呀！」 今天，每個人口袋都有一台… 加密貨幣，會不會就是30年前的筆電呢？可能會，可能不會， 不過可以當作是買保險，因為 2. 我們生活在安逸的年代居安思危是很重要的人類的歷史，充滿戰爭，很多人因此顛沛流離，這80年以來，是世界上最和平的一段日子，究竟是人類越來越文明？還是說世界的動盪 就像是經濟一樣會循環，我們剛好處在和平的週期？ 設想你最糟糕的狀況：房子被強制徵收、國家貨幣大幅貶值、臨時離開住所，輕裝逃往其他國家， 要是這些事情都發生了，你可以什麼都沒有 什麼都不帶只要腦海中有比特幣的公鑰私鑰(帳號密碼)，一切都能卷土重來 一百年後 國家會興亡 貨幣會貶值但不論如何 只要人類文明尚在比特幣也會一直存在 3. 比特幣的特性可以舉貨幣的四種特徵「易於辨識」、「易於分割且品質一致」、「易於儲存運送」、「普遍接受性」 易於辨識做偽鈔用於便利商店很難但破解人類最先進的密碼學 更難 易於分割且品質一致比特幣支援「億」分之一 易於儲存運送只要有公私鑰在腦中，世界上任何地方都能使用，轉帳費用非常低廉 普遍接受性比特幣最為人詬病的點就是大家認為 法定貨幣、黃金的特性已經足夠加密貨幣只是多此一舉 另外，因為比特幣難監管，導致各國剛開始時非常排斥（但最近變成是愛恨交織就是了XD）加密貨幣存在的意義就是要等時間來慢慢證明了 究竟時間要等多久？我粗淺認為從微觀的角度 比特幣是可以被取代的但是從鴻觀的角度 也就是100年為跨度考慮了國家的興亡 和世界的動盪它的價值會慢慢被體現這邊的價值 比較著重在應用於日常生活的價值！ 在或近或遠的未來比特幣應該存在著某種地位 以這樣的角度思考則目前市值約為黃金的 1/50 倍有點太低了 所以以個人濁見 是有一些投資的機會的但投資跟投機往往一線之間當前比特幣的波動非常大！持有時加密貨幣一定要 少部位 用量化分析降低風險 要怎麼知道資金要投入多少呢？簡單的方式：想像，你「單一天」可以承受最大虧損？ 差不多就投資這麼多吧XDD因為比特幣下跌個70％ 80％都是有發生過的！ 接下來就來建置 Python 交易系統讓我們投資的風險 可防可控！ 歡迎追蹤粉專來訂閱最新的教學分享喔！","raw":null,"content":null,"categories":[{"name":"加密貨幣","slug":"加密貨幣","permalink":"https://www.finlab.tw/categories/加密貨幣/"}],"tags":[{"name":"python","slug":"python","permalink":"https://www.finlab.tw/tags/python/"},{"name":"比特幣","slug":"比特幣","permalink":"https://www.finlab.tw/tags/比特幣/"},{"name":"BTC","slug":"BTC","permalink":"https://www.finlab.tw/tags/BTC/"}]},{"title":"台北最抗跌公寓在哪？ Python 告訴你 (Part 3)","slug":"real-state-best-district-old-buildings-taipei","date":"2019-11-28T07:24:28.000Z","updated":"2020-06-05T07:29:51.984Z","comments":true,"path":"real-state-best-district-old-buildings-taipei/","link":"","permalink":"https://www.finlab.tw/real-state-best-district-old-buildings-taipei/","excerpt":"","text":"文末告訴你買哪裡？多少年齡的公寓？比較好（結果滿出乎意料） 根據專家的說法，由於人口老化的關係，房價未來比較悲觀，假如我們要自住買房怎麼辦？ 有一個家的好處是畢竟每個人生活習慣不同要客制化專屬的生活空間只有擁有房子才辦得到 但是，房子保值的年代已經過去了幾年前台北的房價被炒的很高有些地方明顯就是太貴了這幾年慢慢的顯現出來 假如你因為工作需求，需要再台北買一個自己的家要買在哪裡比較保值？對，保值而已，不求上漲，只求不要跌太多 打開實價登錄，不論是實價網、樂屋網、或其他的網站在功能上，都有很多進步的空間！ 原因在於這些網站，都只提供進幾年的數據，而且無法統計以及繪圖功能，大部分都只提供近一兩年的比較，但一般人自住買房，關心的是10年後的房價，而不只是短期的上漲下跌， 所以只好來用 Python 做一點功課了 首先，我們根據之前的介紹，我們可以 爬到實價登錄歷史資料 將資料整理成 dataframe可以先進行以上兩個步驟，然後就可以接著來寫 code 囉！ 這次的主題是「公寓」我們假設某個人想買台北的房子但是由於金錢考量，只能選擇公寓， 「究竟要怎麼選呢？」 1. 用區域來選首先我們想要算出，台北市「公寓」的歷史走勢 123456789101112131415161718import matplotlib.pyplot as plt# plt.rcParams['font.sans-serif'] = ['Noto Sans TC Regular'] # 有支援中文的字體# plt.rcParams['axes.unicode_minus']=Falseresult = &#123;&#125; for dis in set(df['鄉鎮市區']): condition1 = df['土地區段位置/建物區段門牌'].notna() condition2 = df['建物型態'] == '公寓(5樓含以下無電梯)' condition3 = (df['鄉鎮市區'] == dis) df_local = df[condition3 &amp; condition2] result[dis] = df_local['單價元坪'].groupby(df_local.index.year).mean()k = pd.DataFrame(result).loc[2012:]k.plot() 這張圖可以看出很多端倪，自從政府調整法令後，炒房投資客有明顯減少，所以貴的地區房價下跌， 另外也因為台北交通便利，（ubike、公車、捷運）所以不論房價高低，其實生活便利程度相差無幾使得便宜的區域房價上漲， 房價差距越來越小，平均來說，各區房價都越來越往 50～60W/坪 的價格趨近。 另外，除了肉眼來判別外，我們也可以由價格標準差得知，台北市各區，房價差異慢慢縮小， 由上面的分析，我們可以得到一個結論對於「公寓」而言，我們應該選擇「房價目前較低的地區」因為這些地區的房價，會慢慢往平均（50～60W/坪）移動 所以假如是買公寓的話，要選哪裡呢？以條件來分析的話，可以這樣選 2019年房價 &lt; 平均的區域（價格低的） 2019年房價 &gt; 2018年的區域（看近期有漲的） 以下就是程式碼以及選出來的區域： 12345p2019 = k.loc[2019]p2018 = k.loc[2018]good_district = (p2019 &gt; p2018) &amp; (p2019 &lt; p2019.mean())p2019[good_district].sort_values() \b\b\b2. 用屋齡來判斷 大家都說越老的房子會折舊，越老的房子應該要越便宜，然而事情真的是這樣嗎？ 實價登錄的資料令人跌破眼鏡！根據數據的分析，每個區域都適用：在屋齡「40～50」年的房子，竟然還會往上漲！？不論哪一個區域，哪一年，都可以觀察到這個現象！ 舉個例子，以下我們來繪圖「中山區」房價 12345for i in range(2012, 2020): df_local = df[(df['鄉鎮市區'] == '中山區') &amp; (df['year'] == i)] df_local['房屋年齡'] = ((2019 - pd.to_numeric(df_local['建築完成年月'].str[:3]) - 1911)).astype(int, errors='ignore') df_local['房屋年齡'] = pd.to_numeric(df_local['房屋年齡'] /10).round() df_local['單價元坪'].groupby(df_local['房屋年齡']).mean().plot() 上圖每一條線的意思是每一年「不同屋齡的公寓價格」我們可以觀察到幾個現象： 年輕的公寓下跌的比較快 老公寓在40～50歲時，還會往上漲 第二點尤其的詭異，可能是因為都更的關係？不只是中山區，台北的任一區都可以觀察到這個現象大家可以回去跑跑看 總之，至少老公寓折舊的速度，是比想像中還要慢的，（或可能是老公寓都賣不出去，除非特別地段、特別地點，導致樣本有偏差？還需要再研究） 總結這邊還是要提醒大家，這個是針對「老公寓」做的研究，假如是「新成屋」、「華廈」等屋型，還需要額外去研究才能更清楚。 數據只是一部分的幫助，買到好房子還是必需要做很多其他功課例如：附近的捷運、生活機能、嫌惡設施 等等都很重要另外，看房技巧、談價格 也不能忽略， 不過以統計的觀點來說 保值地區首選順序：「萬華區、文山區、內湖區、南港區」 保值屋齡首選：「20～40歲以上」公寓 假如你要在台北買房，而且想要買舊公寓重新裝潢，希望這篇文章可以幫助到你！ 也歡迎分享給有在看房的朋友哦！","raw":null,"content":null,"categories":[{"name":"實價登入","slug":"實價登入","permalink":"https://www.finlab.tw/categories/實價登入/"}],"tags":[{"name":"python","slug":"python","permalink":"https://www.finlab.tw/tags/python/"},{"name":"房地產","slug":"房地產","permalink":"https://www.finlab.tw/tags/房地產/"}]},{"title":"機器學習無法預測股價！","slug":"ml-can-not-predict-price","date":"2019-11-06T19:57:11.000Z","updated":"2020-06-05T07:29:48.574Z","comments":true,"path":"ml-can-not-predict-price/","link":"","permalink":"https://www.finlab.tw/ml-can-not-predict-price/","excerpt":"","text":"很多我非常尊敬的前輩，說機器學習有一些缺點，拿來投資很危險，這些我都認同，畢竟要做出好的模型是很有挑戰的，且回測模擬跟實際投資的狀況不一樣，非常認同！ 但有時候真的稍微有那麼一點激烈另一位我很尊敬的前輩，暗指用AI投資的人：「他們的想像力都消失了，他們只是在耗著老天爺給他們的天賦， 或是青春給他們能犯錯的空間，在那邊浪費生命。」「很多人都被工具綁架邏輯，沒有一點想像力」「做出來的只是垃圾，臭不可聞」 嗯…「究竟跟AI有多深的怨念？」XD我不知道是不是哪裡有不小心得罪或冒犯，才讓他對於使用 AI 投資的人這麼嗤之以鼻以我來說，我最早之前，是做價值投資的研究，後來加入了點技術指標，價量，到現在研究機器學習， 我覺得每個人投資方法不同，有價值型投資，技術指標，短線、極短線、中長線、存股不論是哪些方法，都有很多人賺錢，更多人賠錢 不論如何 可以長期穩定獲利的就是好工具。這些對 AI 不屑前輩的口中，總是有著這麼一句話： 機器學習無法預測價格這句話，以我自己的經驗來說，是舉雙手認同的，但就算是認同，我也絕對不敢斷定，或直接了當的大肆宣揚，畢竟這個世界有太多東西要學習了， 不過我們就先「假設」機器學習無法預測股價好了 難道想獲利一定要預測股價嗎？你不需要懂機器學習，也知道： 通常撰寫策略，從來不用預測股價只要產生的交易訊號，也就是買賣時機點就可以了，照著操作，被動的投資，而不是主動的預測，對於機器學習也是同樣的道理。 所以正確的使用機器學習的方法是： 不要用機器學習預測股價，而是用來直接產生交易訊號！既然大家都有這樣的知識，為何還要執著於「機器學習無法預測股價」所以「機器學習沒有用」這件事情上呢？就像是你測量羽毛跟保齡球落下，時間不一樣，難道就說牛頓第二運動定律是錯的了嗎？比較有可能是實驗做錯了啦～ 為何大家都說機器學習無法預測股價，先簡單的說明一下 最為人所知的機器學習障礙 - 預測延遲簡單來說，就是下圖中，藍色的為股價，而紅色的是機器學習預測的數值，可以看到紅色永遠比藍色線慢半拍，晚一步才轉折雖然藍色跟紅色非常接近，但離「預測」其實差得很遠，回測後就會發現，是不能拿來交易的， 這個就是大家所說，機器學習的預測延遲說真的，這類有小瑕疵的文章或論文是真的滿多的，例如 這篇就連我們的部落格，也有這類的文章 你只要搜尋「machine learning predict stock price」就可以找到滿坑滿谷的文章，都有這個缺點 之所以會有這樣的問題，不難理解，因為股價並不是stationary time series，所以機器學習直接預測股價很容易失真導致最後落入 overfitting 的窘境，且預測結果常常會有 bias 所以 我自己寫的文章，沒有任何一篇是教大家預測股價的我想提供大家真的能夠獲利的程式碼，用來展示機器學習真的可以用來投資，我不是蹭AI的熱潮，東拼西湊，只求程式可以跑，而是盡力做出一個希望能夠獲利的模型，又讓大家可以學到新的演算法並把這個模型分享給大家，然而AI不是神，沒有一個策略保證一定賺錢，但我至少做到問心無愧，目前績效看起來也還OK， 機器學習策略 - 我認為有效的方法接下來舉一個，我認為有用的方法，首先利用Integrating a Piecewise Linear Representation Method and a Neural Network Model for Stock Trading Points Prediction這篇 paper 當中的方式產生交易訊號並且讓機器學習模型模仿，找出轉折點，以下是簡略的數據： 商品：台股加權指數，取每15分鐘的收盤價 製作特徵：利用各種技術指標當作features 預測訊號：利用上述的 paper 產生交易訊號 利用2015年以前的資料產生模型， 用一個最普通的神經網路，就可以有不錯的效果，以下是2019年5月的範例圖，其中 紅色為股價 藍色為多方轉折的發生機率 紫色為空方轉折的發生機率（負值） 可以看出來，當藍色飆高時，通常是底部的多方轉折而紫色飆高時，則是相反，是頭部的空方轉折 2019年五月 2019年六月看不出有延遲，幾乎都是直接實時反應，看起來還抓的算滿OK的，可以用來逆勢操作 雖然看似有用，但 機器學習不適用於所有人，因為很難很複雜付出與收穫可能不成正比假如你不喜歡折磨自己其實簡單的策略也可以賺錢的，所以說你不一定要用機器學習來投資， 然而每個人各有喜好，以我而言，我喜歡追求和分享新的科技，並且幫助大家學習新知識之餘，幸運的話還可以賺點錢，然而走在科技的前沿，特立獨行，本來就是會有很多的支持和反對我不敢說這條路走的正確，但我們能走多遠是多遠，這一切紛擾，只能用對帳單來證明了（XDD努力生產中）（雖然我們早在一年前開始就把模擬結果每天都放上網，但看來對帳單還是必須的呀！）","raw":null,"content":null,"categories":[{"name":"AI看股票","slug":"AI看股票","permalink":"https://www.finlab.tw/categories/AI看股票/"}],"tags":[{"name":"機器學習","slug":"機器學習","permalink":"https://www.finlab.tw/tags/機器學習/"},{"name":"Machine Learning","slug":"Machine-Learning","permalink":"https://www.finlab.tw/tags/Machine-Learning/"},{"name":"程式交易","slug":"程式交易","permalink":"https://www.finlab.tw/tags/程式交易/"},{"name":"量化投資","slug":"量化投資","permalink":"https://www.finlab.tw/tags/量化投資/"}]},{"title":"投資組合 Paper Trading 1分鐘就上手（Cmoney 大富翁股票 API）","slug":"cmoney-paper-trading","date":"2019-11-02T05:07:19.000Z","updated":"2020-06-05T07:29:51.186Z","comments":true,"path":"cmoney-paper-trading/","link":"","permalink":"https://www.finlab.tw/cmoney-paper-trading/","excerpt":"","text":"沒有錢投資嗎？想要鍛鍊投資技巧又不虧錢嗎？除了回測外，想要有接近真實情況的投資模擬嗎？那你一定要試試看我寫的這個小程式：CmoneyVirtualAccount他可以幫你模擬股票買賣的獲利狀況，讓你在沒有錢的時候，可以拿來做練習。 為什麼要用 Paper TradingPaper Trading 可以幫助我們更理解市場上投資的真實狀況，顯示我們「假如」持有某種資產組合的報酬率，我們可以自行設定投資金額，例如100萬，並且測試看看，自己精心研發的策略有沒有用 為什麼不用回測就好了？簡單講，大部分寫Python的人，回測框架要達到非常嚴謹，是非常困難的，所以通常我們都「大概測一測」，比較少考慮的部分有： 胃納量（有些股票根本沒成交量，怎麼可能買很多張？） 不小心使用到未來數據（財報、月營收） 摩擦成本（手續費、證交稅） 忘記把已下市股票給納入回測中 太多了…以後再整理給大家 除了更精密的模擬外，Paper Trading還能夠 幫助投資人檢視策略的「微觀效果」Paper Trading 可以讓你對於投資更有感覺，回測只是看長年下來的獲利績效，雖然你可能覺得長期績效很好，但是這是個宏觀角度（好幾年），也就是最後得到的總報酬率，然而我們真正投資的時候，是深處於微觀的世界（每天），會覺得每天的起伏都很劇烈！有時候會讓你疑神疑鬼，想要調整策略，覺得這個策略可能失效了，變得說常常在優化策略，但是都是無謂的優化Paper Trading 另一個關鍵是，你要把它當成真的$（雖然很難），這樣操作的時候，除了模擬獲利，也模擬自己面對報酬率的心態， 接下來我們就進行三個步驟來做 Paper Trading 吧！ 1. 安裝這個程式沒什麼特別的安裝方法，可以打開anaconda prompt 輸入以下指令1234567git clone https://github.com/koreal6803/CmoneyVirtualAccount.git# mac 使用的指令mv CmoneyVirtualAccount/cmoneyVirtualAccount ./cmoney# windows 使用的指令move CmoneyVirtualAccount/cmoneyVirtualAccount ./cmoney 2. 申請帳號我們要到 Cmoney 的平台來申請帳號密碼：https://www.cmoney.tw/vt/這邊值得注意的是，假如你有用FB登入，請還是要設定一個密碼，這樣等等才可以使用 Python 操控 Cmoney 的模擬平台喔！(右上角使用者名稱-&gt;基本資料) 3. 用程式操控然後就可以在此資料夾中，使用 Python 來做 Paper trading 囉！1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859from cmoney.stock import VirtualStockAccount# 登入vs = VirtualStockAccount('your_account', 'your_password')# 切換子帳號vs.aid = '123456'# ------ ## 查看帳戶# ------ # # 拿到某檔股票的資料：vs.get_price('2330')# 查看目前帳戶持有的股票vs.status()# 查看現有資金vs.info()# ------ ## 操作帳戶# ------ # # 買一張台積電（強迫現價或開盤價買入）vs.buy('2330', 1)# 賣出一張台積電（強迫現價或開盤賣出）vs.sell('2330', 1)# ------ ## 批次操作# ------ # # 買一張台積電、一張聯發科vs.buy(&#123;'2330': 1, '2454': 1&#125;)# 出清所有股票vs.sell_all()# 將所有帳戶持股設定成：「一張台積電」、「一張聯發科」# （會先賣出股票，並且買「一張台積電」、「一張聯發科」)vs.rebalance(&#123;'2330': 1, '2454': 1&#125;)# 自動分配持股（平均分散總資產）（通常我會用這個）vs.sync(['1101', '2330'])# ------ ## 委託操作# ------ # # 查看目前的委託單vs.get_orders()# 刪除所有委託單vs.cancel_all_orders() 課程同學 Bonus!假如有上「小資族選股策略」的同學，想要paper trade你的策略，配合最後的優等生策略，可以直接使用： 1vs.sync(strategy(data)) 來 paper trade 任何選股策略喔！ 這支程式放在倉庫裡很久了，最近想要用又把它拿出來，想說修理一下分享給大家！也歡迎大家來 push 新功能喔～（缺 unit test 呀XD）","raw":null,"content":null,"categories":[{"name":"財經Python教","slug":"財經Python教","permalink":"https://www.finlab.tw/categories/財經Python教/"}],"tags":[{"name":"python","slug":"python","permalink":"https://www.finlab.tw/tags/python/"},{"name":"程式交易","slug":"程式交易","permalink":"https://www.finlab.tw/tags/程式交易/"}]},{"title":"只用一行程式碼分析數據!?（實用的 Python Package）","slug":"one-line-info-dataframe","date":"2019-09-30T13:46:49.000Z","updated":"2020-06-05T07:29:50.751Z","comments":true,"path":"one-line-info-dataframe/","link":"","permalink":"https://www.finlab.tw/one-line-info-dataframe/","excerpt":"","text":"這篇文章介紹一個好用的 package，只要一行，就可以做出精美、詳細的圖表分析還可以幫你查看資料是否有缺漏和錯誤的情況！ 今天的程式碼成果： 先取得要分析之資料今天我們來分析一下股票的本益比、股價淨值比和殖利率，先提供給大家一個爬蟲，讓大家可以直接把資料爬下來： 123456789101112131415import datetimeimport pandas as pdimport warningsimport requestsfrom io import StringIOimport pandas_profilingdef crawler(date): datestr = date.strftime('%Y%m%d') url = 'https://www.twse.com.tw/exchangeReport/BWIBBU_d?response=csv&amp;date='+datestr+'&amp;selectType=ALL' res = requests.get(url) df = pd.read_csv(StringIO(res.text), header=1) df['本益比'] = pd.to_numeric(df['本益比'], errors='coerce') return df.dropna(thresh=3).dropna(thresh=0.8, axis=1) 接下來我們就呼叫 crawler 這個函式，就可以將財務數據資料都爬取下來囉！ 12df = crawler(datetime.date(2019,10,7))df.head() 1. 用舊的方法來分析資料最簡單的方式，假如有用過 pandas 的大家應該都知道，可以使用 df.describe() 來大致上觀察數據的樣貌假如你對 pandas 不太熟悉，它有點像是拿來處理表格的資料，就像是 python 界的 excel 一樣，雖然它非常好用，但是有點太古老（無聊）了！ 1df.describe() 2. 酷炫的方法資料分析首先我們可以安裝 pandas_profiling 1pip install pandas_profiling 接下來就可以直接來使用： 123import pandas_profilingdf = crawler(datetime.date(2019,10,7))df.profile_report() 然後我們就會看到超精美的圖表！ 找出資料的缺漏或問題我覺得 pandas_profiling 很棒的地方在於，可以將資料一口氣全部統整給我們，方便我們去做資料前處理，例如下圖中的左下角，就可以看到每一個column有哪些警告， 本益比有 20.4 % 是缺漏的：這是正常情況，因為本益比小於零不顯示 殖利率有 20.0 % 是 0：這也是正常情況，因為公司不一定有發股利股息 財報都是用第 2 季的財報：這也是正常的！ 有了這種檢驗，更能夠讓我們知道資料的可靠程度，真的非常非常棒！除了上述的檢驗外，我們還可以 輕鬆檢視每一個 column 的資料這邊可以看到每一種資料的分佈，可以讓我們更好的掌握數據分佈型態 檢視資料相關性這邊還可以檢視資料的相關性，這邊有些複雜的名詞，哪天再來跟各位介紹 pandas_profiling 真的是很不錯的 package，可以幫我們進一步的認識資料，假如你也覺得這個 package 很實用，也歡迎你分享給大家喔！","raw":null,"content":null,"categories":[{"name":"財經Python教學","slug":"財經Python教學","permalink":"https://www.finlab.tw/categories/財經Python教學/"}],"tags":[{"name":"機器學習","slug":"機器學習","permalink":"https://www.finlab.tw/tags/機器學習/"},{"name":"Python","slug":"Python","permalink":"https://www.finlab.tw/tags/Python/"},{"name":"dataframe","slug":"dataframe","permalink":"https://www.finlab.tw/tags/dataframe/"},{"name":"資料分析","slug":"資料分析","permalink":"https://www.finlab.tw/tags/資料分析/"}]},{"title":"用程式分析房地產可行嗎（2）房價分析","slug":"real-estate-analasys-histograms","date":"2019-08-29T00:58:05.000Z","updated":"2020-06-05T07:29:48.078Z","comments":true,"path":"real-estate-analasys-histograms/","link":"","permalink":"https://www.finlab.tw/real-estate-analasys-histograms/","excerpt":"","text":"大家都在說房價市場恢復景氣，然而真的是這樣子嗎？你有沒有覺得，怎麼每個人說的話都不一樣？數據雖然都是實價登錄，但有些人就是看到漲，有些人就是看跌？究竟誰說的對，還是必須要親自研究一下數據，才會知道 數據是拿來「調整」的？！身為一個「曾經」產出學術文章寫手，就會知道這些數據是有很多「可以操作空間」（這樣講對嗎？XD）不要相信任何人幫你統計的數據因為任何人的數據都有可能想達成某種目的例如某人要增加流量和公信力，就可以危言聳聽一點，用數據製作房價都在下跌的結論某房仲想要刺激房地產，就會製作止跌回升的訊號， 難道數據造假？！不論上漲下跌，相信這些數據都是對的，都是從政府的實價登錄而得到但分析方式不同，就會產生不同的結果！ 所以數據是用來「感覺」的，而不是單看少數「專家」的結論只能多做一點實驗，盡量讓實驗客觀公正， 這篇文章總共分成三個部分： 獲取實價登錄 房價歷史走勢圖 房價分佈圖 所以接下來我們就用 Python 來跟大家一起分析實價登錄的資料吧！ 取得實價登錄資料首先跟上次一樣，\b爬取了實價登入所有歷史數據，這次我們爬取csv檔： 1234567891011121314151617181920212223242526import requestsimport osimport zipfileimport timedef real_estate_crawler(year, season): if year &gt; 1000: year -= 1911 # download real estate zip file res = requests.get(\"https://plvr.land.moi.gov.tw//DownloadSeason?season=\"+str(year)+\"S\"+str(season)+\"&amp;type=zip&amp;fileName=lvr_landcsv.zip\") # save content to file fname = str(year)+str(season)+'.zip' open(fname, 'wb').write(res.content) # make additional folder for files to extract folder = 'real_estate' + str(year) + str(season) if not os.path.isdir(folder): os.mkdir(folder) # extract files to the folder with zipfile.ZipFile(fname, 'r') as zip_ref: zip_ref.extractall(folder) time.sleep(10) 有了上述這個 function 我們可以將實價登錄資訊全部爬取下來： 12345678910real_estate_crawler(101, 3)real_estate_crawler(101, 4)for year in range(102, 108): for season in range(1,5): print(year, season) real_estate_crawler(year, season)real_estate_crawler(108, 1)real_estate_crawler(108, 2) 下載完後，會看到每一年每一季的實價登錄資料夾裡面有很多檔案，主要可以分成以下三種： x_lvr_land_a：房屋買賣交易 x_lvr_land_b：新成屋交易 x_lvr_land_c：租房交易 其中 x 是一個英文字母，代表每個縣市，也就是你身份證字號的開頭例如台北，就是「a」，新北市就是「f」，以此類推 讀取資料接下來我們以台北市為例子，看看能不能找到台北市便宜的好房子，首先我們將歷年資料都讀進來： 123456789101112131415import osimport pandas as pd# 歷年資料夾dirs = [d for d in os.listdir() if d[:4] == 'real']dfs = []for d in dirs: print(d) df = pd.read_csv(os.path.join(d,'a_lvr_land_a.csv'), index_col=False) df['Q'] = d[-1] dfs.append(df.iloc[1:]) df = pd.concat(dfs, sort=True) 然而這些資訊還必須再經過處理，才會讓我們待會的資料分析更好下手 12345678910111213141516171819# 新增交易年份df['year'] = df['交易年月日'].str[:-4].astype(int) + 1911# 不同名稱同項目資料合併df['單價元平方公尺'].fillna(df['單價元/平方公尺'], inplace=True)df.drop(columns='單價元/平方公尺')# 平方公尺換成坪df['單價元平方公尺'] = df['單價元平方公尺'].astype(float)df['單價元坪'] = df['單價元平方公尺'] * 3.30579# 建物型態df['建物型態2'] = df['建物型態'].str.split('(').str[0]# 刪除有備註之交易（多為親友交易、價格不正常之交易）df = df[df['備註'].isnull()]# 將index改成年月日df.index = pd.to_datetime((df['交易年月日'].str[:-4].astype(int) + 1911).astype(str) + df['交易年月日'].str[-4:] ,errors='coerce') 接下來我們可以來看一下這些資料有哪些欄位： 1df.columns 上圖我們比較在意的是： 單價元坪：每坪房價是多少 物件型態：住宅大樓, 倉庫, 公寓, 套房…等 鄉鎮市區：中山區, 中正區, 信義區, 內湖區…等 每年房價的變化 接下來我們就來將上述這些數據，變化成一些圖表，方便我們以視覺化的方式來理解資料 圖表分析老實說，每個建商給的房價走勢圖好像都不太一樣，我不知道他們是怎麼處理這些數據，有時候走勢都好棒棒的感覺至少finlab的處理的方式，是完全透明，攤在陽光下讓大家知道我覺得「公佈程式」就是一種比較公正、透明、公開的方式讓大家檢驗這樣的計算是否公正，假如哪裡可以再改進，也可以跟我說！ 每年房價走勢圖下圖我們就來計算歷年房價的走勢圖，我們希望每一區可以分開畫方便我們瞭解地區、時間這兩個因子對於房價的差異 12345678910111213141516prices = &#123;&#125;for district in set(df['鄉鎮市區']): cond = ( (df['主要用途'] == '住家用') &amp; (df['鄉鎮市區'] == district) &amp; (df['單價元坪'] &lt; df[\"單價元坪\"].quantile(0.95)) &amp; (df['單價元坪'] &gt; df[\"單價元坪\"].quantile(0.05)) ) groups = df[cond]['year'] prices[district] = df[cond]['單價元坪'].astype(float).groupby(groups).mean().loc[2012:] price_history = pd.DataFrame(prices)price_history.plot() 上圖中我們可以看出來，雖然房價會隨著時間波動，但地段的優勢還是非常的明顯，例如大安區還是很可怕的，一坪最高可以到90萬元（平均後的數字）然而以2019年來說，可以發現， 高價位地段 -&gt; 稍微下跌低價位地段 -&gt; 稍微上漲 畢竟台北的大眾交通工具也算是還OK，住哪裡應該都不至於太不方便所以在幾乎沒有炒作空間的狀況下，不同地區的差異性慢慢降低，感覺是合理的 那總體來說呢？我們可以粗略的用簡單的「平均」的方式，將所有地區的房價平均起來： 1price_history.mean(axis=1).plot() 就會看到2014年高峰後，台北市房價就處於下跌的狀態 不是有人說2019年房價回升了嗎？刪除outlier的方式不同，可以得出不同的結論，也是有一些實驗中 2019 年平均房價比 2018 年高，所以目前也有很多人說止跌回升是有可能的 但是整體的大趨勢來說，從2014年以後開始下跌至今，似乎跌幅沒有像當初這麼重，甚至有止跌的跡象，但究竟房價有沒有回升，還需要謹慎評估 甚至還有報導說，某些地段回到了2014、2015高點，這都是拿單一區段來當結論，見樹不見林的方式，背後居心自然是眾人皆知。 思考一下，為何現在都在推新建案？有很多節目，專家們都宣導，買公寓（舊房子）比較可能選到有壁癌、排水系統不好、貸款成數較低…等等，鼓吹大家買新建案。 當然他們很有可能是為了消費者著想，這些都是實話，不過也有可能是因為新房子比起公寓，更能賣出好價錢，進而維持房價不衰退，所以接下來我們就來分析一下 建物型態12345678910building_type_prices = &#123;&#125;for building_type in set(df['建物型態2']): cond = ( (df['主要用途'] == '住家用') &amp; (df['單價元坪'] &lt; df[\"單價元坪\"].quantile(0.8)) &amp; (df['單價元坪'] &gt; df[\"單價元坪\"].quantile(0.2)) &amp; (df['建物型態2'] == building_type) ) building_type_prices[building_type] = df[cond]['單價元坪'].groupby(df[cond]['year']).mean().loc[2012:]pd.DataFrame(building_type_prices)[['公寓', '住宅大樓', '套房', '華廈']].plot() 上圖中我們可以發現，老舊公寓的價格真的會不太理想，比起一般的大樓住宅或是住宅，近年價差越來越明顯，當價差到達一定的程度，買新房不一定比較好，舊房不一定這麼一無是處。 但是以平均來當作指標，其實也不是這麼精確，我們還是用分佈圖用眼睛來感受一下，才是最好瞭解房價的方法： 分佈圖1234567plt.rcParams['font.size'] = 20for district in set(df['鄉鎮市區']): dfdistrict = df[df['鄉鎮市區'] == district] dfdistrict['單價元坪'][dfdistrict['單價元坪'] &lt; 2000000].hist(bins=120, alpha=0.7)plt.xlim(0, 2000000)plt.legend(set(df['鄉鎮市區'])) 上圖中可以明顯感受到，不同地區房價的差異性，例如最右邊的分佈（大安區），大部分單價都比較貴，同時我們也可以看到一些低的詭譎的房價（每坪0萬？！），當然也有很多高的咋舌的單價，甚至一坪200萬都有，只能說富人的世界跟我們一般人還是差距很大呀！ 我們取平均的時候無法將這些怪房價給濾除，但好在人眼可以這就是分佈圖的重要性 買房使用 Python 簡單的範例假如今天我們想在北投買房子，可以將北投的房價單獨拿出來看，並且按照建案型態製作分佈圖 1234567dfdistrict = df[(df['鄉鎮市區'] == '北投區') &amp; (df['year'] &gt;= 2018) &amp; ( (df['建物型態2'] == '住宅大樓') | (df['建物型態2'] == '公寓') | (df['建物型態2'] == '套房'))]dfdistrict = dfdistrict[dfdistrict['單價元坪'] &lt; 2000000]dfdistrict['單價元坪'].groupby(dfdistrict['建物型態2']).hist(bins=50, alpha=0.7)plt.legend(set(dfdistrict['建物型態2'])) 這樣我們就可以一眼看出來，究竟公寓跟電梯大樓有什麼不一樣方便我們在選擇的時候，多一些考慮讓我們在買房談價格時，可以有更全面的概念！ 有時候買房不是為了投資，而是生活所需而不得不，在這個時代，我們已經無法買的精妙，炒房產呱呱叫，但至少在面對這種重大抉擇時，能有多一份數據輔佐，盡量不要「虧太多」，買到與價格相符的好房！ 假如希望我們未來可以多多發佈類似的文章，可以到粉絲團幫我們按個讚～！ colab線上編寫此範例","raw":null,"content":null,"categories":[{"name":"實價登入","slug":"實價登入","permalink":"https://www.finlab.tw/categories/實價登入/"}],"tags":[{"name":"python","slug":"python","permalink":"https://www.finlab.tw/tags/python/"},{"name":"房地產","slug":"房地產","permalink":"https://www.finlab.tw/tags/房地產/"}]},{"title":"用程式分析房地產可行嗎（1）房地產爬蟲","slug":"real-estate-analysis1","date":"2019-08-21T02:10:05.000Z","updated":"2020-06-16T02:33:30.325Z","comments":true,"path":"real-estate-analysis1/","link":"","permalink":"https://www.finlab.tw/real-estate-analysis1/","excerpt":"","text":"賺了一輩子的錢，還不如買對一戶房！非常誇張，但又滿有道理的假如一定要買房子，要買在哪裡呢？如何找到抗跌的地段？隨著屋齡不同，房價應該要如何變化呢？ 這些問題，可能只有房地產專家一一為你解惑，但一般人要買房，除了相信專家以外，還能怎麼辦呢？ 利用程式來研究，自己當專家現在台灣有實價登入的法規，這些資訊都是公開透明的（雖然實價不等於真的成交價，但應該還是有正相關） 要爬取這些資訊，只要很短的程式碼： 1234567891011121314151617181920212223242526import requestsimport osimport zipfileimport timedef real_estate_crawler(year, season): if year &gt; 1000: year -= 1911 # download real estate zip content res = requests.get(\"https://plvr.land.moi.gov.tw//DownloadSeason?season=\"+str(year)+\"S\"+str(season)+\"&amp;type=zip&amp;fileName=lvr_landcsv.zip\") # save content to file fname = str(year)+str(season)+'.zip' open(fname, 'wb').write(res.content) # make additional folder for files to extract folder = 'real_estate' + str(year) + str(season) if not os.path.isdir(folder): os.mkdir(folder) # extract files to the folder with zipfile.ZipFile(fname, 'r') as zip_ref: zip_ref.extractall(folder) time.sleep(10) 然後我們再寫個 for 迴圈，就可以將近 8 年的房價買賣資訊都爬下來 12345678910real_estate_crawler(101, 3)real_estate_crawler(101, 4)for year in range(102, 108): for season in range(1,5): print(year, season) real_estate_crawler(year, season)real_estate_crawler(108, 1)real_estate_crawler(108, 2) 這邊就先簡單的放上爬蟲，也有線上colab範例直接運行 之後我們會來研究，究竟那邊的房價衰退的比較快？哪裡是比較抗跌的區域？哪裡的房子最便宜又最抗跌？ 假如你對這系列有興趣的話，可以到粉絲團的這篇文章按個讚這樣我才知道這是大家想看的才會繼續往下寫喔！","raw":null,"content":null,"categories":[{"name":"實價登入","slug":"實價登入","permalink":"https://www.finlab.tw/categories/實價登入/"}],"tags":[{"name":"python","slug":"python","permalink":"https://www.finlab.tw/tags/python/"},{"name":"房地產","slug":"房地產","permalink":"https://www.finlab.tw/tags/房地產/"}]},{"title":"利用機器學習預測漲跌-優化方式（1）","slug":"generate-labels-stop-loss-stop-profit","date":"2019-08-01T02:02:55.000Z","updated":"2020-06-05T07:29:51.466Z","comments":true,"path":"generate-labels-stop-loss-stop-profit/","link":"","permalink":"https://www.finlab.tw/generate-labels-stop-loss-stop-profit/","excerpt":"","text":"第二堂課程最近也終於走向穩定了，剛開始有一些的bug、RAM的優化上的問題，還請同學們多多擔待，我們也會持許推出新的介紹，讓大家有更多可以加強機器學習的方式，這一篇文章中，我們要針對以往的labeling方式進行優化，讓訓練出來的模型，可以有更準確的預測。沒有參加課程的同學，也可以跟我們一起學習，下方的程式碼都是完全公開的！請大家自行拿取玩玩看喔！ 機器學習 「features 和 labels」假如您不知道Labeling是什麼，那我們這邊還是先簡單的介紹一下supervise機器學習(監督式機器學習)：這一類的機器學習模型，可以想像是一個函式 function f，我們想要計算 y = f(x)其中 x 就是 features另外 y 就是 labels假如我們想要預測天氣，則 x 就是 溫度 濕度 等等，而 y 就是 0 或 1 代表是否會下雨假如我們想要預測股價，則 x 就是 技術指標、財報等等，而 y 就是股價機器學習就是產生這麼一個 function f，可以藉由 x 來推估 y，也就是 y = f(x)下方就是機器學習用來訓練的資料（x, y）的示意圖，其中 x 就是一些技術指標，而y就是買賣訊號 機器學習模型（f）大部分是一個黑盒子，也就是我們不需要知道 f 的公式是什麼（也不太可能顯示出來，因為太複雜了） 而我們就會先給一些 x 跟 y，並且讓演算法去產生 f，這個就是 supervise 機器學習模型的基本概念 假如我們要用機器學習來預測股票，就要先有 x 跟 y，也就是 features 跟 labels假如我們想要預測股價，要怎麼樣來製作 feature 跟 labels 呢？ 製作 Features製作 feature 的資料，可以是一些財報、技術指標、我們課程中也有很多製作這些指標的方式，相信網路上也有很多的介紹，由於不是此篇的重點，所以我就不多說明了XD 製作 Labels製作 label 其實是非常至關重要的，假如 label 太難預測的話，模型會無法有效的訓練，以往最基本的 label 製作方式是使用 fixed time horizon 來預測 w 個時間單位後的漲跌，下圖就是 fixed time horizon 的 Labeling 方式 上圖中在 p(t) 的時候，我們希望預測 p(t+w) 的股價，是比較高還是比較低我們可以使用分類的方式，將股價的漲跌分成三個部分，也就是─1（跌）、0（不漲不跌）、1（漲）這樣子我們就可以讓機器學習來預測，上面圖中，我們可以發現股價比之前的高，所以把它歸類在 1 ，也就是之後會漲 缺點然而這種方式有一個缺點，就是當今天模型叫我們買入的時候，一買就是持有 w 個時間單位，不論股價大漲或大跌都必須繼續持有，不能停損停利，這樣就會導致風險無法控制。當然我們可以在事後回測時加上停損停利，但是這樣就跟模型的初衷有違背，模型產生的label明明就是持有 w 個時間單位，沒有停損停利 為了解決上述問題，[Prado 2018] Advances in Financial Machine Learning提出了以下的新方法 Triple Barrier這個方法的示意圖如下： 乍看之下跟 fixed time horizon 有點類似，不過這個方法將分類的方式做了一些改進，上圖中，用了三種不同顏色的「柵欄」，當股價從 p(t) 開始出發，隨時間不斷延伸一定會碰到三個柵欄中的其中一個，而這三個柵欄分別代表了不同的意義： 1（停利） 0（持有 w 個時間單位） ─1（停損） 如此一來，我們就可以讓機器學習來預測「包含停損停利獲利狀況」，訓練出來的模型就可以跟回測的設定相符，增加機器學習的可預測性！雖然概念很好理解，但要寫成程式碼還是需要一點功力，尤其是執行速度快一點的程式碼，下面就分享如何產生此類的label 程式碼首先我們可以藉由股價爬蟲這篇裡面介紹的程式碼，來獲得股價， 12df = crawl_price(\"2354.TW\")df.Close.plot() 針對以上的程式碼，假如想知道 crawl_price 的實做，可以點入股價爬蟲這篇 接下來就可以來製作 labels 了在我們的機器學習影音課程中，使用的是 fixed time horizon 的方式，先來看看效果如何： 123date = '2017'df.Close[date].plot()(df.Close.shift(-20) / df.Close &gt; 1).astype(int)[date].plot(secondary_y=True) 上圖中藍色的為股價，對應到左邊的y軸，黃色的是訊號，對應到右邊的y軸，也就是機器學習要學的 label，其中 1 代表買入，0 代表賣出，看起來效果有些不OK，因為訊號會在短時間內上下跳動，讓我們不知道到底該買還是賣，所以接下來我們就來試試看剛剛所介紹的 triple barrier 產生出來的 label。 下面這段是非常珍貴的程式碼就連 Advances in Financial Machine Learning 書中附帶的程式碼，都沒有以下的程式碼更簡潔、更完整、更有效率假如你的 pandas 技巧不夠好的話，請直接拿去使用就可以了XD，不用太深究此 function 中的程式碼 12345678910111213141516171819202122232425import numpy as npimport mathdef triple_barrier(price, ub, lb, max_period): def end_price(s): return np.append(s[(s / s[0] &gt; ub) | (s / s[0] &lt; lb)], s[-1])[0]/s[0] r = np.array(range(max_period)) def end_time(s): return np.append(r[(s / s[0] &gt; ub) | (s / s[0] &lt; lb)], max_period-1)[0] p = price.rolling(max_period).apply(end_price, raw=True).shift(-max_period+1) t = price.rolling(max_period).apply(end_time, raw=True).shift(-max_period+1) t = pd.Series([t.index[int(k+i)] if not math.isnan(k+i) else np.datetime64('NaT') for i, k in enumerate(t)], index=t.index).dropna() signal = pd.Series(0, p.index) signal.loc[p &gt; ub] = 1 signal.loc[p &lt; lb] = -1 ret = pd.DataFrame(&#123;'triple_barrier_profit':p, 'triple_barrier_sell_time':t, 'triple_barrier_signal':signal&#125;) return retret = triple_barrier(df.Close, 1.07, 0.97, 20) 這個 function 的使用方法，就是將 時間序列（程式碼中的df.Close） 停利(程式碼中1.07是指7％停利） 停損(程式碼中0.97是指3％停損） 最大持有時間（20天） 分別丟入 triple_barrier 函式當中，就可以計算出以下的 Dataframe 1ret.head() 上圖中有三條序列，其中 index 是日期，另外三條時間序列分別是： triple_barrier_profit 當天買入，直到停損停利後，未來的獲利狀況 triple_barrier_sell_time 當天買入，未來會持有的時間 triple_barrier_signal 當天買入，未來觸發的是停損停利 我們可以將 triple_barrier_signal 訊號跟股價一起畫出來比較一下： 123date = '2017'df.Close[date].plot()ret.triple_barrier_signal[date].plot(secondary_y=True) label 的訊號變得比較乾淨，試試看訓練出更好的模型吧！可以使用 google colab 線上編輯此代碼","raw":null,"content":null,"categories":[{"name":"財經Python教學","slug":"財經Python教學","permalink":"https://www.finlab.tw/categories/財經Python教學/"}],"tags":[{"name":"機器學習","slug":"機器學習","permalink":"https://www.finlab.tw/tags/機器學習/"},{"name":"python","slug":"python","permalink":"https://www.finlab.tw/tags/python/"},{"name":"程式交易","slug":"程式交易","permalink":"https://www.finlab.tw/tags/程式交易/"}]},{"title":"論文導讀：利用CNN神經網路來交易ETF","slug":"cnn-time-series-image-conversion-approach","date":"2019-07-17T09:25:49.000Z","updated":"2020-06-05T07:29:48.785Z","comments":true,"path":"cnn-time-series-image-conversion-approach/","link":"","permalink":"https://www.finlab.tw/cnn-time-series-image-conversion-approach/","excerpt":"","text":"文章導讀：機器學習用來投資一直都是非常熱門的學問，近年來深度學習模型開始受到非常多的矚目，尤其是在電腦視覺方面，所以接下來導讀的這篇文章，就是提供了一個全新的方式，將目前最火紅的 視覺神經網路：Convolutional Neural Network（CNN）用來預測股票的漲跌。實驗解果表示效果比一般的神經網路要好。 你可能會問，以time series來說，明明神經網路可以使用 LSTM，為何要用 CNN？LSTM應該比較適合處理時間序列呀！（畢竟LSTM是拿來處理文字字串的神經網路，字串也是一種時間序列，所以通常預測股價，大家會用LSTM）。但文章中說明，目前CNN用於圖像處理比起其他的模型，被研究的更透徹，也有大量的研發，所以說不定效果更好，所以採用了 CNN 神經網路來預測股價的漲跌 他們用15個技術指標 X 15 天，產生出一個 15x15 的影像，將這個影像丟入 CNN 神經網路中做訓練，下圖就是神經網路所「看到」的input： 想想對於人類來說，這個影像對我們來講沒什麼意義，但是對於電腦來說，就可以拿來判斷股價的漲跌喔！還滿酷的！我只是在想為何是15x15為何不將圖像變的大一點？ 我們會將上面這些圖片稱之為features，也就是電腦用來判斷買賣的資訊，電腦用這些資訊，就可以預測交易訊號，也就是這個神經網路的label。作者提供了一個簡單的方式，使用rolling window，去找每段時間的最大值最小值，以下是大致上的程式碼，有興趣的話可以深入研究，不過我們在這邊就點到為止。 上述的方法，會產生（-1, 0, 1）的訊號，分別代表（賣、不做動作、買），但是由上述程式碼產生出來的訊號，必然會有imbalance的問題，也就是三種class的數量不一致，所以本篇文章使用random resampling的方式，隨機取出相同數量的 label 對應到的 testcase，來避免 0 太多的問題。 此篇 paper 中用了美股的 ETF 和 道瓊 30 檔成分股當訓練的標的。有了 feature 跟 label，很理所當然的，我們就可以開始訓練了！此篇 paper 的神經網路如下： input layer (15x15), two convolutional layers (15x15x32, 15x15x64), max pooling (7x7x64), two dropout (0.25, 0.50), fully connected layers (128), output layer (3) 上面的架構中，input就是單純的 15 x 15 的圖片，output 有3個，分別是買、賣、不做動作。中間的 convolutional layers 跟 pooling作者說由於training dataset不大的關係，所以神經網路不用太大，不然會造成overfitting的狀況。 這篇 paper 使用 walk forward 的方式來測試，好處是可以產生時間較長的回測結果，以下就是他們的回測績效（其中兩檔ETF）： 而他們也有將效果跟其他的神經網路作比較，幾種常用的方法： CNN-TAr 作者使用的方法 BaHr 所謂的 buy and Hold 長期持有 RSIr 利用 RSI技術指標做出來的策略 SMAr 均線策略 LSTMr 神經網路策略pip MLPr 一般神經網路策略 下圖就是商品（每一個row）和不同策略（每一個column）所對應到的年報酬率： 可以發現這種神經網路的效果比其他的更好！在大部分的商品都有比較好的年報酬率喔～ 更多內容都可以參考該論文的連結喔！","raw":null,"content":null,"categories":[{"name":"AI看股票","slug":"AI看股票","permalink":"https://www.finlab.tw/categories/AI看股票/"}],"tags":[{"name":"機器學習","slug":"機器學習","permalink":"https://www.finlab.tw/tags/機器學習/"},{"name":"Machine Learning","slug":"Machine-Learning","permalink":"https://www.finlab.tw/tags/Machine-Learning/"},{"name":"python","slug":"python","permalink":"https://www.finlab.tw/tags/python/"},{"name":"選股","slug":"選股","permalink":"https://www.finlab.tw/tags/選股/"}]},{"title":"Python 低風險高報酬投資組合","slug":"low-risk-fft-spy-strategy","date":"2019-06-13T14:07:22.000Z","updated":"2020-06-05T07:29:50.394Z","comments":true,"path":"low-risk-fft-spy-strategy/","link":"","permalink":"https://www.finlab.tw/low-risk-fft-spy-strategy/","excerpt":"","text":"投資可以很複雜，超多的商品選擇，分批持有買賣點設定等等，但是每天花這麼多心力，真的有比大盤好嗎？其實投資也可以很簡單的，我們可以稍微更智慧一點，投資「大盤」跟「公債」！ 今天就是要來介紹一個簡單的策略，此策略的 sharpe ratio 高達 1.2 非常高，但其實原理並不難，也不需要太多的技巧用一句話就講完了： 將資產分兩半：SPY 跟 20年公債 一半投資「標準普爾500指數ETF」 一半投資「iShares 20年期以上美國公債ETF〈TLT〉」 這種策略的大致上的原理就是「找兩個相關係數為負，且會隨時間增值的商品」這樣的策略效果究竟如何呢？一半一半？這樣的比例真的好嗎？我們可以用上一篇文章 ffn python package，來做回測看看效果如何 大家可以點這裡到程式碼，並且線上打扣！ 安裝 ffn：1!pip install ffn 獲取資料123import ffnprices = ffn.get(&quot;spy,tlt&quot;, )prices.plot() 仔細看這兩個指數確實有呈現一點負相關，特別是 SPY 下跌的時候，TLT會些微的上漲 將資產分一半，投資回測這邊我們只拿「SPY」跟「TLT」，其實有很多的策略組合也會有「石油」、「新興市場」、「黃金」等等大家到時候也可以去自行變化，找出比較好的投資組合 1prices.rebase().mean(axis=1).plot() 雖然比直接投資sp500還要差，但是整體來說看起來更穩定的感覺究竟我們有沒有辦法橫兩，這樣的組合是否是最好的呢？ 不然我們就暴力計算一下，將幾種組合都寫出來： 策略 配置1 配置2 配置3 … 配置10 配置11 SPY 0 0.1 0.2 … 0.9 1.0 TLT 1.0 0.9 0.8 … 0.1 0 那我們把這幾種配置都回測一次試試看： 12345678910111213import numpy as npimport pandas as pdstrategies = &#123;&#125;for i in np.arange(0, 1.1, 0.1): title = &quot;spy: %.1f | tlt: %.1f&quot; % (i, 1-i) strategies[title] = (prices.rebase() * [i, 1-i]).mean(axis=1).rebase()strategies = pd.DataFrame(strategies)strategies.plot() 可以發現TLT比重比較重，則報酬率比較低，SPY比重比較重，則報酬率比較高除了報酬率以外，我們還有哪些指標可以來量化這些策略的績效呢？ 我們可以用 ffn 提供的 calc_stats 來計算：12345678stats = strategies.calc_stats()stats = pd.DataFrame( &#123; name:pd.Series(&#123;key:getattr(pf, key) for key in dir(pf) if isinstance(getattr(pf, key), float)&#125;, name=name) for name,pf in stats.items() &#125;).transpose()stats.head() 這樣我們就有一張策略的績效總表了，這張 dataframe 非常大一張，要怎麼看有哪些分析數據呢？我們可以利用 stats.columns 查看可以比較的策略績效指標：1stats.columns 我們可以利用 .plot 將不同的績效比較給畫出來，例如： 12stats[&apos;daily_sharpe&apos;].plot(rot=10, color=&apos;blue&apos;)stats[&apos;monthly_vol&apos;].plot(rot=10, color=&apos;red&apos;, secondary_y=True) 上圖中有兩線， 藍色的是 sharpe ratio，代表 「報酬」/ 「風險」 的比例 紅色的是「每月報酬」的波動程度， 可以發現，風險報酬比（藍色）最佳位置，剛好就是在 「一半一半」的資產配置上對應到「每月報酬」最穩定的，也剛好就是在「一半一半」的資產配置上 這說明了投資好像不用搞太多花俏的東西，直要簡單粗暴就是最好的！上面的 sharpe ratio 是用簡單的「每天」的 sharpe ratio， 不過假如你是投資長線的話，其實不用太計較每天的 sharpe，應該要看的是每個月，甚至是每年的： 123stats[&apos;yearly_sharpe&apos;].plot()stats[&apos;monthly_sharpe&apos;].plot()stats[&apos;daily_sharpe&apos;].plot() 假如我們不要「每天」跟報酬率計較，而改成是「每個月」或「每年」的時候，由上圖中可以知道，SPY 比例從 0.5~0.7 都是不錯的配置方式不過這 1.3 以上的 sharpe ratio 其實算是滿驚人的（不過沒算上金融海嘯，所以…稍微不準）我平常可能大費周章，搞了半天也弄不出這麼好的資產配置XD 接下來看平均年報酬率：1stats[&apos;yearly_mean&apos;] 還可以！你想想看完全不看盤得到5%以上的獲利，已經非常爽了！老實說這樣的組合還有很多可以玩的地方，例如加入定期權益平衡，也就是每個月去重新調整持股比例，漲多的賣，跌多的買，重新將權重調整回原點。我們下次會來介紹進化版策略的回測，讓這個簡單的策略再進化可以定期追蹤 FinLab 一起來研究投資這件事情吧！","raw":null,"content":null,"categories":[{"name":"財經Python教學","slug":"財經Python教學","permalink":"https://www.finlab.tw/categories/財經Python教學/"}],"tags":[{"name":"簡易策略","slug":"簡易策略","permalink":"https://www.finlab.tw/tags/簡易策略/"},{"name":"python","slug":"python","permalink":"https://www.finlab.tw/tags/python/"},{"name":"程式交易","slug":"程式交易","permalink":"https://www.finlab.tw/tags/程式交易/"}]},{"title":"好用Package：用ffn分析時間序列","slug":"ffn-intro","date":"2019-06-03T04:42:35.000Z","updated":"2020-06-05T07:29:49.507Z","comments":true,"path":"ffn-intro/","link":"","permalink":"https://www.finlab.tw/ffn-intro/","excerpt":"","text":"Pandas 的 DataFrame 可以很方變得幫我們處理時間序列，只需要短短幾行，就能達到在其他程式語言要寫數十行的功能 但是DataFrame就夠了嗎？當我們在處理財務金融時，常常會需要分析時間序列（例如股價），雖然我們可能都知道什麼是maximum dropdown、什麼是sharp ratio，什麼是dailyreturn，但是有時候用dataframe來計算，還是免不了寫一些數學計算，增加程式碼的複雜度，讓閱讀程式碼變得比較辛苦。 救星：ffn (Financial Functions for Python) 所以這時候，你的救星就出現了，叫做ffn，ffn是一個分析時間序列的package，只要一import ffn，你的dataframe就會瞬間多了很多能力！接下來我們就來看看是什麼能力吧！ 這次的程式碼都會在google colab上，大家可以直接打開網頁就開始跟我們一起玩耍吧！ 首先，我們必須要先安裝ffn，安裝的方式非常的直覺：1!pip install ffn這樣就安裝好囉！上式中的驚嘆號代表我們將這段command line語法，輸入在jupyter來安裝，這又就不需要額外再開啟terminal了！ 安裝好了之後我們就可以開始寫程式囉！ 利用ffn取得股價有了ffn我們可以很輕易的取得多檔股票的股價，ffn的底層是使用yahoo api，所以同樣也可以抓台股或其他國際股市喔！1234import ffnprices = ffn.get(&apos;2330.TW, 1101.TW&apos;)prices.head() 可以發現這個股價的格是就是我們熟悉的dataframe耶！所以我們一樣可以使用一些dataframe既有的功能，例如「.plot」來繪圖： 1prices.plot() 繪完圖後發現，雖然我們可以比較「2330」台積電，跟「1101」台泥的股價，但是他們的起始股價是不一樣的，所以無從比較報酬率。 想要比較報酬率，我們可以用「ffn」新增的額外功能「rebase」： ffn提供的functions1prices.rebase().plot() 這樣就可以讓股價的起始值相同囉！這是ffn提供的眾多功能之一，但你不用額外學一個新的資料表示法，而是直接對dataframe操作就可以了！所以說ffn有點像是dataframe的補充包，讓我們來看看還有哪些好用的功能吧！ 下跌幅度我們可以藉由ffn來計算並比較dropdown，也就是比較虧損的幅度： 1prices.to_drawdown_series().plot() 或是我們之前教過的heatmap，也一行就搞定了 1prices.plot_corr_heatmap() 最後我們也可以來計算這兩檔股票的歷史數據分析： 12stats = prices.calc_stats()stats.display() 這個輕量級的package有很多簡單的語法，可以快速幫助我們進行報酬率的分析而且所有的功能都是使用dataframe擴增，所以不用擔心要學新的結構，滿小巧可愛的！大家可以安裝起來玩玩看喔！","raw":null,"content":null,"categories":[{"name":"財經Python教學","slug":"財經Python教學","permalink":"https://www.finlab.tw/categories/財經Python教學/"}],"tags":[{"name":"python","slug":"python","permalink":"https://www.finlab.tw/tags/python/"},{"name":"程式交易","slug":"程式交易","permalink":"https://www.finlab.tw/tags/程式交易/"}]},{"title":"Python新手教學(Part 7)：策略再進化","slug":"Python新手教學：策略優化","date":"2019-02-25T08:04:20.000Z","updated":"2020-06-11T05:03:07.223Z","comments":true,"path":"Python新手教學：策略優化/","link":"","permalink":"https://www.finlab.tw/Python新手教學：策略優化/","excerpt":"","text":"上一篇文章中，帶大家寫了一個簡單的策略，然而，在現實生活中並沒有這麼管用，20年才賺三倍！？ 所以這篇文章將帶介紹如何利用修改參數，來調整策略，進而達到更好的績效但是人工調整參數很浪費時間，所以我們先使用簡單暴力法，來調整參數試試看。 成果如下： 先回顧上次的策略由於這是系列文章，要完成到上次的步驟其實有點煩瑣，所以這邊就簡單的前情提要一下總共有三個步驟： 下載台股大盤資料 編寫台股的sharpe ratio 利用sharpe ratio製作回測 這邊就不厭其煩的先把上次的code拿來，方便大家直接複製貼上 1. 下載台股大盤資料以下這段程式，已經於「全球指數一次抓」講過了，假如想瞭解的話，可以去爬個文，這邊就不贅述了。 12345678910111213141516171819202122import ioimport requestsimport pandas as pdimport datetimeimport matplotlib.pyplot as plt%matplotlib inlineplt.style.use('ggplot')def crawl_price(stock_id): now = int(datetime.datetime.now().timestamp())+86400 url = \"https://query1.finance.yahoo.com/v7/finance/download/\" + stock_id + \"?period1=0&amp;period2=\" + str(now) + \"&amp;interval=1d&amp;events=history&amp;crumb=hP2rOschxO0\" response = requests.post(url) f = io.StringIO(response.text) df = pd.read_csv(f, index_col='Date', parse_dates=['Date'] ) return dftwii = crawl_price(\"^TWII\")twii.head() 2. 編寫台股的sharpe ratio接下來我們就來計算sharpe ratio，這邊同樣於「Python新手教學：風險與報酬」講過了就請有興趣的大家多多複習囉！ 1234567mean = twii['Adj Close'].pct_change().rolling(252).mean()std = twii['Adj Close'].pct_change().rolling(252).std()sharpe = mean / stdtwii.Close.plot()sharpe.plot(secondary_y=True) 3. 編寫台股sharpe ratio策略接下來就是編寫sharpe ratio 的策略了，同樣可以到python新手教學：夏普指數策略這篇文章中，得到更詳細的解釋 1234567891011121314151617181920212223import numpy as np# sharpe ratio 平滑sr = sharpesrsma = sr.rolling(60).mean()# sharpe ratio 的斜率srsmadiff = srsma.diff()# 計算買入賣出點buy = (srsmadiff &gt; 0) &amp; (srsmadiff.shift() &lt; 0)sell = (srsmadiff &lt; 0) &amp; (srsmadiff.shift() &gt; 0)# 計算持有時間hold = pd.Series(np.nan, index=buy.index)hold[buy] = 1hold[sell] = 0hold.ffill(inplace=True)hold.plot()# 持有時候的績效adj = twii['Adj Close'][buy.index](adj.pct_change().shift(-1)+1).fillna(1)[hold == 1].cumprod().plot() 別轉台，終於要開始參數最佳化了我們將上面的程式碼包成一個函示如下 1234567891011121314151617181920212223242526272829def backtest(a, b, c, d): sr = sharpe srsma = sr.rolling(a).mean() srsmadiff = srsma.diff() * 100 ub = srsmadiff.quantile(b) lb = srsmadiff.quantile(c) buy = ((srsmadiff.shift(d) &lt; lb) &amp; (srsmadiff &gt; ub)) sell = ((srsmadiff.shift(d) &gt; ub) &amp; (srsmadiff &lt; lb)) hold = pd.Series(np.nan, index=buy.index) hold[buy] = 1 hold[sell] = 0 hold.ffill(inplace=True) adj = twii['Adj Close'][buy.index] # eq = (adj.pct_change().shift(-1)+1).fillna(1)[hold == 1].cumprod().plot() # hold.plot() eq = (adj.pct_change().shift(-1)+1).fillna(1)[hold == 1].cumprod() if len(eq) &gt; 0: return eq.iloc[-1] else: return 1backtest(252,0.4,0.6,4) 可以發現，這個function傳入了四個參數「a,b,c,d」，而這四個參數是做什麼的呢？是拿來取代原本的數字的，可以發現原本的常數部分，都被換成了代數，這樣我們到時候在呼叫時，就可以帶入不同的參數而我們最後的回傳值，原本是一張圖片，但此function中被改成了這20年的報酬率所以當我們執行「backtest(252,0.4,0.6,4)」的時候，這20年的報酬就是9.1%，非常爛所以我們才需要做參數優化 參數枚舉優化我們使用暴力法，將所有的可能的參數都找一遍： 123456789101112maxeq = 0for a in range(100,200,20): for b in np.arange(0.3, 0.9, 0.03): for c in np.arange(0.3, 0.6, 0.03): for d in range(60, 180, 10): eq = backtest(a,b,c,d) if maxeq &lt; eq: maxeq = eq print(eq, a,b,c,d) 上面第8行，即是我們執行backtest的結果，假如我們發現eq，有最高報酬率，則將新的最高報酬率print出來，並且print它的參數我們就可以看到數字不斷增加的感覺，滿開心的！不過上述程式要跑滿久的，請耐心等待， 最後成果滿不錯的，算是一個懶人投資策略： 有興趣的可以到粉絲團按讚，才不會錯過接下來精彩文章喔！","raw":null,"content":null,"categories":[{"name":"財經Python教學","slug":"財經Python教學","permalink":"https://www.finlab.tw/categories/財經Python教學/"}],"tags":[{"name":"python","slug":"python","permalink":"https://www.finlab.tw/tags/python/"},{"name":"程式交易","slug":"程式交易","permalink":"https://www.finlab.tw/tags/程式交易/"}]},{"title":"python新手教學(Part 6)：避開危險的投資時機 - 夏普指數策略","slug":"python新手教學：夏普指數策略","date":"2019-02-19T12:46:47.000Z","updated":"2020-06-11T05:02:32.246Z","comments":true,"path":"python新手教學：夏普指數策略/","link":"","permalink":"https://www.finlab.tw/python新手教學：夏普指數策略/","excerpt":"上一集我們介紹了Sharpe ratio，可以用來衡量風險跟報酬的指標（也就是報酬 / 風險），這集我們就利用Sharpe ratio來進行台股的模擬買賣，假裝我們這20年來，都使用sharpe ratio的策略，可以得到多少獲利呢？","text":"上一集我們介紹了Sharpe ratio，可以用來衡量風險跟報酬的指標（也就是報酬 / 風險），這集我們就利用Sharpe ratio來進行台股的模擬買賣，假裝我們這20年來，都使用sharpe ratio的策略，可以得到多少獲利呢？ 為何Sharpe ratio幾乎都小於一上次有人問我，夏普指標小於一，代表風險（分母）大於獲利（分子），而為什麼市面上所有的指數，其sharpe ratio都小於一，難道股票都不能賺錢嗎？ 這只是代表，在股市中，我們為了要獲利，往往需要承受很大的風險！但不代表長期投資下來是不能獲利的。我們必須要找到sharpe ratio比較高的策略，才能使風險降低，獲利升高。 利用Python研發一個策略首先，我們得準備台股的歷史紀錄，還有台股的夏普指標，假如之前沒有跟上，可以到上一個單元複習一下喔！： 12adjclose['TSEC weighted index'].plot()sharpe['TSEC weighted index'].plot(secondary_y=True) 可以發現，當sharpe ratio比較低時，台股也都是在比較低點，可以發現，當sharpe ratio比較高時，台股也都是在比較高點，當sharpe ratio 轉折時，通常也是台股會轉折的時候 利用這個觀察，我們就可以來編寫一個策略： 當sharpe ratio往上轉折時，則買入 當sharpe ratio往下轉折時，則賣出 利用Python快速編寫為了找出轉折點，我們必須做一點資料處理： 時間序列的平滑 時間序列的斜率 找出斜率由正到負，或由負到正的訊號 為了使用python寫出上述的策略，我們要先將夏普值平滑一下，不然雜訊太多了： 123456sr = sharpe['TSEC weighted index'].dropna()d = 60srsma = sr.rolling(d).mean()sr.plot()srsma.plot() 來色的線是我們就將sharpe ratio做移動窗格的平均，可以發現平均之後，時間序列比較平滑，這樣子我們找轉折點比較方便，所謂的轉折點，就是斜率由正到負，或由負到正的瞬間，所以我們要先找出夏普曲線的斜率。 夏普曲線的斜率斜率非常簡單，可以使用diff這個功能：1234srsma = sr.rolling(d).mean()srsmadiff = srsma.diff()srsma.plot()srsmadiff.plot(secondary_y=True) 可以發現上圖中，橘色的為sharpe ratio，藍色的為斜率，當橘色線由上而下轉折時，藍色的線會快速向下穿越0，有了這個特性，我們就可以來找轉折點了！ 找轉折點接下來我們可以來找轉折點了，就是斜率由正到負，或由負到正的瞬間。 12345buy = (srsmadiff &gt; 0) &amp; (srsmadiff.shift() &lt; 0)sell = (srsmadiff &lt; 0) &amp; (srsmadiff.shift() &gt; 0)(buy * 1).plot()(sell * -1).plot() 以上就是簡單的訊號產生 找出持有的時段那我們就可以來看一下，假如天都用一樣的方式來產生這些訊號，當 buy訊號為True時，買入，而當sell=True時空手，如此執行20年的持有加權指數的時段： 123456import numpy as nphold = pd.Series(np.nan, index=buy.index)hold[buy] = 1hold[sell] = -1hold.ffill(inplace=True)hold.plot() 交易頻率似乎有點高，不過沒關係，我們之後還會再做調整接來是回測 回測今天我們先簡單算一算，不考慮手續費，但是真實情況是必須考慮的喔！請謹記在心 123456twii = adjclose['TSEC weighted index'][buy.index]pct_change = twii.pct_change()pct_ratio = (pct_change.shift(-1)+1) # 今天到明天的價格變化pct_ratio.fillna(1)[hold == 1].cumprod().plot() 這段程式碼，有點複雜，當中的pct_change是一個每天獲利上下 x％。而pct_ratio代表買入之後每天的變化（不漲不跌是1，大於1則漲，小於1則跌）我們希望將「持有」時間段的pct_ratio全部都乘起來，代表獲利。 可以發現，這個策略效果並不是很好，不過別擔心下個單元，我們使用參數最佳化，從5000種組合中，找出最好的策略！","raw":null,"content":null,"categories":[{"name":"財經Python教學","slug":"財經Python教學","permalink":"https://www.finlab.tw/categories/財經Python教學/"}],"tags":[{"name":"python","slug":"python","permalink":"https://www.finlab.tw/tags/python/"},{"name":"程式交易","slug":"程式交易","permalink":"https://www.finlab.tw/tags/程式交易/"}]},{"title":"Python新手教學(Part 5)報酬越高，風險越大！如何衡量風險與報酬？","slug":"Python新手教學：風險與報酬","date":"2019-02-14T05:09:43.000Z","updated":"2020-06-11T05:04:06.616Z","comments":true,"path":"Python新手教學：風險與報酬/","link":"","permalink":"https://www.finlab.tw/Python新手教學：風險與報酬/","excerpt":"今天我們來看一下市場上常見的風險與報酬指標：夏普比率（sharpe ratio），這是一個風險跟報酬的比例，有了夏普比率，你就知道為什麼要投資美股而不是台股了！","text":"今天我們來看一下市場上常見的風險與報酬指標：夏普比率（sharpe ratio），這是一個風險跟報酬的比例，有了夏普比率，你就知道為什麼要投資美股而不是台股了！ sharp ratio 簡單講，就是「報酬 / 風險」！以這著比率，可以想像，sharp ratio 越高，代表獲利大於風險，而sharp ratio 越低，代表風險大於獲利，那就會有點危險了！所以找一個sharp ratio 越高的指數，就等於找出了「獲利大且風險相對小」的指數喔！ 如何定義獲利？獲利可以用每天平均的漲跌來代表，也就是今天漲1％，明天跌1％，平均獲利就是0％，接下來我們就用python來計算每天平均獲利吧 首先，記得回去前一個單元，找出上次的adjclose： 接下來，我們就可以來計算獲利：123pct_change = adjclose.pct_change()profit = pct_change.mean()profit.sort_values()上方的程式碼，第一行，有好用的功能，叫做adjclose.pct_change()，這個函示會計算今天漲了x％，並且以x/100來表示，將整個table中的每一條時間序列都進行計算喔！第二行，針對每一檔指數，將每一天的漲跌都平均起來，第三行，進行由小到大的排序 以平均獲利來說，看到台股（TSEC weighted index）竟然排在倒數第三位，可以見台灣投資人多麼可憐XDD 如何衡量風險風險通常會用標準差（standard deviation）來計算，標準差，可以想像是股票震盪的程度，例如金融海嘯的時候，股票上上下下的比較劇烈，標準差很大。今天就不折磨各位了，有興趣請參考wiki介紹，我們直接用 python 當中現有的程式碼來計算即可： 1risk = pct_change.std() 計算sharpe ratio這個就更簡單了，直接相除即可12sharpe = profit / risk * (252 ** 0.5)sharpe.sort_values()可以看到上述程式，我們額外乘了一個「252 ** 0.5」因為我們希望算年化 annual sharpe ratio，其中的252是一年大約的交易天數，而「**」是「次方」的意思。為什麼要乘這個常數？最主要是因為大家幫自己的歷史回測計算sharpe ratio時候，都有乘上這個數字，要乘了才有辦法跟別人比較XD，當然這背後可能有更深層的數學邏輯，但我傾向於這樣理解（懶）。 你會發現 台股竟然倒數第三名！可以發現台股真的好慘，慘不忍睹，為什麼會這樣呢，我們可以將歷史圖表畫出來： 可以發現因為我們是從1998年開始計算的，那個時候剛好也上萬點，跟現在的萬點是同一個萬點，反觀我們來看美股： 可以看到從1998年開始，直到現在漲了將近3倍！可見台股的獲利不理想是導致於sharpe ratio比較低的很大的因素。 我們目前計算的sharpe ratio，是所有歷史資料的平均值，然而我們知道，雖然台股總平均來說很爛，但是應該有時也有可圈可點之處，我們希望用時間移動窗格，每日都計算252天以前的sharpe值， 來找出台股表現比較好的時段 移動窗格你以為這個很難嗎？其實超簡單，跟上面幾乎一樣，只要做一點小更改： 12345678910# beforeprofit = pct_change.mean()risk = pct_change.std()sharpe = profit / risk * (252 ** 0.5)# afterprofit = pct_change.rolling(252).mean()risk = pct_change.rolling(252).std()sharpe = profit / risk * (252 ** 0.5) 幾乎長的一模一樣對吧？唯一不一樣的是rolling(252)這個功能，這是移動窗格252天的意思。額外要注意的是，之前的寫法中，sharpe是一個series，index為指數名稱，而在現在的寫法中，sharpe變成了一個dataframe（table），其index代表日期，而columns代表每檔指數，其中的數值是 252 天的 sharpe ratio，神奇吧！ 這就是python跟R最強大的資料處理功能！ 有了這個移動窗格版的sharpe ratio，我們做圖後，就可以來看一些端倪： 做圖看端倪12adjclose['TSEC weighted index'].plot()sharpe['TSEC weighted index'].plot(secondary_y=True) 以上的代碼可以繪出下面這張圖，其中藍色的為加權指數，而黃色的為sharpe ratio，由於這兩個時間序列的數值差非常多，台股可能是在4000～10000左右，而sharpe可能是在-2～2左右，所以上方第二行程式中，我們用secondary_y=True這個參數，來將兩個數值的座標分開，所以下方的圖中，可以看到sharpe ratio的大小標示在右邊。 可以看到，sharpe ratio （黃）在台股加權指數（藍）高點時，會比較大，而台股低點時，會比較低圖中還可以看出，在大盤高點時，sharpe ratio會領先大盤往下落，接下來我們就可以利用這個特點，來模擬一些買賣的實驗。 下次我們就來創造一個夏普策略吧！其實程式碼已經寫好了，但還沒時間寫文章接下來就可以進入下一單元，我們利用sharpe ratio來寫一個策略吧！","raw":null,"content":null,"categories":[{"name":"財經Python教學","slug":"財經Python教學","permalink":"https://www.finlab.tw/categories/財經Python教學/"}],"tags":[{"name":"python","slug":"python","permalink":"https://www.finlab.tw/tags/python/"},{"name":"程式交易","slug":"程式交易","permalink":"https://www.finlab.tw/tags/程式交易/"}]},{"title":"Python新手教學(4)台股的好兄弟是？台股相關性研究","slug":"Python新手教學4相關性分析","date":"2019-02-10T03:10:58.000Z","updated":"2020-06-11T05:05:52.740Z","comments":true,"path":"Python新手教學4相關性分析/","link":"","permalink":"https://www.finlab.tw/Python新手教學4相關性分析/","excerpt":"為什麼美股大跌，在台灣的投資人要很緊張？原因就是相關性！想知道台股跟哪國指數最同步嗎？不是S&amp;P 500美國指數，也不是深圳指數，那究竟是哪國呢？這篇文章我們就來研究一下吧！","text":"為什麼美股大跌，在台灣的投資人要很緊張？原因就是相關性！想知道台股跟哪國指數最同步嗎？不是S&amp;P 500美國指數，也不是深圳指數，那究竟是哪國呢？這篇文章我們就來研究一下吧！ 相關性最白話首先我們先介紹什麼是相關性，相關性最白話，你可以想像，看到天空烏雲密佈，代表可能要下雨了，代表天空的顏色跟下雨機率有相關，你可以由一個現象，去預測另一個現象，這就是相關性！ 相關性稍微數學一點相關性也可以更數值化的方式表示，先用以下例子講解： 這張圖中： 我們可以看上方左側圖，天氣溫度跟買冰棒人數的變化圖，可以想像某人每一天記錄天氣溫度與冰棒人數，每天畫一個黃點，時間久了，就可以看出黃點之間的關係，也就是天氣越熱，越有人會想要買冰棒！ 同理，上方中間那張圖，某人也可以記錄每天生病的人數，此時就發現，天氣越冷，越多人會感冒！ 當然某人覺得有趣，於是又記錄了溫度與擲筊的關係，最後發現：沒什麼關連 好了，某人已將觀測值變成數字記錄起來了，但每次都必須畫這麼多點，才能看出相關性，也太累了吧？能不能用一個數字取代呢？ 這時就可以用 correlation coefficient （相關性係數）有人可能覺得太多點點了，有密集恐懼症，希望可以將上方這三張圖，每張圖用一個數字代表就好，這樣就不需要看到這麼多點點。 所以某人提出了 correlation coefficient ，從上面第一張圖開始從左而又，分別可以用 1、-1、0來代表： 1 代表正相關，也就是X越高Y越高，X越低Y越低（成正比） ─1 代表負相關，也就是X越高Y越低，或X越低Y越高（成反比） 0 代表無相關性 上述只是化簡後的例子事實上相關性係數不是整數，而是會介於─1～1間，代表正負相關的程度！ 讀到這裡，你可能會問， 所以跟投資有什麼關係？投資就是預測未來現象與當下現象的相關性！就像你看到天空烏雲密佈，就能預測接下來會下雨，我們也可以將相關性係數用於全球指數， 為什麼美股大跌，在台灣的投資人要很緊張？原因就是相關性！台股跟美股有正相關。 我們可以用Python將相關性畫出來， 首先我們可以看一下上個單元的一些元素：1print(world_index_history['S&amp;P 500'].head()) 還記得world_index_history嗎？它是一個dictionary，根據不同的字串，例如S&amp;P 500，可以叫出相對應的表格（dataframe） 有了 world_index_history 我們就可以將國際指數的相關性給畫出來，但首先，我們要先來瞭解 Adj Close跟Close的差異？close 就是收盤價，每天股市休盤瞬間的最後數字。那Adj Close呢？我們用圖會比較好解說，先將 S&amp;P500 指數的 Adj Close 跟 Close 畫出來 123sp500 = world_index_history['S&amp;P 500']sp500['Close'].plot(color='red')sp500['Adj Close'].plot(color='blue') 上圖中紅色的為Close而藍色的為Adj Close，兩者幾乎重疊，因為Adj Close其實跟Close很像，但是有點不同，台灣叫做「調整後收盤價」，你有時候也會看到「復權收盤價」。這個價格的好處是，它移除了除權息和增減資的價格波動，更準確的反映了「股票價值」的變化。 簡單的例子當除權息、增減資時，一般股價會有大波動，以除權息為例，股票價格瞬間下跌然而帳戶裡的股票張數會變多（例如領股利）或是帳戶資金量變多（領股息）總體來講是不賺不賠的 所以當除權息時，收盤價 Close 會突然下跌很多，而調整後收盤價 Adj Close 不會因為除權息有巨幅下跌更能夠精確的反映股票價值，跟投資的獲利狀況！所以我們在做相關性分析，可以用 Adj Close！ Python 終於開始了首先我們先將所有指數的 Adj Close 先集合起來，變成一張表格(dataframe) 1234567close = &#123;&#125;for name, price in world_index_history.items(): if len(price) != 0: close[name] = price['close']close = pd.DataFrame(close)close = close.resample('1d').last().dropna(how='all', axis=1).dropna(how='all', axis=0) 接下來就可以來觀察每檔指數的 Adj Close 相關性， 12corr = close.corr()print(corr) 上圖可以看到一個二維的表，就是每個指數跟每個指數之間的相關性，上圖中可以發現，指數自己跟自己的相關性一定是1，代表完全正相關！而這張表會是symmetric matrix，也就是做對角線會是對稱的。 接下來我們可以用更視覺化的方式來表示，假如沒有sns的package，要記得先去安裝pip install sns即可，想瞭解如何安裝，可以到此安裝教學的下半部分，有簡單的教學喔！1234import seaborn as snssns.heatmap(corr, square=True ,vmax=1.0, linecolor='white', annot=True) 假如你發現圖比我的小，字看不清楚，可以改成以下程式碼 123456789# set figure sizeimport matplotlib.pyplot as plt%matplotlib inlineplt.rcParams['figure.figsize'] = (18, 18)# original codeimport seaborn as snssns.heatmap(corr, square=True ,vmax=1.0, linecolor='white', annot=True) 有了以上的code，我們就可以知道 台灣股票跟誰最連動我們可以人眼觀察，發現台灣指數TSEC weighted index跟英國前一百大Cboe UK 100超像！相關係數高達0.9，代表非常非常像 我們可以將這兩個指數畫出來檢查一下： 12adjclose['Cboe UK 100 Price Return']['2015':].plot()adjclose['TSEC weighted index']['2015':].plot() 雖然價格不同，但是趨勢還真的頗像的耶！ 如何用於交易？兩個相關性很高的股票，可以拿來做pair trading配對交易，但也不是只看相關性，這個就容我們之後再慢慢分析吧！這個單元會一直帶你從零開始，慢慢學習，直到機器學習的部分喔！敬請期待～下一個單元中，我們來看一下要怎麼控制報酬與風險","raw":null,"content":null,"categories":[{"name":"財經Python教學","slug":"財經Python教學","permalink":"https://www.finlab.tw/categories/財經Python教學/"}],"tags":[{"name":"python","slug":"python","permalink":"https://www.finlab.tw/tags/python/"},{"name":"程式交易","slug":"程式交易","permalink":"https://www.finlab.tw/tags/程式交易/"},{"name":"爬蟲","slug":"爬蟲","permalink":"https://www.finlab.tw/tags/爬蟲/"}]},{"title":"Python新手教學(Part 3)全球指數歷史數據下載大全","slug":"Python新手教學3全球指數歷史數據","date":"2019-02-06T01:57:32.000Z","updated":"2020-06-11T05:05:22.863Z","comments":true,"path":"Python新手教學3全球指數歷史數據/","link":"","permalink":"https://www.finlab.tw/Python新手教學3全球指數歷史數據/","excerpt":"這個單元我們要利用 for 迴圈將所有的歷史數據爬下來，並且繪製所有的歷史股價。我們也會介紹一些 for 迴圈的進階技巧，並且將這些技巧結合起來，完成這次的功能，想要學習python，就慢慢跟著我們一步一步來吧！","text":"這個單元我們要利用 for 迴圈將所有的歷史數據爬下來，並且繪製所有的歷史股價。我們也會介紹一些 for 迴圈的進階技巧，並且將這些技巧結合起來，完成這次的功能，想要學習python，就慢慢跟著我們一步一步來吧！ 延續上個單元，我們應該已經爬取了\bworld_index這張表格： 然後還有一個我們寫好的function 1234567891011121314import requestsimport pandas as pdimport jsonimport numpy as npdef crawl_price(stock_id): url = \"https://query1.finance.yahoo.com/v8/finance/chart/\"+stock_id+\"?period1=0&amp;period2=1549258857&amp;interval=1d&amp;events=history&amp;=hP2rOschxO0\" res = requests.get(url) data = json.loads(res.text) df = pd.DataFrame(data['chart']['result'][0]['indicators']['quote'][0], index=pd.to_datetime(np.array(data['chart']['result'][0]['timestamp'])*1000*1000*1000)) return df 接下來就可以將他們結合，來爬取歷史資料了！在爬取資料之前，有幾個程式的小技巧必須要學會 1. for 迴圈假如我們要執行重複性的動作，通常第一件事情就是想到for 迴圈，例如我們想要印出1～9，不用for迴圈，我們可以寫成 123456789print(1)print(2)print(3)print(4)print(5)print(6)print(7)print(8)print(9) 但很明顯我們就已經快要中風了，所以改成for迴圈後12for i in [1,2,3,4,5,6,7,8,9]: print(i) 這樣短短的就寫完了！其中第一行：我們有一個變數i，他會從1～9不斷變換，並且執行下方的print(i)。第二行要記得加上前方四個空白，通常叫做縮排「indent」，當第一行有for這個標示後，之後就必須用縮排indent直到寫完for迴圈裡的內容為止。 但有時候我們希望同時做兩個迴圈呢？ 使用zip我們可以使用zip，一次執行兩個list：12for number, letter in zip([1,2,3], ['a', 'b', 'c']): print(number, letter) 最後，我們要使用 dictionary 將全球的指數給存起來。 dictionary這邊先示範最簡單的用法：1234567891011121314d = &#123;&#125;d['a'] = 1d['b'] = 2# 查找print(d['b']) # 2# 迴圈# 其中，d.items 有點像是zip的感覺，# 針對dictionary中的['a', 'b']和[1,2]進行迴圈）for letter, number in d.items(): print(letter, number)# a 1# b 2 結合上述的小功能，就可以寫一個程式將世界指數都抓下來了！我建議你自己試試看～寫完之後再往下拉看範例： 12345678import timeworld_index_history = &#123;&#125;for symbol, name in zip(world_index['Symbol'], world_index['Name']): print(name) world_index_history[name] = crawl_price(symbol) time.sleep(5) 假如你有認真研究前三點功能，相信這些代碼應該難不倒你！其中沒有教到的是，我們利用time.sleep(5)，來休息一下，不要抓的太頻繁，不然會被封鎖，除此之外，上述代碼非常簡單，寫一個for迴圈，將所有的指數都抓下來，存在world_index_history中。 繪製指數接下來，我們可以用一樣的for迴圈，來將指數給畫出來 12for name, history in world_index_history.items(): history.Close.plot() 有了指數，接下來要做什麼呢？下個單元，我們要來分析一下這些指數，看看哪些適合投資，哪些不適合，敬請期待～ 這一系列是我們影音課程的化簡版，","raw":null,"content":null,"categories":[{"name":"財經Python教學","slug":"財經Python教學","permalink":"https://www.finlab.tw/categories/財經Python教學/"}],"tags":[{"name":"python","slug":"python","permalink":"https://www.finlab.tw/tags/python/"},{"name":"程式交易","slug":"程式交易","permalink":"https://www.finlab.tw/tags/程式交易/"},{"name":"爬蟲","slug":"爬蟲","permalink":"https://www.finlab.tw/tags/爬蟲/"}]},{"title":"Python新手教學(Part 2)全球指數一次抓","slug":"Python新手教學2全球指數一次抓","date":"2019-02-05T14:55:54.000Z","updated":"2020-06-11T05:05:04.516Z","comments":true,"path":"Python新手教學2全球指數一次抓/","link":"","permalink":"https://www.finlab.tw/Python新手教學2全球指數一次抓/","excerpt":"我們已經知道怎麼抓取任意一檔股票歷史價格了，但有時候我們一次需要很多檔股票，怎麼辦呢？難道每個股票我們都要寫這麼多行，才能抓下來嗎？今天我們教你如何將上一次的功能包裝成 function，然後一次下載全球指數！","text":"我們已經知道怎麼抓取任意一檔股票歷史價格了，但有時候我們一次需要很多檔股票，怎麼辦呢？難道每個股票我們都要寫這麼多行，才能抓下來嗎？今天我們教你如何將上一次的功能包裝成 function，然後一次下載全球指數！ 上次的程式碼爬取台積電首先，我們上次已經教了怎麼樣爬取一檔股票：「台積電2330」，這次我們重新複習一下，下方的程式，假如有任何一個部分忘記了，都可以去前一個單元複習喔！ 1234567891011import requestsimport pandas as pdimport jsonimport numpy as npurl = \"https://query1.finance.yahoo.com/v8/finance/chart/2330.TW?period1=0&amp;period2=1549258857&amp;interval=1d&amp;events=history&amp;=hP2rOschxO0\"res = requests.get(url)data = json.loads(res.text)df = pd.DataFrame(data['chart']['result'][0]['indicators']['quote'][0], index=pd.to_datetime(np.array(data['chart']['result'][0]['timestamp'])*1000*1000*1000))df.head() 但是以上的程式碼只能爬「台積電」的股價，我想要爬其他的指數怎麼辦呢？ 將上述程式碼打包成function我們可以用function將上面的程式碼打包起來，方便我們多次使用，變成下面這樣，其實跟之前長的非常像，可以先比較一下：首先，第一行多了def crawl_price(stock_id):，這行的意思就是宣告一個可呼叫的程式區塊，叫做crawl_price(stock_id)，再來，原本的程式碼前方都被加了4個空白格，代表這些功能是同一個function中被執行的代碼。 12345678910111213141516import requestsimport pandas as pdimport jsonimport numpy as npimport datetimedef crawl_price(stock_id): d = datetime.datetime.now() url = \"https://query1.finance.yahoo.com/v8/finance/chart/\"+stock_id+\"?period1=0&amp;period2=\"+str(int(d.timestamp()))+\"&amp;interval=1d&amp;events=history&amp;=hP2rOschxO0\" res = requests.get(url) data = json.loads(res.text) df = pd.DataFrame(data['chart']['result'][0]['indicators']['quote'][0], index=pd.to_datetime(np.array(data['chart']['result'][0]['timestamp'])*1000*1000*1000)) return df 上面的代碼中，有個特別可以注意的變數：stock_id，當今天stock_id被傳進function中的時候，url就會隨著stock_id的不同，而出現不同的url所以我們就可以爬到不同的股票歷史股價！ 既然我們已經寫好了此function，接下來就可以呼叫它，得到不同股票的歷史股價 使用function假如以後我們需要爬取不同的股票，例如「鴻海2354」，我們就可以寫：12df = crawl_price(\"2354.TW\")df.close.plot()就可以順利將鴻海的股票爬取下來喔！ 接下來我們就來爬取世界上重要的指數吧！ 國際重要指數清單首先我們必須要爬取到國際重要指數清單，可以到以下網址來獲取：https://finance.yahoo.com/world-indices/ 接下來我們就可以將上述清單給手動複製起來？！不，我們要用更炫的方法，當然是要用程式來爬呀： 1234567url = \"https://finance.yahoo.com/world-indices/\"response = requests.get(url)import iof = io.StringIO(response.text)dfs = pd.read_html(f)world_index = dfs[0] 上述的程式碼，剛開始很簡單，就是用requests.get來獲取此網頁的資料，網頁中的資料都存在response.text中，跟之前一模一樣。 不過第5行有點不一樣，我們使用io.StringIO(response.text)將資料存成檔案f第6行，我們將此文件利用pd.read_html(f)來分析網頁f中的表格，將所有的表格存成 a list of dataframe第7行，我們將第一張dataframe給拿出來。 這樣我們就有了此表格中的symbol和name，以供之後歷史股價的爬取 最後，終於要爬取全球股價了！萬事俱備！只欠東風，不過由於這次的教學已經很多了，所以大家可以自己練習看看，或是前往下一個單元，來爬取所有的歷史指數吧！ 這一系列是我們影音課程的化簡版，假如對此教程有興趣，歡迎點選下方影音課程，會豐富到炸裂喔～","raw":null,"content":null,"categories":[{"name":"財經Python教學","slug":"財經Python教學","permalink":"https://www.finlab.tw/categories/財經Python教學/"}],"tags":[{"name":"python","slug":"python","permalink":"https://www.finlab.tw/tags/python/"},{"name":"程式交易","slug":"程式交易","permalink":"https://www.finlab.tw/tags/程式交易/"},{"name":"爬蟲","slug":"爬蟲","permalink":"https://www.finlab.tw/tags/爬蟲/"}]},{"title":"Python新手教學(Part  0) 用Python投資？你想不到的好處!","slug":"Python新手教學0為何用Python投資","date":"2019-02-05T10:24:05.000Z","updated":"2020-06-11T05:04:43.955Z","comments":true,"path":"Python新手教學0為何用Python投資/","link":"","permalink":"https://www.finlab.tw/Python新手教學0為何用Python投資/","excerpt":"你為什麼要用Python投資？Python投資有什麼好處？處在訊息萬千的時代中，如何不被淘汰？雖然本blog都一直在宣揚python，但是我們似乎漏掉了最重要的一點，「為何要用Python來投資」？那今天就讓我娓娓道來吧！\n","text":"你為什麼要用Python投資？Python投資有什麼好處？處在訊息萬千的時代中，如何不被淘汰？雖然本blog都一直在宣揚python，但是我們似乎漏掉了最重要的一點，「為何要用Python來投資」？那今天就讓我娓娓道來吧！ 其實在2019年 程式化投資並不新奇，已經有各種解決方案，MT4、XQ、Multicharts…現在市面上已經充斥著很多的回測或量化系統了，像是以外匯為主的MT4、以股票為主的XQ、以期貨為主的Multicharts，然而這些系統雖然有其優點，然而我還是不會去使用它們，最主要的原因是 雖然使用上輕鬆簡單，然而大部分是必須要付費的！以台灣最火紅的Multicharts和XQ全球贏家來說，最便宜的券商版，每個月需要額外花費1千元，要是你的總投資金額只有10萬，那每個月相當於損失1％的金額喔！也就是一年下來12％就白白花費了。 MT4 不用錢呀，但程式碼複雜MT4算是裡面非常佛心的軟體，下載歷史數據完全免費，而且還可以回測，但是缺點就是程式碼非常複雜，光是寫一個簡單的策略，就可以耗盡一個下午了。 這些軟體雖然都是寫代碼，但是有一個非常大的缺點，就是 商用軟體自由度不夠假如今天想要搭建機器學習的策略，那使用上述付費軟體其實是非常困難的，因為程式都已經包裝好了，可以用的語法就那些，沒辦法跟上近期華麗展開的AI產業。 另外，這些軟體在不同的商品上，各有所長，例如XQ針對股票、Multicharts針對期貨。但是缺乏一個更上層的資金控管系統，將所有的部位做一個有效的規劃。將多個策略整合，是有難度的。 究竟如何才能「不用花錢」、並享有「最新演算法」、又有最高的「自由度」呢？ Python 與 R 程式語言崛起由於機器學習、資料科學的崛起，Python 與 R 是最大的受惠者！為何我覺得傳統的金融回測軟體幾乎都可以用 Python 與 R 來取代，原因在於： 程式碼簡單、功能強大傳統開源的程式語言，如C++、Java，針對大量金融數據的函示庫比較少，通常得徒手寫，花非常多的時間。然而Python與R就是專門處理各種大量的資料，可以短短幾行代碼，就完成C++需要數百行的資料處理代碼。 於是 Python 與 R 在資料的處理上，雖然可能沒有比Multicharts 或 XQ 那麼簡單一兩行就撰寫策略，不過也相差不遠了（至少我自己的回測軟體已經化簡到到不相上下）。 免費且開源每個月省1000元，累積起來也不少！Python 與 R 除了程式語言是免費的以外，還有非常多機器學習演算法，也都是免費的！想要跑回測嗎？只要上網搜尋「backtest python github」，就可以撈到一堆開源回測項目來搭建！另外Python 與 R 都支援 dll 檔案，所以與券商的串接基本上是沒有問題的。（Mac心碎） 不只拿來交易學了XQ、Multichart、MT4，就是拿來寫賺錢程式，但對於我來說，Python除了拿來投資，還有非常多的功能，不論是架設網站、平常寫一些小工具，或是求職，學會了 Python 或 R 絕對是只有加分不會扣分。 特別是Python已經是連續好幾年都是最熱門程式語言了，為何它不可撼動？因為大部分機器學習研究、產品研發，都會使用Python進行，簡單、快速、有效。R語言也不錯，有很多學術單位、金融研究單位也會使用R語言。不過以趨勢的熱門程度，以及package的豐富程度，我個人還是偏愛使用Python就是了。 新的一年不知道學什麼？就來學Python吧！假如你喜歡做研究，而且覺得寫程式除了賺錢外，對你來說還有別的樂趣，那真的可以好好研究一下Python了！ 這一系列文章將帶你從0開始，使用Python做投資！下一單元，我們就來爬取股價資料吧！ 這一系列是我們影音課程的化簡版，假如對此教程有興趣，歡迎點選下方影音課程，會豐富到炸裂喔～","raw":null,"content":null,"categories":[{"name":"財經Python教學","slug":"財經Python教學","permalink":"https://www.finlab.tw/categories/財經Python教學/"}],"tags":[{"name":"python","slug":"python","permalink":"https://www.finlab.tw/tags/python/"},{"name":"程式交易","slug":"程式交易","permalink":"https://www.finlab.tw/tags/程式交易/"}]},{"title":"Python新手教學(Part 1)用爬蟲爬全球股價!","slug":"用爬蟲爬全世界股價","date":"2019-02-03T05:06:16.000Z","updated":"2020-06-11T17:40:22.441Z","comments":true,"path":"用爬蟲爬全世界股價/","link":"","permalink":"https://www.finlab.tw/用爬蟲爬全世界股價/","excerpt":"此方法可以爬全球股市！今天讓我們回到原點，從最簡單的程式開始教起，想要做股票數據分析，一定要先得到股票資料，所以我們就從股票資料如何獲取開始吧！","text":"此方法可以爬全球股市！今天讓我們回到原點，從最簡單的程式開始教起，想要做股票數據分析，一定要先得到股票資料，所以我們就從股票資料如何獲取開始吧！ 從頭開始學python這篇文章中我們會從初學者開始再從頭帶你瞭解用python如何分析財經資料，並從中獲利！ 是程式新手嗎？不用擔心，只要跟著這一系列的教學，保證你一定學的會！這一系列教學將會是hahow課程中的化簡，但是可以幫助新手無痛的開始使用python！ 設定python環境假如你還沒安裝python，可以先簡單的設定一下環境，我建議使用Anaconda，它一次就會幫你灌好不只是python，還有相關的套件，讓你可以無痛學習！ 相關教學：python環境安裝按照上方文章教學，只要照著步驟，直到可以印出hello world為止，就趕快回來這邊喔！ 不過，最近有一種更簡單的方法使用 Google Colab不用安裝任何軟體可以線上免費使用 Python實在是太方便了！只要打開Colab並且新增一個 notebook並將下方的 Code 複製貼上跑一跑囉！ 爬取歷史股價首先要先獲取股價資料，我們會用常用的package：requests它可以將網路上的資料給下載下來，給程式使用 1import requests 這邊的import就有點像是，我們打開某個套件的感覺，之後才能使用它。 我們想要爬取的網址，以台積電「2330」為例：https://query1.finance.yahoo.com/v8/finance/chart/2330.TW?period1=0&amp;period2=1549258857&amp;interval=1d&amp;events=history&amp;=hP2rOschxO0網址中的period1是指起始時間，而period2是指結束時間，其單位為1970的過了n秒，以上的網址，就可以將台積電在這兩個區間股價資訊給爬下來了！ 但很奇怪的是，你直接用瀏覽器打開，沒有辦法用！因為瀏覽器通常\b\b是用「get」的方法，而此網址必須要用post方法，才能正確的得到資料。 什麼是get和post呢？兩種都是電腦之間溝通的方式，你可以想像一種溝通是寫信、一種是打電話、一種是用line，無論哪一種，只要能夠溝通正確，就可以了！ 如何使用post方法得到資料呢？可以用以下方式： 12site = \"https://query1.finance.yahoo.com/v8/finance/chart/2330.TW?period1=0&amp;period2=1549258857&amp;interval=1d&amp;events=history&amp;=hP2rOschxO0\"response = requests.get(site) 這時，我們就會有一個response，裡面存放著台積電的歷史股價資訊，要怎麼把股價資訊打印出來呢？我們可以使用 1print(response.text) 來察看所有的文字檔 將資料整理好會發現此文字檔非常大…，這種格式叫做 json，我們先把文字檔轉成 python 的 dictionary 跟 list 的結構並且將資料轉成dataframe123456import jsonimport numpy as npimport pandas as pddata = json.loads(response.text)df = pd.DataFrame(data['chart']['result'][0]['indicators']['quote'][0], index=pd.to_datetime(np.array(data['chart']['result'][0]['timestamp'])*1000*1000*1000)) 我們可以印出前面五行： 1df.head() \b這樣我們就簡單的得到了股價了！### 繪圖我們可以將收盤價的歷史紀錄給畫出來：1df.close.plot() 全球股價你可以將任何一檔股價，包含美股港股台股陸股，用同樣的方式爬下來，只要在yahoo finance可以找到，就一定可以下載的下來喔！ 行有餘力，請點選下一單元，我們就來抓全球股市指數吧！ 這一系列是我們影音課程的化簡版，假如對此教程有興趣，歡迎點選下方影音課程，會豐富到炸裂喔～","raw":null,"content":null,"categories":[{"name":"財經Python教學","slug":"財經Python教學","permalink":"https://www.finlab.tw/categories/財經Python教學/"}],"tags":[{"name":"python","slug":"python","permalink":"https://www.finlab.tw/tags/python/"},{"name":"程式交易","slug":"程式交易","permalink":"https://www.finlab.tw/tags/程式交易/"},{"name":"月營收","slug":"月營收","permalink":"https://www.finlab.tw/tags/月營收/"}]},{"title":"論文導讀：利用MI-LSTM預測股價","slug":"利用MI-LSTM預測股價","date":"2019-01-09T07:13:01.000Z","updated":"2020-06-05T07:29:51.386Z","comments":true,"path":"利用MI-LSTM預測股價/","link":"","permalink":"https://www.finlab.tw/利用MI-LSTM預測股價/","excerpt":"這篇文章是2018年剛發表的paper，算是非常新但是滿有趣的方法，針對一般的股票建構一個預測隔日價格的LSTM模型，以下就是他的方法思路。","text":"這篇文章是2018年剛發表的paper，算是非常新但是滿有趣的方法，針對一般的股票建構一個預測隔日價格的LSTM模型，以下就是他的方法思路。 動機股價預測一直都是非常熱門但具有挑戰性的機器學習題目，通常這類的文章不乏是使用各種的資訊，例如股價、技術指標、公司獲利、新聞資訊，並將這些資料餵給一些模型，例如 linear regression, SVM, 或是 NN 來預測未來股價。雖然這些方法被證實是可以使用的，但是預測能力不佳。因為當中有些資訊不但對於預測未來股價沒有幫助，反而會擾亂預測的準確度。 此篇文章的貢獻這篇文章提出了 multi-input LSTM model，來使用額外的神經網路額外架構，從低相關連的資訊找出有價值的，並且濾掉不必要的雜訊。並且利用了額外的LSTM邏輯來建構「mainstream」的結構，並用「mainstream」所計算出來的資訊，來遺忘或記憶有用的資訊（gates）。此架構比原本的LSTM效果要更好。 MI-LSTM這是個特別針對金融股價預測所研發的架構，其原理是先找出想要預測的timeseries，並且找出N條高度正相關的timeseries（以股票而言，就可能是同類型的公司股價），還有N條最負相關的timeseries當作是此預測模型的輸入資料。有了這些資料後，下圖就是MILSTM的整體架構，其中Y\\bold{Y}Y 是欲預測的股票的歷史股價，而 Xpi\\bold{X}_p^iX​p​i​​ 就是第 i 個高度正相關的timeseries，而Xni\\bold{X}_n^iX​n​i​​ 就是高度負相關的 timeseries。最後 Xi\\bold{X}_iX​i​​ 是大盤的 timeseries。 上圖從左到右的解說如下 LSTM：此圖中的最左邊部分，就是簡單的LSTM計算而已，假如想要知道什麼是LSTM，可以參考這篇關於LSTM的詳細解說。 Average：往右，可以看到高度正負相關的timeseries的LSTM，額外經過平均的運算，至於為什麼要這樣做，相信是效果比較好的緣故，當然實做時也可以拿掉、或是使用不一樣的的計算方式。 Multi-Input LSTM：而比較有趣的地方，在於其中紅色的Multi-Input LSTM這個部分，在於它像是一個變種的LSTM架構，多了很多的 gate（請參考LSTM文章來瞭解什麼是「gate」）。此MILSTM可以額外展開如下圖，可以發現跟一般的LSTM長的差不多，但是多了有顏色的三條資訊流，並且此三條資訊流都有額外的gates來篩選要儲存的資訊。 接下來是Attention Layer，其實跟LSTM原本的Attention是非常類似的，還是非常建議現瞭解LSTM是什麼，不然到這邊你應該已經頭很昏了XD。 實驗結果 這篇文章使用了300檔股票的歷史股價進行訓練，單一一檔的股票歷史資料一定不足，但是假如300檔串在一起，則樣本數應該就足夠了，既然都已經發了期刊，當然實驗結果要比別人好，所以以下是實驗的結果，當中的MSE就是誤差（mean square error）的意思： 可以發現MI-LSTM獲得了最小的實驗誤差，相比起其它的model效果更好，而其它的model屬於LSTM的變形，這邊就先不介紹了。可以參考這篇LSTM文章。接下來，他們進一步分析了MI-LSTM中，每一類input的效果，種共有以下四類： Mainstream：欲預測的股票其歷史股價 Positive：高度正相關的一群股票 Negative：高度付相關的一群股票 Index：大盤 下圖就是這四種不同的資訊流在神經網路中，通過softmax的時候的權重隨著訓練次數的變化： 最後可以發現Mainstream跟Index的資訊是最有效的，大盤對於股價的影響是非常大的，與投資時的狀況符合一致，大盤漲跌對於個股的影響很大。另外可以發現Positive跟Negative的權重被降低了，代表雖然這些資訊有很價值，但是當中也有很多的雜訊，所以權重被有效的分配。 選股策略這篇文章提出了一種選股的策略，對於所有股票，都判斷明日的漲跌，並且每日選出漲跌最佳的20檔股票，不考慮手續費，可以得到以下每段時間的歷史報酬： 可以看到MI-LSTM的效果比傳統的LSTM和大盤還要好，當然考慮了手續費後效果可能會打很多折扣，甚至是虧損。要是我的話，會想辦法增加預測時間的長度（但預測難度也可能會增加），從每天變成每個禮拜，這樣手續費可能比較不那麼誇張多。但我猜他們可能也有做過類似的實驗，但沒有成功？或是他們覺得這樣已經很好了？ 實做上建議使用pytorch或是tensorflow會比較簡單，這篇文章只是簡單的介紹其架構，然而要寫程式的話，還是利用paper中的數學公式，會比直接看架構圖更好理解和實做，會比較好喔！","raw":null,"content":null,"categories":[{"name":"AI看股票","slug":"AI看股票","permalink":"https://www.finlab.tw/categories/AI看股票/"}],"tags":[{"name":"機器學習","slug":"機器學習","permalink":"https://www.finlab.tw/tags/機器學習/"},{"name":"Machine Learning","slug":"Machine-Learning","permalink":"https://www.finlab.tw/tags/Machine-Learning/"},{"name":"程式交易","slug":"程式交易","permalink":"https://www.finlab.tw/tags/程式交易/"},{"name":"量化投資","slug":"量化投資","permalink":"https://www.finlab.tw/tags/量化投資/"}]},{"title":"Python：VIX美股大跌投資法","slug":"Python：VIX美股大跌投資法","date":"2018-12-26T03:43:05.000Z","updated":"2020-06-05T07:29:49.861Z","comments":true,"path":"Python：VIX美股大跌投資法/","link":"","permalink":"https://www.finlab.tw/Python：VIX美股大跌投資法/","excerpt":"美股最近跌的慘慘慘，又到了聖誕假期，剛好又休市。我們當然趁現在來研究美股大跌時，要如何來投資，才是最佳的選擇呀！今天要介紹VIX，以及查看VIX如何幫助我們做美股長期投資。\n\n\n線上程式碼直接跑免安裝","text":"美股最近跌的慘慘慘，又到了聖誕假期，剛好又休市。我們當然趁現在來研究美股大跌時，要如何來投資，才是最佳的選擇呀！今天要介紹VIX，以及查看VIX如何幫助我們做美股長期投資。 線上程式碼直接跑免安裝 什麼是VIX首先，究竟是什麼是VIX呢？VIX是一個預估12個月的波動程度，假如市場上的不確定因素越高，代表將來的股價會有非常高的不確定性，則VIX越高，假如市場普遍穩定，則VIX就會比較低。通常VIX大概會在15附近，當大家極度恐慌時（例如恐怖攻擊、金融海嘯等），VIX會急速跳動到30～50，然後再緩和下來。 更嚴謹的數學公式以連結的方式讓大家參考 於是有人就說可以參考VIX非常高的時候，當作是買點進行買入。今天我們就用python來試試看是否有用？ 獲取歷史資料取得歷史資料的方式非常簡單，可以到「芝加哥期交所」官網來下載 S&amp;P500歷史資料還有VIX歷史資料 將下載下來的csv檔放在資料夾中，就可以開始今天的實驗了！ 目錄今天的教學主要分成以下幾個步驟 利用pandas匯入csv檔資料 計算S&amp;P500的年報酬率，並繪圖 回測並檢討 稍微修改買入條件，並比較效果如何 假如第一次接觸python的朋友，可以參考python安裝教學，安裝好之後就可以一起來玩囉！ 接下來我們就來玩玩這些資料吧 1. 利用pandas匯入歷史資料首先，我們可以使用pd.read_csv()這個函示來匯入歷史資料如下： 12345%matplotlib inlineimport pandas as pdvix = pd.read_csv(\"vixcurrent.csv\", header=1, index_col='Date', parse_dates=['Date'])vixc = vix['VIX Close'] 其中，header=1是指從第一行是column 的名稱。index_col是將指定的column轉換成index，最後，parse_dates是將指定的column轉換成datetime的格式。 再來，也是用類似的方法將SPX的指數給拿出來： 12345b = pd.read_excel(\"dailypricehistory.xls\", header=4)['SPXSM']b.index = pd.to_datetime(b.index, errors=\"coerce\")b = b.reindex(vixc.index)b = b.dropna()b.plot() 不過我們使用了一些額外的code，來稍微處理一下大盤指數，其中b.dropna()是將冗餘的資料去掉，另外，使用b.reindex()是因為，我們希望vixc跟b的長度是一樣的，每一天的index是對齊的。 大盤歷史績效分析接下來我們希望可以分析美股SP500的年報酬指數，我們可以這樣寫：1(b.dropna()[-1]/b[0]) ** (250/len(b)) 其實公式就是： r=(priceendpricebegin)(250/ndays)r = (\\frac{price_{end}}{price_{begin}}) ^ {(250 / ndays)}r=(​price​begin​​​​price​end​​​​)​(250/ndays)​​ 其中(priceendpricebegin)(\\frac{price_{end}}{price_{begin}})(​price​begin​​​​price​end​​​​)就是總報酬率，但由於我們要算年報酬，還要進一步修改，ndays 就是所有的歷史報酬天數，其中的250是一年的交易日估算。 從下圖可以看出，大盤的平均年報酬率大概是6％左右。 VIX大於40，買入一年大盤能賺錢嗎？接下來，我們來看當VIX大於40的當天，買入大盤並持有250天，會發生什麼事情呢： 1234567891011# vix 大於 th 時，進行買入th = 40# 持有 days 天days = 250# 當天是否買入buy = (vixc &gt; th)# 確保最近三十天並沒有buy發生，才是需要買入的訊號buy &amp;= (buy.shift().rolling(30).mean() == 0) 最後一行值得一提，因為其實VIX大於40後，有時候會常常飆高，但其實我們是希望VIX突然飆高的第一天，而不是變低後39，然後又飆高到40以上，這種訊號不是我們需要的，所以利用上方的最後一行代碼進行過濾。 繪圖將買點給畫出來：12b.plot()buy.astype(float).plot(secondary_y=True) 報酬率計算接下來我們就來計算，當我們使用這個邏輯進行買賣時，效果如何： 12345678# 當天收盤價price_begin = b[buy]# 隔250天後 的收盤價price_end = b.shift(-days)[buy]# 報酬率計算ret = (price_end/price_begin) 我們可以發現報酬率滿不錯的，唯一一次沒有賺錢，是在2008年金融海嘯那次，我們可以將報酬率畫出來，方便大家理解 持有250天的報酬率接下來我們可以將這四次持有250天的大盤報酬曲線畫出來，橫軸為時間，會得到很有趣的結果：1234567import matplotlib.pyplot as pltdef normalize(s): return s / s[0]for d in ret.index.dropna(): plt.plot(normalize(b.loc[d:].head(250).values)) 這張圖中藍色的為金融海嘯，所以當買入時，還跌了一段，還是賠了40％的資產，非常的恐怖…。可見這種方法還是不能亂用。 另外更有趣的是，紅色跟藍色的大盤趨勢非常像，而綠色跟橘色也很類似，感覺大盤的變化隨時間是有規律的。 優化策略接下來，我想要進行一個小修改，因為VIX是市場恐慌的程度，VIX高代表市場可能過於悲觀，但是不代表悲觀已經結束了，所以2008年的VIX才會噴到將近50左右的位置，所以我們不應該在VIX噴發時投資，應該要等它降溫時，投資會比較好，所以新的策略邏輯如下： VIX 近120天超過40 VIX 當天降到了30 1234567891011121314th = 40days = 250buy = ( ((vixc &gt; th).rolling(120).sum() &gt; 0) &amp; (vixc &lt; 30))buy &amp;= (buy.shift().rolling(30).mean() == 0)price_begin = b[buy]price_end = b.shift(-days)[buy]ret = (price_end/price_begin)#.groupby(price_begin.index.year).first()ret 我們發現，這四次的買點都是有獲利的，且大於平均年報酬率(6％)，說明了這可能是比較好的投資方法。然而取樣的點非常少，才4次，所以也有可能只是運氣好而已，過去不等於未來，投資風險就請大家自行斟酌囉！ 相信大家可以用類似的方式，找到更好的投資方式喔！快來試試看吧～","raw":null,"content":null,"categories":[{"name":"財經Python教學","slug":"財經Python教學","permalink":"https://www.finlab.tw/categories/財經Python教學/"}],"tags":[{"name":"python","slug":"python","permalink":"https://www.finlab.tw/tags/python/"},{"name":"程式交易","slug":"程式交易","permalink":"https://www.finlab.tw/tags/程式交易/"},{"name":"美股","slug":"美股","permalink":"https://www.finlab.tw/tags/美股/"}]},{"title":"你錯過的選股策略！","slug":"你錯過的選股策略思路","date":"2018-12-18T23:45:46.000Z","updated":"2020-06-05T07:29:48.495Z","comments":true,"path":"你錯過的選股策略思路/","link":"","permalink":"https://www.finlab.tw/你錯過的選股策略思路/","excerpt":"一年前，我曾經跟大家分享一個懶人選股策略，不知道各位有沒有看？看了後有沒有實做？實做了有沒有追蹤？追蹤了有沒有實際操作？假如以上答案都是「有」，那你目前應該獲利狀況不錯！假如沒有，這篇文章將帶你分析原因，並且分享「如何不再一次與獲利擦身而過」的方法。","text":"一年前，我曾經跟大家分享一個懶人選股策略，不知道各位有沒有看？看了後有沒有實做？實做了有沒有追蹤？追蹤了有沒有實際操作？假如以上答案都是「有」，那你目前應該獲利狀況不錯！假如沒有，這篇文章將帶你分析原因，並且分享「如何不再一次與獲利擦身而過」的方法。 我們先來看看「錯過」有多麼可怕！ 「錯過不是錯了，而是過了」下圖中，橘紅色的為「加權指數」的歷史股價，而藍色的也是，差別在於藍色的股價剔除了10個一分鐘「最大漲幅」，來模擬一個人在14年中，除了有總共有10分鐘沒投資，其餘時間每天投資大盤，然而那10分鐘漲幅剛好非常大。 你可能會覺得結果應該差不多，但最後的結果，竟然有 50％ 的差距！ 這十分鐘就足以造成50％的差距，更何況一般人沒有紀律的投資了！如此可見，錯過真的是非常可怕的一件事情！ 你錯過的一個策略一年前，我介紹了一個策略，這個策略屬於懶人投資，其歷史績效14年14倍，算是本blog滿早期的選股策略，其特色是，可以避開行情過熱的時段，它的特色是 「假如你知道行情過熱，就休息個一年半載，放個長假」策略思路也滿清晰的，邏輯很簡單，我們現在就來看一下它今年的獲利狀況： 此策略今年大部分時間都沒有持股，反而是後期大跌之後，才開始持股，而且穩定勝過大盤！雖然年漲幅只有9％，但相信已經勝過非常多的人，而且從十一月開始算，其實這個策略才執行了兩個月，每個月有4.5％，算是很不錯！ 然而我相信，真正使用的人應該不多，甚至一隻手數的出來的那種，因為就連我自己也沒有使用這個策略XD，接下來我們就來分析為什麼沒人用 到底為什麼總是跟策略擦身而過？原因有很多層面，就跟切洋蔥一樣，依照每個人的等級不同，可能停留在不同的地方。先從最簡單的講起： 1. 不確定該策略的效果，不敢使用這類的人應該是佔大多數，畢竟當時finlab是個小部落格，而且網路名師多如牛毛。假如沒有自己的驗證方法，早就已經眼花繚亂，看完那篇文章，當下覺得有理，隔天就忘記。 這種應該可以篩掉80％的人了剩下的20％呢？ 2. 策略當時沒有篩選出股票，漸漸忘記剩下的人20%，可能想試試看這個策略如何，可惜的是，當時策略根本沒有持股，所以暫時將策略封存在倉庫，看看之後什麼時候啟動，再開始追蹤，然而過了好幾個月，就又忘記了 然而獲利是不等人的，這時候懊悔已經來不及 這20％的人在此時已經只剩5％ 3. 追蹤了但是不敢使用接下來，就是這5％的人全軍覆沒的時候了XD該策略竟然買在股市大跌的隔天，2018年10月11號當晚…剛好是跌破近一年支撐線的隔天！我也不敢使用XD 以上三種應該是大家最容易錯過策略，究竟要怎麼預防呢？ 如何不要錯過獲利？我覺得要在多重策略上，建構一個更大的框架，在適當的時候更換策略，但不是隨意更換策略，而是當某個條件發生的時候，才會更換，我回測過有效的方式是： 每隔一季或半年，挑選10日績效最強的三個策略，並將所有持股換成這三個策略的持股 用講的當然很容易，不過實行起來一定是有難度的。以上只是我分享自己的看法，不知道你覺得如何？歡迎下方留言分享你的「多策略搭配的方法」喔！","raw":null,"content":null,"categories":[{"name":"選股策略","slug":"選股策略","permalink":"https://www.finlab.tw/categories/選股策略/"}],"tags":[{"name":"如何買股票","slug":"如何買股票","permalink":"https://www.finlab.tw/tags/如何買股票/"},{"name":"選股策略","slug":"選股策略","permalink":"https://www.finlab.tw/tags/選股策略/"},{"name":"歷史回測","slug":"歷史回測","permalink":"https://www.finlab.tw/tags/歷史回測/"},{"name":"本益比","slug":"本益比","permalink":"https://www.finlab.tw/tags/本益比/"},{"name":"股價淨值比","slug":"股價淨值比","permalink":"https://www.finlab.tw/tags/股價淨值比/"}]},{"title":"Python：免費加速度指標選股實做","slug":"加速度指標實做","date":"2018-12-17T05:49:03.000Z","updated":"2020-06-05T07:29:51.371Z","comments":true,"path":"加速度指標實做/","link":"","permalink":"https://www.finlab.tw/加速度指標實做/","excerpt":"","text":"今天終於要來介紹加速度指標，這個指標的用處，在於可以篩選出「止跌回升」或「加速往上漲」的股票，經過回測驗證是有效的。搭配其他指標，可以獲得約20％的年報酬率。接下來我們就來用 python 實做它吧！ 這個 blog 會永久推出免費的教學，讓大家可以免費的學習 python 又賺錢，學習程式語言是很多人憧憬的目標，但是常常會有學了不知道拿來做什麼？要是寫程式不只能在工作上增加效率，還能幫你挑股票賺錢，那還有什麼理由不學習呢？ 我喜歡寫程式，也希望可以做出很好的工具，幫助到大家，帶著這個初衷，我創立了finlab 並且持續到了現在（不過中間因為博士班論文所以暫停了一段時間）。與其販賣選股軟體，我們分享代碼，讓大家自己零成本 DIY，假如想要支持我們，可以考慮我們的影音課程，獲得完整的 python 選股知識跟大量實用代碼。 好了廢話不多說，開始今天的 python 程式碼吧！ 製作時間序列首先我們必須先做出時間序列，時間序列其實就是一條條股價隨時間的變化圖，有點像是K線圖，我們習慣將這些資料整理成以下的樣貌： 要如何獲得此資料結構呢？ 假如您沒有購買課程的話，可以參考這篇文章來免費獲得時間序列資料，調整當中的參數，獲得至少200天的收盤價喔！ 假如您已經有課程中的代碼，就變得很簡單，只需要： 1234from finlab.data import Datadata = Data()close = data.get('收盤價', 200) 就可以獲得兩百天內的所有上市股價資料。 在這個階段完成後，我們會有一個 close 的 variable，裡面的資料結構就如上圖一樣，是一個 dataframe 而其中就是一條條時間序列，每一檔股票的收盤價。 撰寫加速度指標加速度指標的原理，可以參考 加速度指標解說 加速度指標回測 簡單來說，加速度指標，其實就是看均線的曲率是正負，來決定是否買賣，但是由於股價的雜訊太大了，與其用微分的，我們提供一個比較簡單的方式，來判斷曲率的正負： (n天前 + 當天)/2 &gt; n/2天前 的k天均線 我們把以上這個判斷式寫成代碼： 12345close60 = close.rolling(60, min_periods=10).mean()def rising_curve(n): return (close60.iloc[-n] + close60.iloc[-1]) / 2 &gt; close60.iloc[-int((n+1)/2)] 以上的代碼中，第一行，我們創建了close60這個variable，裡面的資料就是每檔股票60天的均線的數值。 接下來，在第三行中，我們定義了一個function叫做rising_curve，來判斷條件是否符合，第四行，就是最重要的判斷式： 其中我們只用到了iloc(k)這個method，這個method是將close60中第k條row給拿出來的意思。而k可以是正的，代表從dataframe的第0條row開始數，也可以是負的，代表從 dataframe的最後一條row倒著數。 試用看看接下來我們就可以呼叫這個rising_curve，來看哪些股票符合這個條件：1rising_curve(10)以上這行就是判斷10日內的取率是多少，會得出以下的結果： 代表哪些檔股票符合條件，而哪些不符合條件。 組裝策略接下來就到了多個策略組合的時候了，前一篇文章有說過，必須要用多次的rising_curve來判斷不同週期下，是否都是符合條件！ 123456789101112rising = ( rising_curve(5) &amp; rising_curve(10) &amp; rising_curve(20) &amp; rising_curve(60) &amp; rising_curve(30) &amp; rising_curve(40) &amp; rising_curve(50) &amp; (close.iloc[-1] &gt; close60.iloc[-1]))print(rising[rising]) 以上，第2～9行，我們將所有的條件做交集（&amp;），代表必須要全部的條件都符合，才能被選入清單，我們以非常嚴苛的方式，來判斷股價的曲率。最後一行，我們使用rising[rising]，這個意思是，從rising這條序列中，選取rising為 True的股票，忽略False的股票。 最後得出了一串清單，代表符合所有條件的股票代號： 選股個股概覽我們將選出來的股票畫出來，來瞭解這些股票的特性，下圖中，黃色的為股價，而藍色的為均線，我們可以發現這些股票的特性，就是均線會呈現圓弧型： 可以看到大部分都是抓出止跌回漲的股票居多，加速度指標可以抓出兩種股票： 止跌 起漲至於要更細部的設定，就留給各位看官來實做了。 假如將以上代碼的不等式反過來用，也可以抓出股票的賣點，進而抓出止漲的股票，我發現加速度指標拿來抓賣點，搭配一些技術指標效果非常好，可以試試看！ 今天的重點整理 加速度指標實做 利用「iloc」選取特定的row 利用「&amp;」來做條件交集，篩選股票","raw":null,"content":null,"categories":[{"name":"財經Python教學","slug":"財經Python教學","permalink":"https://www.finlab.tw/categories/財經Python教學/"}],"tags":[{"name":"簡易策略","slug":"簡易策略","permalink":"https://www.finlab.tw/tags/簡易策略/"},{"name":"選股策略","slug":"選股策略","permalink":"https://www.finlab.tw/tags/選股策略/"},{"name":"歷史回測","slug":"歷史回測","permalink":"https://www.finlab.tw/tags/歷史回測/"},{"name":"程式交易","slug":"程式交易","permalink":"https://www.finlab.tw/tags/程式交易/"}]},{"title":"ROE怎麼看?機器學習告訴你","slug":"ROE怎麼看-機器學習告訴你","date":"2018-12-11T08:49:55.000Z","updated":"2020-06-05T07:29:47.858Z","comments":true,"path":"ROE怎麼看-機器學習告訴你/","link":"","permalink":"https://www.finlab.tw/ROE怎麼看-機器學習告訴你/","excerpt":"機器學習究竟能不能輔助人類買賣股票？答案一定是可以的，我們可以藉由機器學習歸納出結果，來優化我們的選股方式，今天這篇文章沒有非常高深的數學，也沒有困難的程式，只會有做完研究的心得，幫助大家選股更順利！","text":"機器學習究竟能不能輔助人類買賣股票？答案一定是可以的，我們可以藉由機器學習歸納出結果，來優化我們的選股方式，今天這篇文章沒有非常高深的數學，也沒有困難的程式，只會有做完研究的心得，幫助大家選股更順利！ 這篇文章中，我把市值跟ROE拿來做比較，並且利用SVM來訓練判斷，看看市值跟ROE對於股價漲跌的關連 什麼是SVM？SVM的全名叫做 Support Vector Machine，而這類的機器學習，會用 hyperplane 將空間切開，進而將空間中的座標進行分類，所以當我們有2個features時，就可以將第一個feature當作 x 軸，第二個 feature 當作 y 軸，然後顏色代表漲跌，畫出一張圖： 其中的綠色點，就是代表下跌的股票，而紅色的點，則代表了上漲的股票，而hyperplane 就是黃色的時線，將這個平面上畫出精準的一刀，切成兩個部分，右半部份，代表SVM覺得未來會上漲，左半部份代表SVM覺得未來會下跌的股票。 以上是由視覺的方式來說明SVM，數學的部分，其實大家國中高中都有學過，其實就是點與 hyperplane 的長度，SVM會計算「點到線」之間的長度，來決定誤差。當有越多點歸類錯誤的時候，SVM就會將這些「點到線的距離加總」，當作是錯誤總分，越大越不好，於是演算法不斷的移動這個切割線（hyperplane），來達到最完美的狀態，使得錯誤總分最低。 SVM 的 Kernel Trick我們上述的都是一條直線的 hyperplane ，但其實它不一定得是直的，只要能夠切分出不同的區域來分類即可。下圖就是使用linear的kernel跟曲線的kernel的範例： 接下來，我們就來使用不同的kernel，來將股票做歸類，看它們究竟會上漲還是下跌？我們所使用的 features 只有：ROE、市值方便我們以圖形化的方式呈現並理解，以下是結果 使用線性的kernel此時 hyperplane 就是很簡單的一條線。雖然是簡單的一條線，但它還是非常有用處，我們可以藉由這條線的斜率，來瞭解 ROE 跟市值的關係\b\b： 程式自動最佳化後，上圖就是程式找到一刀最完美的切法， 黃色三角形為上漲的股票 藍色正方形為下跌的股票 黃色平面是SVM認為會上漲的股票 藍色平面是SVM認為會下跌的股票 這邊的市值跟ROE都已經經過preprocessing，所以跟我們平常看到的數值不太一樣，我們由上圖可以看出程式在想什麼： 機器學習：市值越高的股票，ROE也要越高可以看到上圖中，斜率是正的，代表當市值越高時，SVM 會傾向於選擇 ROE 高一點的股票，而且此條線偏上方，代表ROE比較高比較好，所以我們可以做一些歸納； 假如有一檔股票「市值高，但是ROE低」，不會被選進來這樣的想法算滿合理的，因為大家對市值高的股票期望比較高，或是公司的規模比較大，但此公司坐擁資源竟然還沒辦法為股東賺錢，於是期望可能轉換為失望，所以SVM表示看跌。 當然這個理由是我自己加的，SVM 是無情的最佳化結果而已。另外我們也可以看到： 對於「市值低，ROE低」的公司，SVM會比較寬容一檔「市值低，ROE低」的公司，SVM會比較寬容一些些（但還是有一定的門檻）只是不如市值高的公司那麼嚴苛罷了。 我們來看一下以此種邏輯回測的結果，紅色為預測會漲的股票，綠色為預測會跌的股票，每季獲利的平均 效果很不錯但是這個邏輯是否是完美的呢？我們再來使用不同的kernel，試試看 使用曲線的kernel下圖為使用不同的kernel，所做出來的分類結果，我們使用2次多項式來對股票進行分類 怎麼分出來完全不一樣呀！我們來看第二個實驗，SVM又告訴了我們什麼： 市值高的股票 ROE 不要太高這其實還是有些道理的，ROE 太高的股票不要買，這個是很多實驗都有做出來的結果，因為大\b公司的獲利，好歹也是龐大而穩定的系統，ROE高是會有上限的，不可能一直成長，當今天ROE已經很高時，代表接下來不會更高了，甚至還有可能會衰退。 所以買市值高的股票時，SVM傾向「ROE 不要太高」 市值低的股票 ROE 越高越好然而本實驗的另一個特點，就是SVM統計出來，發現市值低的股票ROE高是沒有關係的，至於原因可能是因為，市值低的股票，大家對於該公司期望並不高，在此狀況下，高 ROE 的數值跌破大家的眼鏡，所以造成長期的後市看好。（只是推測） 所以買市值低的股票時，SVM傾向「ROE 盡量高一點」 市值中間的股票，不要買這個條件是最詭異的一個，我還是不要亂解釋好了XDD。 回測結果這樣的邏輯可以獲利嗎？我們可以看以下的結果，紅色為持有預測會漲的股票，綠色為持有預測會跌的股票，每季獲利的平均： 也是有不錯的獲利！利用 SVM 來分辨漲跌的股票，真的還滿有趣的，本文利用了兩種不同的 kernel： linear polynomial來進行分類，結果顯示 linear 的分類，跑出來的回測獲利比較優秀，但由這兩種不同的kernel，製作出來的模型，都可以拿來獲利。 雖然兩個模型的闡述「相互矛盾」「有點道理、但又有點詭異」就像是投資界眾說紛紜的理論一樣，所以以後看到相互矛盾的論點，其實不一定誰好誰壞，甚至說不定都能夠獲利，這就是股票市場的有趣之處。","raw":null,"content":null,"categories":[{"name":"AI看股票","slug":"AI看股票","permalink":"https://www.finlab.tw/categories/AI看股票/"}],"tags":[{"name":"機器學習","slug":"機器學習","permalink":"https://www.finlab.tw/tags/機器學習/"},{"name":"Machine Learning","slug":"Machine-Learning","permalink":"https://www.finlab.tw/tags/Machine-Learning/"},{"name":"程式交易","slug":"程式交易","permalink":"https://www.finlab.tw/tags/程式交易/"}]},{"title":"用Machine learning 學習看技術指標","slug":"Machine-learning：使用技術指標預測大盤","date":"2018-12-04T15:58:25.000Z","updated":"2020-06-05T07:29:47.440Z","comments":true,"path":"Machine-learning：使用技術指標預測大盤/","link":"","permalink":"https://www.finlab.tw/Machine-learning：使用技術指標預測大盤/","excerpt":"","text":"這篇文章是印度指數預測，2015年發表的就能有191個citation，算是很有名的paper之一，全文特點是只使用了技術指標，來預測大盤每天漲跌，提出了一個有效的優化方式。 這篇paper的作者非常的認真，總共訓練四種不同的模型：Artificial Neural Network (ANN), support vector machine (SVM), random forest (RF) 和 Naive-Bayes (NB)。 這邊假如看不懂沒有關係，可以想像「模型」就是「電腦的大腦」，負責學習每種指標怎麼對應到未來的漲跌。之後有空再來慢慢介紹這些不同的「大腦」背後的數學原理。 此論文主要建構製作兩組traning data： 包含十種技術指標 為這十種技術指標的看漲看跌前者為 float （被normalize成-1～1）而後者為 boolean （也就是只有輸入True和False）。 究竟這些排列組合會迸出什麼樣的火花呢？ 選擇模型研究發現Random Forest的表現是最好的，而ANN差了一點，這是滿正常的，畢竟data set還是太小，神經網路很難訓練的非常好。至於傳統的NB則是最差的。 其實也可以考慮一下LSTM，說不定效果也不錯？（但因為LSTM還是基於ANN，所以有可能遇到traning set太小的問題） 選擇traning data如同上面所述，此篇論文總共先用了十種技術指標，以下是這十種常見的指標，為了讓文章不會太冗長，我就不一一解釋了，之後有空再來介紹每種指標的用法。 ￼這篇paper會將這些技術指標的數值，每一項做normalize在-1～1之間，這樣的優化主要是為了ANN和SVM。以下是這個model的架構： ￼另外，全文的特點是使用了提出了 「Trend Deterministic Data Preparation」，看起來非常的厲害，簡單講就是將這些指標的數值究竟是「看漲」還是「看跌」拿來訓練，而不是訓練指標本身的數值。 例如均線好了，與其拿均線的值來訓練，不如看「股價跟均線的關係」，假如股價在均線之上，就是「看漲」（True），反之則「看跌」（False）。其他指標都能以此類推！ 以下就是新增了一層資料的修改的架構： ￼ 最後發現使用了「Trend Deterministic Data Preparation」效果好很多！ 結論這篇文章中，可以大概知道每一種model對於技術性指標的數據的效果如何。並且了解了用「Trend Deterministic Data Preparation」來進行優化。經過了非常多參數的比對，發現使用RF model做出來的策略效果最好。然而這只限於頻率為「天」的股價，假如頻率不是「天」，則可能會不一樣～。","raw":null,"content":null,"categories":[{"name":"AI看股票","slug":"AI看股票","permalink":"https://www.finlab.tw/categories/AI看股票/"}],"tags":[{"name":"機器學習","slug":"機器學習","permalink":"https://www.finlab.tw/tags/機器學習/"},{"name":"Machine Learning","slug":"Machine-Learning","permalink":"https://www.finlab.tw/tags/Machine-Learning/"},{"name":"程式交易","slug":"程式交易","permalink":"https://www.finlab.tw/tags/程式交易/"}]},{"title":"機器學習-總體經濟","slug":"機器學習-總體經濟","date":"2018-11-27T08:53:00.000Z","updated":"2020-06-05T07:29:48.377Z","comments":true,"path":"機器學習-總體經濟/","link":"","permalink":"https://www.finlab.tw/機器學習-總體經濟/","excerpt":"","text":"今天這篇paper是介紹總體經濟，現在全球的經濟是連動的，例如中美貿易大戰影響到全球股價，金價油價對於美國股市也有很大的影響，今天這篇paper就是要來研究不同的指數，對於NASDAQ指數的影響。 這篇文章利用美股開盤前的所有重要指數，例如油價、貴金屬價格、以及全球股市的對於美股的影響，既然全球市場是連動的，那這其中必定有一些關聯，下圖就是這篇paper所使用的重要指數： 建構features這篇文章想要找出股價的趨勢，而不是絕對數值，所以其features除了股價外，也有一段時間股價的變化，這邊先叫做window size w，並且對於價格的變化進行normalize。 分析features我覺得本文值得讚許的地方在於有提供一些簡單的方法做features的分析，可以由這些方法知道哪些features對於預測是非常有幫助的！ 論文中使用了cross correlation來分析各種不同商品的價格對於NASDAQ影響。要說明cross correlation，就要先從correlation說起，correlation是兩種不同的數據，其相關性的係數。correlation介於-1到1之間，分別代表這兩種時間序列之間的關聯性： correlation = -1：代表數據完全負相關，也就是A漲B就跌的概念 correlation = 0：代表數據之間沒什麼關聯，也就是A漲跌跟B漲跌完全沒關係 correlation = +1：代表數據之間是正相關，也就是AB同漲同跌的關係 那「cross」又是什麼意思呢？就是將兩組時間序列的時間錯開，差N天，並且觀察其correlation。 下圖就是所有的商品對於NASDAQ的cross correlation 分析，X軸就是差N天的N，而Y軸就是correlation，可以看到，在X = 0 時，NASDAQ跟NASDAQ的相關性是1，代表NASDAQ與自己的指數完全正相關，而很多商品都會在N = 0時有正相關性！ 所以我們使用N = 0來預測NASDAQ的股價會是最好的，但是N = 0的資料是沒有辦法使用的，因為你不能在當天的開盤就知道NASDAQ的收盤價，這樣就代表用到未來數據了。 所以我們只能退而求其次，用 N &lt; 0 的資料，也就是前N天的資料，我們可以發現N = -1的地方有一點小突起，代表某些資料對於NASDAQ的correlation也是很高的，可以拿來利用！ 唯一想吐槽的是這張圖很多顏色都重複，所以根本看不太清楚是哪些商品，拿來預測NASDAQ比較準。 三個維度的 cross-correlation另外，這篇paper也提供了不同股價區間差w對於漲跌的correlation： 可以發現商品價格與NASDAQ股價之間是有一定的關係的，假如商品之間彼此沒有關聯，這張圖就不會呈現三角形的山丘狀，而是會看起來像是隨機的樣子。 上面這張圖說明了一件事情，股價變化越長時間來觀察(w 越長)，NASDQL跟許多商品的前一天的correlation是越高的，可以藉由提高精準度！ 藉由上述的兩個實驗，我們知道股價變化量的重要性，重點不是股價本身，而是股價的漲跌幅度才有辦法更好的預測股價～ 除此之外，作者想要進一步知道哪些時間序列對於NASDQL是重要的，所以進行了一個簡單的預測實驗 預測明天的價格作者也利用每一個單一序列當作單一feature，來預測隔天的漲跌，發現利用DAX這個時間序列來預估NASDQL會得到最好的結果： 作者並沒有說這邊的model是哪一種，我猜應該是SVM，因為feature_size很小。這樣我們就可以找到比較重要跟不重要的時間序列，之所以要這樣是因為此篇paper有用SVM當作model，而SVM比較適用於小feature_size的traning set。 預測N天後的價格除了每天的價格外，此paper也研究K天後的價格漲跌，發現K越大，則預測的能力越好，下圖中 K 為 x 軸 測試 w 的大小接下來，此paper也測試了不同的 w 對於訓練的成效： f1 score 的影響，f1 score是precision跟recall的綜合分數，其中： precision 是所有 model 顯示為 true，而真正為 true 的比例 recall 是所有真正為 true 的資料，被 model 標示為 true 的比例 f1 score 就是 precision 和 recall 的 harmonic mean。harmonic mean同時也被用在電阻的並聯計算上，你可以想像電阻並聯時，假如任何一個電阻太小，電流就會傾向從那裡通過，造成等效電阻很小。同理，你可以想像有一顆電阻叫做precision，另一顆叫做recall，任何一方太小，都會導致f1 score 變得很小。於是 f1 score 就是同時可以兼具 recall 和 accuracy 的一個優化指標。 上圖中的兩條線分別是 positive 和 negative 的 f1 score。當 w 在 0 或是 50 時，f1 score 相對來說比較好。 以上就是分析 w、K、等參數怎麼設定比較好的一些分析，當我們得到這些參數，並且建構出預測漲跌的model後，就可以將model產生的結果拿來回測 回測績效這邊總共用了三種方法來回測： 假如預測會漲，就持續於整段回測週期持有股票 當預測會漲機率上升時，持有股票，不然則賣出 當預測會漲時，持有，反之則賣出 以下是回測的結果： 可以發現利用第三種方式，回測的績效比較好，這邊跟我自己做出來的結論是差不多的。 總結今天學到的一些知識： 用cross-correlation來分析features 利用SVM來測驗單個features是否有辦法預測漲跌，進而分析feature的好壞 使用移動窗格來找出最佳的f1_score 這篇paper利用ML的方式，找出世界上重要的商品價格之間的關聯，並且也有使用SVM或是MART來預測NASDAQ指數的漲跌，個人覺得滿有趣的。經總就應該這樣作研究！ 美中不足的是應該可以歸納出一些現象，輔助一般不會程式的投資人，這樣會更好！ 論文網址","raw":null,"content":null,"categories":[{"name":"AI看股票","slug":"AI看股票","permalink":"https://www.finlab.tw/categories/AI看股票/"}],"tags":[{"name":"機器學習","slug":"機器學習","permalink":"https://www.finlab.tw/tags/機器學習/"},{"name":"Machine Learning","slug":"Machine-Learning","permalink":"https://www.finlab.tw/tags/Machine-Learning/"},{"name":"程式交易","slug":"程式交易","permalink":"https://www.finlab.tw/tags/程式交易/"},{"name":"量化投資","slug":"量化投資","permalink":"https://www.finlab.tw/tags/量化投資/"}]},{"title":"論文導讀：機器學習與基因演算法選股","slug":"機器學習與基因演算法選股","date":"2018-11-27T06:41:15.000Z","updated":"2020-06-05T07:29:51.894Z","comments":true,"path":"機器學習與基因演算法選股/","link":"","permalink":"https://www.finlab.tw/機器學習與基因演算法選股/","excerpt":"","text":"feature selection 是機器學習中非常重要的一環，尤其是財經領域的程式交易部分，因為財經領域有各式各樣的指標，又有財報、技術指標，這些指標高達尚千種，要如何選擇features，才能更有效預測股價？ 今天介紹一篇論文，使用了基因演算法來幫忙選擇features，以下是更進一步的介紹： 對於machine learning的程式交易演算法來說，首先要有features，features可以想像成是指標，每一支股票都會有其features。另外還有labels，也就是我們希望能夠預測的數值，例如股價漲跌的幅度，或是sharp ratio。 只要有了features跟labels，剩下的就簡單了，只要把這些features跟labels都輸入到一個黑盒子裡面，讓它學習，學成之後，只需要每次給它新的features，它就會預判label是多少。這個黑盒子通常稱為model，model有很多種類，最常見的就是deep neural network或是 random forest ，這些我們待會會簡單的介紹。 本篇論文在選擇features的階段，使用了基因演算法，由於財報、技術指標的數字有上千種，該如何選擇呢？第一步驟就是就全部都選擇吧！反正基因演算法會找出有用的features並且刪除無用的，至於基因演算法是如何做到的？它是模仿達爾文物競天擇的方式來找出有用的features： 第一步：決定染色體以數學的方式描述，染色體是一條一維向量，其長度為所有features的長度，其數值為0或1，0代表不選入該feature，1代表選入該feature。 一開始會隨機製作出100條染色體，想必效果就是很隨機的，不是很好。然而生物是會進化的，適者生存、不適者淘汰，要怎麼定義要淘汰的染色體呢？ 第二步：決定染色體的成績每一種染色體都代表一組features的選擇，單一染色體拿出來，用染色體所選入的features進行機器學習，最後評估機器學習的成果。在論文中，是使用AUC來當作每個染色體的成績。 當然這時就可以進行適者生存、不適者淘汰的步驟，選出100個成績比較好的染色體，成績越好的染色體越有機會被選出來，但是也有可能成績很好但懷才不遇被篩選掉，這邊此文並沒有很明確的說明機制是什麼，實作上也有很多種方法，最簡單就是直接選成績最好的100個染色體。 這個目的在於，基因演算法的最後，我們希望選出一條染色體，其AUC算出來是最高的，代表它能夠很有效的分別出會漲的股票跟會跌的股票。 第三步：交叉遺傳我們會由現有的染色體，藉由排列組合，產生更多的染色體，具體的做法是：產生新的20條染色體，每條染色體皆由某兩條現有染色體的片段所組成，例如染色體的上半部和下半部是由不同染色體所提供的。 第四步：變異這個步驟中，這120條染色體會稍微的被隨機修改，每條染色體有10％的機率，其當中的一個bit會被反轉（由0變成1，或是1變成0） 上圖是一個三個bit變異的例子，有很多種的變異方式，本文中一次只更動一個bit而已。 回到第二步，開始生物演化的循環每經過一次2、3、4步驟，就像是完成了一個世代，隨著是帶的變遷，平均來說，AUC的成績應該會越來越好，直到AUC的成績不再進步，就可以停止演化的過程。而其成果就是步驟二中，選出擁有最高的AUC的染色體，代表這些被選到的features組合在一起，預測能力是最強的！ 機器學習我們剛剛有說的，機器學習的model就像是黑盒子一樣，文中主要使用兩種model：deep neural network和random forest，都是非常常見的model，兩種model都有其優缺點，不一定哪個比較好。所以本文也提出了stacking的方式，將這兩種黑盒子的結果取平均，得出最後的答案，結果發現比單獨使用這兩種model更好。 總結我個人是滿好奇features沒有經過normalize就跑DNN不會有問題嗎？滿奇怪的，感覺DNN應該要額外再preprocessing一下，但是文中並沒有提到，就當作作者忘記說明好了。 我以前的做法是自己憑經驗找有效的features並且放進去測試，這篇文章使用了基因演算法來幫助大家篩選features，進行程式交易，大量的降低了人工feature engineering的時間，當然電腦也是要算很久，雖然我沒試過，但以普通單機電腦來說，估計要好幾天才能跑出最佳解。個人認為這篇論文實做起來是有效的。 論文網址","raw":null,"content":null,"categories":[{"name":"AI看股票","slug":"AI看股票","permalink":"https://www.finlab.tw/categories/AI看股票/"}],"tags":[{"name":"機器學習","slug":"機器學習","permalink":"https://www.finlab.tw/tags/機器學習/"},{"name":"Machine Learning","slug":"Machine-Learning","permalink":"https://www.finlab.tw/tags/Machine-Learning/"},{"name":"程式交易","slug":"程式交易","permalink":"https://www.finlab.tw/tags/程式交易/"},{"name":"量化投資","slug":"量化投資","permalink":"https://www.finlab.tw/tags/量化投資/"}]},{"title":"加速度指標：歷史年報酬20％的策略","slug":"加速度指標-加速你的獲利","date":"2018-11-24T20:11:28.000Z","updated":"2020-06-05T07:29:50.402Z","comments":true,"path":"加速度指標-加速你的獲利/","link":"","permalink":"https://www.finlab.tw/加速度指標-加速你的獲利/","excerpt":"","text":"之前分享加速度指標，讓大家找出股價正在加速向上的股票，然而並沒有說明怎麼搭配，本篇文章就是在提供大家一個例子，我發現這個指標可以用在非常多種不同的程式交易策略上，績效很不錯，但是有訣竅。 加速度指標回顧加速度指標，其實就是看均線的曲率是正的還是負的，但是由於股價的雜訊太大了，與其用微分的，我們提供一個比較間單的方式，來判斷曲率的正負： (n天前 + 當天)/2 &gt; n/2天前 的k天均線 我們就說它正在加速，是很不錯的持有標的，至於背後的原理可以參考之前的文章！但是加速度指標還是有其弱點，必須要搭配其他指標，才能發揮作用 加速度指標的癥結1：初始速度加速度最大的癥結就在於，你不知道其速度！例如現在有兩個人賽跑，其中一個人加速度是正的，另一個人是負的，究竟誰會先抵達終點？ 答案是不知道 因為你不知道起始速度是多少，假如有一個人根本逆著終點跑，就算他加速多快都沒有用！就像有一支股票，只要止跌，其曲率就會看起來是正的，但是止跌的股票還會有一段震蕩，甚至有續跌的可能，所以買剛止跌的時候就買是沒有意義的，我們應該是要買剛起漲的股票才對～ 下圖就是曲率正負和股價之間的分類，曲率為正時，股價有兩種可能：止跌、起漲。曲率為負時，股價也有兩種可能：止漲、起跌。 當我們使用曲率為正的條件時，就會發現我們選到「止跌」或「起漲」股，然而我們真正是想選取「起漲」股，假如我們選了起漲股，那賣出時，曲率為負，自然就是止漲，而不會選到起跌股。 解決方法所以我們加上一個股價的向上指標即可，這邊你可以使用KD值的K&gt;D（參數：240、120、120），來找出股價向上的股票，這樣加速度指標才有意義喔！ 當然有很多種趨勢型指標都可以拿來用用看～我相信一定會有更好的選項，這邊只是舉例。 加速度指標的癥結2：採樣點太少基本上加速度指標就是三個點比大小，採樣的點非常少，就像電影只看開頭和結尾，想要把中間劇情都猜出來，是不太容易的。 下圖左方的例子中，我們只用了三個點來衡量曲率是正的還是負的（或是你可以想像是凹的還是凸的），可以發現就算曲率是正的，也有可能並不是我們想要的股價曲線。其中，紅色的股價是我們比較希望的，而不是綠色的。 解決方法：多增加條件所以我們可以測試多個點，右圖我們用「兩組」三個點來觀察曲率（藍色跟黃色）可以發現，右上方得圖，不論用藍色的三個點或是黃色的三個點，曲率都是正的，而右下角的圖中，雖然用藍色的點看，曲率是正的，但是用黃色的點看的話，曲率是負的，於是就可以將這類型的股價給排除。 加速度指標要決定一個變數：n，是一個時間長度。我們可以列出多個n值不同加速度指標，這些加速度指標都符合時，我們再進行買入的動作。 我們讓n設定為50、20、15、10，一次增加四個加速度指標，來監控60天均線的曲率賣出條件是n=30這個指標不符合條件時，於隔天剃除 加速度指標的癥結3：沒有考慮公司營運狀況加速度指標為技術指標，並沒有考慮財報面，只要稍微判斷一下財報的狀況，就可以選出很不錯的股票～ 解決辦法由於財報並不是這個策略的主角，我只用 ROE &gt; 3 這樣的條件就很足夠了 總結我們敘述了加速度指標的不足，並且有根據的介紹怎麼樣新增條件，來完善我們的策略，以下就是這個策略的績效： 藍色的為不添加手續費，而紅色的則是添加了手續費～效果滿不錯的！ 這些參數我都沒有做任何優化，當然這些參數的選擇上還是得靠經驗，然而假如對於這些數字指標比較熟悉，大概就可以抓出有效的區間，進而選出好的標的。經過簡單的優化，甚至是增刪條件，都可以讓績效再提升。 下圖可以看到，最大下跌幅度在金融海嘯的時候莫名的高，必須要注意一下～～ 對了，補充一下，我們的新平台悄悄上線，目前正在測試中，此策略的選股清單可以免費觀看：加速度策略 這邊只是給大家一個雛形，可以將加速度指標用在股價，甚至是其他的財務數據上（月營收？），感覺都會滿有趣的！ 假如你想用Python來實做，可以參考下一篇：實做加速度指標！","raw":null,"content":null,"categories":[{"name":"選股策略","slug":"選股策略","permalink":"https://www.finlab.tw/categories/選股策略/"}],"tags":[{"name":"簡易策略","slug":"簡易策略","permalink":"https://www.finlab.tw/tags/簡易策略/"},{"name":"選股策略","slug":"選股策略","permalink":"https://www.finlab.tw/tags/選股策略/"},{"name":"歷史回測","slug":"歷史回測","permalink":"https://www.finlab.tw/tags/歷史回測/"},{"name":"程式交易","slug":"程式交易","permalink":"https://www.finlab.tw/tags/程式交易/"}]},{"title":"用KD值選股：還需搭配這三種指標","slug":"用KD值選股：還需搭配這三種指標","date":"2018-11-21T16:13:35.000Z","updated":"2020-06-05T07:29:52.103Z","comments":true,"path":"用KD值選股：還需搭配這三種指標/","link":"","permalink":"https://www.finlab.tw/用KD值選股：還需搭配這三種指標/","excerpt":"這篇文章將分享一個程式交易策略，以KD值為主，並且搭配其他的指標。有很多人投資是看KD值的，但KD值的看法五花八門，究竟哪一種比較好用？參數這麼多，究竟怎麼調績效比較好？這篇文章示範一個中長期的程式交易策略，並講解製作策略的思路。","text":"這篇文章將分享一個程式交易策略，以KD值為主，並且搭配其他的指標。有很多人投資是看KD值的，但KD值的看法五花八門，究竟哪一種比較好用？參數這麼多，究竟怎麼調績效比較好？這篇文章示範一個中長期的程式交易策略，並講解製作策略的思路。 寫策略並模擬回測績效是非常重要的，通過回測，就能一眼看出來你的策略有沒有效。有人說歷史不等於未來，我覺得更正確的說，應該是「歷史不完全等於未來」，每年都有很多不同的黑天鵝，不同的國際政治變化，政黨輪替，然而假如你可以找到一個策略，不論環境如何變化，但是績效一直有穩定的成長，就代表你有可能找到了「歷史與未來會相同的某種選股邏輯」！ KD值今天我們就來試驗一下KD值程式交易選股，首先，我傾向於把指標的參數拉長，原因是這樣比較容易抓的到股價的規律（以日K來說）。不過我個人的研究發現趨勢指標型態不一樣，選出來的股票也會不一樣，絕對不是只要股價會漲就好，而是要符合某些特定的數學條件。 這邊我選擇使用RSV 50, K 20, D 20，當作是參數（台股通常是9、3、3）。當K大於D的時候買入，反之賣出，每天選股並重新平衡資產，可以得到以下的績效： 紅色的是有考慮手續費，而藍色的則無。 然而這樣的選法是有一些弊端的！（尤其是手續費很高昂，股票換手率太高）所以接下來我們就想辦法來解決，順便提高一下程式交易的績效～ 長期趨勢漲，可能會買在高點！當K &gt; D時，股價會衝的很高，但是這時候買入就會買在高點了！所以我們在使用長線KD值時，可以增加一個條件來確保不會買在高點： 當天股價 &lt; 10日平均 除了股價不能太高，同時股價也不能太低！ 股價必須高於年線我們在此參數下選出來的股票，假如股價沒有過年線的話，很容易漲到年線附近時，就被彈了回去，所以乾脆我們選股的時候，就直接選高於年線的，就不會有這個問題了XD 增加一些常用的財務指標程式交易除了用技術指標外，我們也可以增加一些財務指標，例如ROE：ROE近1季大於ROE近4季平均 當然也有很多別的選項，我這邊就選一個好用的入門款XD， 三種條件依序加上後的結果可以發現，從下到上依序就是： 使用KD值 除了上述以外，額外增加：股價短線別太高 除了上述以外，額外增加：股價長線別太低 除了上述以外，額外增加：財務數據 不過以上是沒有增加手續費的，因為我的回測系統每天都會重新權益平衡，所以有非常多不必要的摩擦成本，此時手續費折扣就非常的重要了！ 最後我新增了一些不太重要的條件（為了減少股票檔數），整理成下圖，紅色為有手續費，藍色沒有手續費，只能說以人工調配持股應該會有更好的成果～有興趣可以研究看看！","raw":null,"content":null,"categories":[{"name":"選股策略","slug":"選股策略","permalink":"https://www.finlab.tw/categories/選股策略/"}],"tags":[{"name":"選股策略","slug":"選股策略","permalink":"https://www.finlab.tw/tags/選股策略/"},{"name":"KD","slug":"KD","permalink":"https://www.finlab.tw/tags/KD/"},{"name":"程式交易","slug":"程式交易","permalink":"https://www.finlab.tw/tags/程式交易/"},{"name":"技術指標","slug":"技術指標","permalink":"https://www.finlab.tw/tags/技術指標/"}]},{"title":"Python：如何獲得上市上櫃股票清單","slug":"Python：如何獲得上市上櫃股票清單","date":"2018-11-19T15:55:04.000Z","updated":"2020-06-05T07:29:47.107Z","comments":true,"path":"Python：如何獲得上市上櫃股票清單/","link":"","permalink":"https://www.finlab.tw/Python：如何獲得上市上櫃股票清單/","excerpt":"","text":"接下來為期幾天，將為大家打下python更深刻的基礎，適合剛學python，但是對pandas不太熟的讀者，這次我們就來把所有的股票代號給爬下來，並整理一番喔！ Python真的很厲害～可以用少少的語法達到非常多的功能我覺得python搭配excel是沒有必要的，直接使用python替代excel才是最佳的方式！ 這禮拜終於比較悠閒一點，開始寫blog了，目前主要還是繼續培養大家的python實力為主，因為有一些同學說明課程有些地方跳的比較快，其實可以參考一些網路上免費的python課程來補齊，不過此blog也會隨時補充一些實用的功能，或是簡單的 python 常用的package和語法，幫助大家熟練 python。 今天要做的就是取得上市櫃股票代號與分類，首先，我們想要爬的網頁是：http://isin.twse.com.tw/isin/C_public.jsp?strMode=2 其中strMode=2就是上市，而strMode=4就是上櫃，接下來我們就來將此網頁下載下來吧！ 爬取網頁123import requestsres = requests.get(\"http://isin.twse.com.tw/isin/C_public.jsp?strMode=2\") 其中，我們使用了常用的 package 叫做 requests，可以模擬網頁瀏覽器，其中 requests.get 就是模擬我們連到該網頁，下載網頁的原始碼～ 將網頁轉成 DataFrame我們用了上述的程式碼，就可以獲得該網頁的原始碼，瀏覽器就是用這些原始碼渲染成網頁讓您操作的，我們可以從網頁原始碼中萃取出表格，產生 DataFrame 1234import pandas as pddf = pd.read_html(res.text)[0]df 第一行：pd 就是我們萃取原始碼的package，全名叫做 pandas ，你可以想像 pandas 就是 python 界的 excel 軟體，可以操作各式各樣的表格，進行運算。 第三行：我們可以利用 pd.read_html 將我們剛剛爬取到的網頁原始碼 res.text 中的表格給萃取出來，而其中 [0] 是指說，萃取出來的可能有很多張表格，我們只需要第一張表格即可～ 整理資料 1 整理column名稱可以看到上圖，目前column名稱只是1、2、3、4，一些數字而已，但我們希望它們是有意義的文字，而我們又可以發現，其中第一行row，就是我們所需要的，所以，我們可以將第一行變成columns的名稱： 1234# 設定column名稱df.columns = df.iloc[0]# 刪除第一行df = df.iloc[1:] 整理資料 2 刪除冗餘行列接下來我們發現整理好column名稱後，還是有一些row很明顯是多餘的，我們必須要把它們刪除，刪除的方式，最簡單就是使用 dropna，並且設定當 row 或是 column 的 NaN 數量大於某個數字（例如3）時，我們就將該 column 或 row 移除： 12# 先移除row，再移除column，超過三個NaN則移除df = df.dropna(thresh=3, axis=0).dropna(thresh=3, axis=1) 設定index我們可以看到index目前也是數字，我們希望它是股票代號，則可以使用1df = df.set_index('有價證券代號及名稱')即可！ 由今天的練習，我們學到了使用 requests 來模擬瀏覽器，用 pandas 解析出網頁中的 table，並且利用 pandas 中的功能，將 table 作整理！ 博士班口試結束了，接下來我會盡力開始維持blog正常出貨！也希望能提供更多的選股、程式上的教學！","raw":null,"content":null,"categories":[{"name":"python財經","slug":"python財經","permalink":"https://www.finlab.tw/categories/python財經/"}],"tags":[{"name":"python","slug":"python","permalink":"https://www.finlab.tw/tags/python/"},{"name":"程式交易","slug":"程式交易","permalink":"https://www.finlab.tw/tags/程式交易/"},{"name":"爬蟲","slug":"爬蟲","permalink":"https://www.finlab.tw/tags/爬蟲/"},{"name":"入門教學","slug":"入門教學","permalink":"https://www.finlab.tw/tags/入門教學/"}]},{"title":"超簡單用Python預測股價","slug":"超簡單-Machine-Learning-預測股價","date":"2018-08-27T17:55:29.000Z","updated":"2020-06-05T07:29:49.832Z","comments":true,"path":"超簡單-Machine-Learning-預測股價/","link":"","permalink":"https://www.finlab.tw/超簡單-Machine-Learning-預測股價/","excerpt":"多虧了python，用最先進的統計模型來預測股價，程式交易超簡單！不用安裝程式，今天我們雲端寫code，適合完完全全的初學者！非常多非常多的人都用 python 在開發程式，因此，有很多高深數學軟體，都會有很多民間高手來實做，而我們只要會用就好了！學python從這篇開始！","text":"多虧了python，用最先進的統計模型來預測股價，程式交易超簡單！不用安裝程式，今天我們雲端寫code，適合完完全全的初學者！非常多非常多的人都用 python 在開發程式，因此，有很多高深數學軟體，都會有很多民間高手來實做，而我們只要會用就好了！學python從這篇開始！ 我們還是來稍微科普一下相關的程式交易知識好了 什麼是model（模型）模型就是一種能夠預測真實資料的數學公式，通常會是一個function，例如 f 好了，假如我們有一條時間序列 f(t) = at + b只要知道了變數 a 跟 b，就可以計算出 t 每一刻的 f(t) 是多少 要怎麼知道 a 跟 b 是多少？只要看其中兩個歷史時刻的位置即可：例如我們知道 f(1) = 1 且 f(2) = 2則我們可以推算出 a = 1 且 b = 0，並且預知 f(3) = 3 、 f(4) = 4 、 f(5) = 5 … 股價模型也是一樣，但是這個模型會比較複雜，不會只有 a、b 而已不過規則是一樣的，我們要用歷史股價去計算類似 a、b 的變數，通常稱之為 fitting找到 a、b 後就能夠用模型來預測股價了！ 用什麼模型預測股價呢？Facebook 最近推出了一個新型的時間序列預測模型Prophet，中文叫作預言家，預言家可以預測一些週期性的時間序列例如下圖，一個FB每天PO文的數量圖，隨時間關係圖： 截圖自fb論文 圖中，每個時間都只會對應到一個點，就是每天的PO文數量我們可以觀察到一些現象： 以每週來檢視上圖中，顏色的不同代表每週的變化量，禮拜六看起來明顯就比較少人用FB，（週末都跑去玩了？XD） 以每年來檢視我們也可以發現，以年度來說，暑假時PO文數會下降（大家都去放暑假了？） 每個週期下都有各自的規律，傳統的模型能夠成功預測嗎？ 傳統模型的限制其實已經有很多模型了，但為什麼FB還要推出一個新的呢？原因是，以前的模型並沒有辦法多週期性的預測 f(t) ： 這張圖的每個row是不同的模型圖中每條「實線」就是預測模型的結果，可以看出以往的模型，預測出來結果並不是很準 預言家模型下圖中，可以發現預言家模型比上述的模型預測的更準確 預言家模型最厲害的地方，就是用多條 Fourier Series，去擬合（fitting）時間序列在這邊就不把可怕的公式放上來了，有興趣可以參考 fb論文可以將週期調整至「每年」「每季」「每週」！模型簡單可以寫成這樣： f(t) = year(t) + season(t) + week(t) + trend(t) 甚至在fitting完（找到a、b等參數後）可以將 f(t) 的成分拆解出來看： 而最後的 f(t) 就是這些曲線的疊加，由上圖第三張，我們可以額外發現，聖誕節的時候，使用FB的人數下降非常快外國的聖誕節，就是與家人團聚的時光，（像是我們的農曆新年）所以不太會用手機的緣故 這篇論文大意就講到這裡，詳情可以參考：此論文 用預言家預測股票看完了學術的部分，接下來我們就實際的來使用預言家模型預測股價吧！要預測的精準，我們要找有週期性的股票來分析，這邊我就隨性的拿台積電當作是標的來預測囉～ 超簡單環境設定安裝python、安裝jupyter？不用，google提供了強大的雲端notebook，讓我們可以直接玩程式：https://colab.research.google.com/打開連結，開啟新的notebook，在雲端寫程式！當然你有python也可以開自己的，快的多 這次為了方便大家學習，我已經將環境建設好了！在任意cell輸入：12!git clone https://github.com/koreal6803/Stocker.git!pip install -r Stocker/requirements.txt即可完成！需要一段安裝時間，使用google colab的話，可以去休息一下，喝個水再回來XD 上述代碼中，每行開頭的驚嘆號，可以讓你把jupyter 當作 terminal 在用，（不過假如windows用戶沒有git可能就無法…點上面google 線上程式連結） 去除煩人的 warrning接下來，我們先來刪除惱人的warrning，最近pandas越來越煩一堆warrning…看了心煩直接刪除 1234import warnings### 去除煩人的 warrningwarnings.filterwarnings('ignore') 讀入台積電股價接下來就讀入附帶的台積點股價： 123456import pandas as pd### 讀入seriesdf = pd.read_csv('Stocker/price.csv', index_col='date', parse_dates=['date'])price = df.squeeze()price.head() 其中的squeeze就是將dataframe變成series的function，你可以用12print(df)print(df.squeeze)來查看其中差別 創建Stocker這個Stocker並不是我寫的package，而是利用國外別人寫好的，再額外修改成更方便的版本 用法很簡單，把股價的series丟進去就可以了： 12from Stocker.stocker import Stockertsmc = Stocker(price) 預測中期走勢接下來我們就可以用它來預測中期走勢，只需要一行 1model, model_data = tsmc.create_prophet_model(days=90) 其中綠色的就是預測出來的股價，而淺綠色區域就是信賴區間，股價大約就會落於此區間內，程式中的信賴區間為80％，也代表了，每五天就約有一天的股價會落於信賴區間之外，可以看到預測時間越久（沒實際股價的地方），不確定性越大，所以綠色的區間也就稍微變大可以用來當作布林區間的感覺 這樣預測準確嗎？不確定，所以我們可以把時間還原到一年前，來看看假如當時預測的結果，跟至今是不是有差別，我們不讓Stocker使用近一年的股價來fitting，出來的曲線跟實際的股價做比較： 1tsmc.evaluate_prediction() 上圖中，紅色虛線就是開始預測的當下，紅色線以後的時間都是預言家預測的結果而藍色則為預測的真實股價，黃色則是信賴區間 不準怎麼辦？沒關係，我們可以調整短中長期的參數，讓它預測短中長期股價：1tsmc.changepoint_prior_analysis(changepoint_priors=[0.001, 0.05, 0.1, 0.2])下圖中，可以看到藍色的線比較偏趨勢，不隨當下股價起舞，算是長期的趨勢預測而黃色則是非常貼近股價，算是短期的預測使用者可以自行調整參數，來決定短中長線的應用 拿來預測股價了！我們藉由上述的參數枚舉，可以知道哪一個參數（changepoint_prior）是最好的我們可以藉由執行predict_future 來預測股價囉！1tsmc.predict_future(days=100) 藉由Stocker，我們可以很輕易的預測股價，至於其準確性，還有待各位看官們回測看看囉！ 有上左方課程的同學，可以很輕易的使用Stocker來檢驗歷史報酬率是多少！可以試著找到最佳的參數，並盡量選擇有週期性的股票～期待你們的成果！ 此程式的一些連結：此程式的github此程式的notebook國外Stocker文章國外github預言家github","raw":null,"content":null,"categories":[{"name":"財經Python教學","slug":"財經Python教學","permalink":"https://www.finlab.tw/categories/財經Python教學/"}],"tags":[{"name":"Machine Learning","slug":"Machine-Learning","permalink":"https://www.finlab.tw/tags/Machine-Learning/"},{"name":"python","slug":"python","permalink":"https://www.finlab.tw/tags/python/"},{"name":"程式交易","slug":"程式交易","permalink":"https://www.finlab.tw/tags/程式交易/"},{"name":"股價預測","slug":"股價預測","permalink":"https://www.finlab.tw/tags/股價預測/"}]},{"title":"超簡單安裝Python教學","slug":"Python股票投資","date":"2018-07-20T10:55:21.000Z","updated":"2020-06-11T05:06:04.541Z","comments":true,"path":"Python股票投資/","link":"","permalink":"https://www.finlab.tw/Python股票投資/","excerpt":"","text":"你有想過用python分析股票、選股並追蹤績效嗎？這篇文章從python初學開始，帶你慢慢進入python投資的世界！ Python 用在理財上，能做的事情非常多！首先，Python最大的用處在於：可以分析財經數據，並且分析哪些策略有效果，不需要擔心網路上五花撩亂的方法，也不用擔心名師報名牌。再來，Python甚至還能幫你下單！讓您在上班時，還能做交易！ 而 Python 是所有程式語言中，最受歡迎的，功能也是最齊全的！ 重點是全部都免費！假如要學程式語言，當然還是使用 Python 最好囉～那我們就開始利用 Python 投資吧！ 安裝 Python3安裝Python最簡單的方式，就是直接安裝 Anaconda Anaconda 其實就是一個完整的Python生態系，包含了Python 和所有的基本需要的程式。 安裝好 Anaconda 後，就可以開始寫程式了！ 開啟 Python IDEAnaconda的好處是，除了安裝了python，它還幫我們安裝了jupyter，是一個程式編輯器。要打開這個編輯器，windows跟mac有點不一樣： windows：直接從開始工具列打開jupyter notebookmac：打開anaconda navigator，並且找到jupyter notebook的按鈕 打開後你應該會看到以下的介面： 按右邊「New」─&gt;「Python 3」來打開一個新的寫程式的地方，我們可以輸入「hello world!」來開寫入我們的第一句程式，並且按下「Run」來執行（或是按下ctrl-enter）你就會得到以下的狀況喔！代表你已經完成了第一階段了！ 我們目前可以執行python的基礎的功能，但是有一些進階的功能，必須要額外下載，例如機器學習、數學計算等等。這些進階功能通常會被包裝成 packges，我們必須要額外下載這些 packages。 尋找 packages有些非常有名的 package，例如繪圖的 Matplotlib、資料處理的 Pandas，這些都在剛剛我們安裝的Anaconda已經包含。那我們要怎麼知道要去哪下載額外的 packages 呢？ 方法1：google首先，例如我們想要進行機器學習（machine learning），我們可以直接 google：「machine lenaring python package」就會看到很多的網頁都有推薦非常多machine learning 的package 方法2：官網除了上網google外，也可以上pip官方網站，上面也有很多的package清單，可以看最近最紅的packages。 要如何安裝這些 packages 呢？通常都會用以下的方法： 使用 pip 來安裝 packages安裝 packages 非常的簡單！而且這幾乎是唯一的方法： 假如你的作業系統是 windows，則可以打開 Anaconda Prompt，這個是個黑白畫面，可以在這裡面輸入一些指令，來下載額外的packages。 假如你的作業系統是 Mac 則可以打開內建的 terminal 就可以輸入指令了。 指令就是1conda install xxx 其中的 xxx 就是 package 的名稱。通常你也會看到「pip install xxx」，可以把其中的「pip」換成「conda」就可以了！ 接下來就可以到超簡單台股每日爬蟲教學來複製當中的代碼，下載所有上市公司的股價吧！（但是code先不用看懂沒關係）","raw":null,"content":null,"categories":[{"name":"財經Python教學","slug":"財經Python教學","permalink":"https://www.finlab.tw/categories/財經Python教學/"}],"tags":[{"name":"python","slug":"python","permalink":"https://www.finlab.tw/tags/python/"},{"name":"程式交易","slug":"程式交易","permalink":"https://www.finlab.tw/tags/程式交易/"}]},{"title":"簡單又有效：股價加速度選股指標","slug":"簡易的外資-基本面策略","date":"2018-07-14T10:04:31.000Z","updated":"2020-06-05T07:29:48.838Z","comments":true,"path":"簡易的外資-基本面策略/","link":"","permalink":"https://www.finlab.tw/簡易的外資-基本面策略/","excerpt":"","text":"本文分享了製作策略的過程，還有一個獨家的指標，組合成有效且強力的選股邏輯，原本是要作三大法人策略，但陰錯陽差而寫成了另外一個程式交易策略，分享給大家，這個指標只用到了國小數學，但是個人覺得還滿有效的！ 究竟是如何完成一個策略的？建構一個好的指標並不容易，大約是以下幾個步驟： 有一個初始的想法（某天，我想製作一個三大法人指標） 回測看看（怎麼測怎麼悲劇） 檢查買賣訊號，修改一下，並回到步驟2（以為想到好方法，但空歡喜一場） 終於跳出2-&gt;3-&gt;2-&gt;3的循環，成功做出策略（發現根本不是三大法人策略XD） 通常我們就會在步驟2跟3不斷循環，直到成功為止，假如你試了一百萬次，總能夠找到一個好策略，但就是會花很久的時間就是了… 如何快速建構出一個好策略？個人根據經驗，歸納了一些簡單小技巧，幫助你更快速的找到好策略： 單看某些條件直接回測，看該因子會不會反映於股價（通常好壞會差滿多的） 知道該因子的數值分佈狀況（例如：ROE要多高才算高？），才能輕鬆產生嚴苛或寬鬆的條件 將有用的條件組合，並適當的調整條件的鬆緊（由寬鬆往嚴苛的方向，調整試試看） 以上是我自己回測時常用到的方法，另外，回測系統也是滿重要的，可以快速驗證、組合各種不同的條件，回測系統有可以講很多東西，先別離提好了，回到今天的策略 這是個誤打誤撞的策略其實我原本是想研究三大法人的策略，但發現三大法人除了投信外，怎麼寫都寫不出來XD最後，反而研究出了一個簡單好用的指標！反倒是外資在這個策略中，比較算是輔助條件，不是最重要的條件以下就是這個指標的介紹 漲跌加減速指標我們可以把股價想像成汽車前進後退，這樣的話，價格的漲跌就對應到車子移動，國中我們都學過xt=x0+vt+12at2x_t = x_0 + vt + \\frac{1}{2}at^2x​t​​=x​0​​+vt+​2​​1​​at​2​​其中x0x_0x​0​​是買入股價，而xtx_tx​t​​是賣出的股價我們想要 xt&gt;x0x_t &gt; x_0x​t​​&gt;x​0​​，代表有獲利那就等同於代表我們希望 v&gt;0v &gt; 0v&gt;0且a&gt;0a &gt; 0a&gt;0代表股價有機會越來越高，也就比較可能會獲利！其中，v&gt;0v &gt; 0v&gt;0 比較簡單，就是今天股價比n天前高就行了但是a&gt;0a &gt; 0a&gt;0要怎麼表示呢？就是我們接下來要探討的了 下圖中，藍色的曲線為均線，而紅色線與黃色的點為指標當今天黃點在紅線下方時，代表目前股價的加速度（曲率）大於零，所以股價之後上漲的機率高（買點）當今天黃點在紅線上方時，代表目前股價的加速度（曲率）小於零，所以股價之後下跌的機率高（賣點） 有了這個邏輯，接下來，我們可以寫出數學公式 如何寫成條件式？寫成數學公式也很簡單，我們只要判斷圖中的紫色點跟黃色點，哪個比較高就可以了， 紫色點的價格：（今天均線價格 + 2n天前均線價格）/2 黃色點的價格：第n天前的均線價格 所以總結我們的加速度指標就是： 加速指標 = (紫色點價格 ─ 黃色點價格) / 黃色點價格 當此指標為正的時候，代表加速度越大（越容易漲）此指標為負的時候，代表加速度越小（越容易跌） 簡單，但是有效果！我也是走實用路線的，其實交易策略的論文有很多，選股方法也有很多種我喜歡的策略可以這樣排序： 簡單又有效的方法 簡單但無效的方法 困難但有效的方法 困難又無效的方法 我比較推崇簡單的方法，因為實做困難的策略，要耗費大量的時間，但最後不一定有效，相反的，做一個簡單的策略，只需要花一點點時間，但成功後，效果往往不差，失敗了也沒關係，至少是快速失敗，總比花了大量的人力精力，最後發現無用來的好。 先來看一下回測的結果以加速度指標為主體，搭配一些其它條件，我們可以歷史權益曲線報酬率為下圖，大約有十年十倍，紅色的曲線考慮手續費，而藍色不考慮手續費，可以發現有沒有手續費還是差滿多的！尤其是這種每天都要買賣的策略， 下一篇，我就會介紹該策略的詳細條件，讓大家來品香一下～趕快來看看吧！","raw":null,"content":null,"categories":[{"name":"指標分析","slug":"指標分析","permalink":"https://www.finlab.tw/categories/指標分析/"},{"name":"技術面","slug":"指標分析/技術面","permalink":"https://www.finlab.tw/categories/指標分析/技術面/"}],"tags":[{"name":"外資","slug":"外資","permalink":"https://www.finlab.tw/tags/外資/"},{"name":"技術指標","slug":"技術指標","permalink":"https://www.finlab.tw/tags/技術指標/"},{"name":"指標","slug":"指標","permalink":"https://www.finlab.tw/tags/指標/"},{"name":"財經Python教學","slug":"財經Python教學","permalink":"https://www.finlab.tw/tags/財經Python教學/"}]},{"title":"Python：外資買入成本選股","slug":"python：計算外資買入成本","date":"2018-07-07T09:59:32.000Z","updated":"2020-06-05T07:29:50.535Z","comments":true,"path":"python：計算外資買入成本/","link":"","permalink":"https://www.finlab.tw/python：計算外資買入成本/","excerpt":"","text":"上次已經介紹了如何爬取外資爬蟲～這次我們就用三大法人來製作指標！自己做指標的好處是，數字都可以客製化，也可以搭配其它不同的指標進行選股和回測喔！這次我們要做的指標是「外資買入成本」！ 計算指標前，先整理好財務數據(沒上課程的請看這邊，上了課的可以跳過看下一段) 在計算外資買入成本前，我們必須要或得兩個 DataFrame： 「收盤價」 「外資買入張數」 這兩個 DataFrame，其 columns 是股票的代號，而 index是每天的日期，這兩個 DataFrame 要怎麼做出來呢？ 首先，可以參考之前的文章，學習爬取股價跟三大法人： 爬取股價資訊 爬取三大法人買賣超 接下來，我們可以將這先每天都有的資料轉換成時間序列的 DataFrame：時間序列實做以上這篇文章只有教您怎麼整理「收盤價」，沒有教您怎麼整理「三大法人買賣資訊喔！」但原理都是一樣的，所以就依法炮製可以做出「三大法人」的DataFrame喔！ 好麻煩喔！有沒有更快的方式？(利用課堂的工具)假如您有上課程的話，利用 爬取三大法人買賣超 這篇文章，就可以將三大法人買賣超的資訊整理好喔！ 所以您用我們課程中的code，只需要額外增加：12from finlab.data import Datadata = Data() 以上的code就是一個可以跟資料庫索取資料的物件，接下來只要把資料讀進來就可以了： 12345678# 外資買入（2017-12月後的格式）陸資買進 = data.get('外陸資買進股數(不含外資自營商)', 250)外資買進 = data.get('外資自營商買進股數', 250)外資買進 += 陸資買進# 外資買入（2017~12月前的格式）外資買進.fillna(data.get('外資買進股數', 250)) 這樣就可以，直接得到dataframe囉！賣出也是依法炮製： 12345678# 外資賣出（2017-12月後的格式）陸資賣出 = data.get('外陸資賣出股數(不含外資自營商)', 250)外資賣出 = data.get('外資自營商賣出股數', 250)外資賣出 += 陸資賣出# 外資賣出（2017~12月前的格式）外資賣出.fillna(data.get('外資賣出股數', 250)) 然後是收盤價： 12# 收盤價收盤價 = data.get('收盤價', 250) 接下來我們就可以來計算指標了，首先：外資買入成本其實這一步驟是最簡單的XD最重要的只有兩個 function ： DataFrame 乘法：DataFrame的乘法很聰明，會將一樣的column name 跟 index 對應到的數字相乘，所以我們可以直接寫 外資買入 * 收盤價 這樣子的語法 df.rolling(60).mean()：就是時間窗格，例如今天的值，會變成過去60天的值的加總，每一天都如此計算。 所以就有以下的code： 1外資買進成本 = (外資買進 * 收盤價).rolling(60, min_periods=1).sum() / 外資買進.rolling(60, min_periods=1).sum() 就這樣算完了，但是有時候我們防止 DataFrame 裡面有 NaN ，我們希望就算有 NaN 也能算出值，就可以寫成： 1外資買進成本 = (外資買進 * 收盤價).rolling(60, min_periods=1).sum() / 外資買進.rolling(60, min_periods=1).sum() 當中的 min_period=1 代表60天中，只需要有一天不是 NaN，就可以將不是 NaN 的數字取平均喔！\b所以這樣寫會是比較建議的。 這邊要注意的是，我們不只算了單一一檔股票，是把所有股票的外資買進成本都算出來囉！ 外資賣出成本這邊一模一樣，所以就直接放code： 1外資賣出成本 = (外資賣出 * 收盤價).rolling(60, min_periods=1).sum() / 外資賣出.rolling(60, min_periods=1).sum() 畫出曲線我們可以將 買入、賣出 的成本都畫出來：123收盤價['1101'].plot()外資買進成本['1101'].plot(color='red')外資賣出成本['1101'].plot(color='blue') 紅色的線就是外資的買進成本藍色的就是賣出成本 當買進成本高於賣出成本時，就是可以考慮買進的時機喔！或是當股價上漲後，拉回到買進成本線，也是很好的買點喔！大家可以試著回測看看～～ 選股我們也可以選擇股價小於外資成本的股票清單：12cond1 = 收盤價.iloc[-1] &lt; 外資買進成本.iloc[-1]print(cond1[cond1]) 這樣就可以看到所有股價小於外資成本的股票囉！方便您繼續追蹤，看這些股票有沒有突破外資成本，一飛沖天喔！","raw":null,"content":null,"categories":[{"name":"財經Python教學","slug":"財經Python教學","permalink":"https://www.finlab.tw/categories/財經Python教學/"}],"tags":[{"name":"外資","slug":"外資","permalink":"https://www.finlab.tw/tags/外資/"},{"name":"技術指標","slug":"技術指標","permalink":"https://www.finlab.tw/tags/技術指標/"}]},{"title":"三大法人爬蟲","slug":"三大法人爬蟲","date":"2018-07-02T09:59:30.000Z","updated":"2020-06-05T07:29:51.656Z","comments":true,"path":"三大法人爬蟲/","link":"","permalink":"https://www.finlab.tw/三大法人爬蟲/","excerpt":"","text":"三大法人是台灣獨有的資料，每一檔股票每天都會公佈，非常實用！之前也有介紹利用「投信買賣超」來交易的策略，相信如有看到並使用過的人，就知道它的威力！ 三大法人買賣超還有很多種用法，我們之後再一一說明，今天最主要就是先獲取到「三大法人」的資料！之後呢，我們會利用這個財經資料來建立一個投信買賣超的簡單策略。 12345678import requestsfrom io import StringIOimport pandas as pddate = '20180102'r = requests.get('http://www.tse.com.tw/fund/T86?response=csv&amp;date='+date+'&amp;selectType=ALLBUT0999')#df = pd.read_csv(StringIO(r.text), header=1).dropna(how='all', axis=1).dropna(how='any')df 什麼！這樣就爬好了～！對呀～那請問怎麼把他們都存在資料庫中呢？假如您有上課程的話，可以結合我們寫好的GUI外掛可以用： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152# finlab 軟體包要上課才有喔～from finlab.crawler import widget, date_range# 讀入一些packageimport sqlite3import osimport requestsfrom io import StringIOimport pandas as pd# 爬取資料def crawl_legal_person(date): # 將時間物件變成字串：'20180102' datestr = date.strftime('%Y%m%d') # 下載三大法人資料 try: r = requests.get('http://www.tse.com.tw/fund/T86?response=csv&amp;date='+datestr+'&amp;selectType=ALLBUT0999')# except: return None # 製作三大法人的DataFrame try: df = pd.read_csv(StringIO(r.text), header=1).dropna(how='all', axis=1).dropna(how='any') except: return None # 微調整（為了配合資料庫的格式） # 刪除逗點 df = df.astype(str).apply(lambda s: s.str.replace(',','')) # 刪除「證券代號」中的「\"」和「=」 df['stock_id'] = df['證券代號'].str.replace('=','').str.replace('\"','') # 刪除「證券代號」這個欄位 df = df.drop(['證券代號'], axis=1) # 設定index df['date'] = date df = df.set_index(['stock_id', 'date']) # 將dataframe的型態轉成數字 return df.apply(lambda s: pd.to_numeric(s, errors='coerce')).dropna(how='all', axis=1)# 打開資料庫conn = sqlite3.connect(os.path.join('data', 'data.db'))# 開啟GUI介面widget(conn, 'legal_person', crawl_legal_person, date_range) 才多加幾行，我們就將GUI的插件給寫好了～可以調整時間範圍，來下載每天的三大法人買賣超，並且存在資料庫裡面～下一次我們就來實做三大法人的策略囉！敬請期待～！","raw":null,"content":null,"categories":[{"name":"財經Python教學","slug":"財經Python教學","permalink":"https://www.finlab.tw/categories/財經Python教學/"}],"tags":[{"name":"python","slug":"python","permalink":"https://www.finlab.tw/tags/python/"},{"name":"程式交易","slug":"程式交易","permalink":"https://www.finlab.tw/tags/程式交易/"},{"name":"爬蟲","slug":"爬蟲","permalink":"https://www.finlab.tw/tags/爬蟲/"}]},{"title":"如何判斷投資理財課程的好壞？","slug":"投資理財課程的好壞","date":"2018-07-01T09:59:30.000Z","updated":"2020-06-05T07:29:49.700Z","comments":true,"path":"投資理財課程的好壞/","link":"","permalink":"https://www.finlab.tw/投資理財課程的好壞/","excerpt":"","text":"最近大家在討論，投資到底該買哪些書？該相信哪些老師？投資課程應該要多少錢？師資應該要有多久才夠格？對於量化策略的學派來說，根本沒有這些問題，為什麼這樣說呢？以下一一為您說明 該買哪些書書一本的價格，比上課程還要划算很多，增廣見聞沒什麼不好，付一點小錢，但獲得整本知識，採到雷不心疼（相較於課程）！ 但是呀～我得說網路上就已經有很多很棒的免費資源了，看書之前，去翻一翻網站，研究一下，說不定也有很不錯的收穫例如「TEJ」這個策略庫，裡面就將近百種策略任均挑選，根本來不及買書呀！ 買書也好，上網看也很不錯，但重點在於自己要有辨別策略的能力！ 該相信哪些老師對於量化策略這個學門來說，我們不相信老師，只相信策略！經過長久驗證的策略，用歷史回測，這種最客觀的方式，來檢驗一堂課程、一個老師是否值得你相信， 為何我們不相信老師？因為就算您真的很幸運，遇到很有實力的老師，他能夠辨別產業狀況，個股之間的優勢，但有辦法完全複製這個老師的能力嗎？我個人是持保留得態度，假如不能複製他的能力，那就只能聽他的意見買賣股票，就變成單純老師說什麼買什麼，得一輩子付費上課才行，沒辦法獨立。 所以該怎麼辦才好？ 不要相信老師，相信你的代碼和策略吧！量化策略的好處是，你可以完全的複製和累積經驗！做研究也非常爽，每一次回測就可以抵過別人實戰多年的經驗這個月研究「技術指標」成為技術指標高手下個月研究「三大法人」成為籌碼高手再花半年研究一下「基本面」成為偽價值型投資人XD 每一次回測都獲得很多經驗，知道哪些指標該怎麼用，能夠長期獲利！最重要的好處是不用實彈演練，將 $ 投入茫茫大海，就已經學習到買股票的經驗了～ 我最近開了堂課程，也變成大家口中的「老師」了…XD但在此堂課程中，你可以完全不用相信我，相信歷史績效和程式碼就可以了！課程中，我們教您所有的代碼、也教你怎麼從無到有建構一個策略，程式碼是無情的，絕對公正，就像是照妖鏡一樣！好的策略一一現形，壞的策略一網打盡～ 歷史回測績效，比對帳單好量化投資中，我們會模擬策略在過去幾年的歷史績效，歷史績效是更有效的對帳單！為什麼這麼說？首先，你怎麼知道所謂的「老師」總共有幾個投資帳戶？說不定對帳單都拿會賺的，賠的都沒秀出來，尤其是多空都包含的策略，超容易做對帳單首先，只要一個帳戶看多，一個帳戶看空，最後看哪個賺得多，就秀哪個就可以了… 有歷史績效，每一筆交易都是清清楚楚，沒有含糊的餘地，每一個策略買賣時機也非常明確，不會有事後諸葛的嫌疑～我們的課程中，甚至回測程式碼都給你了，當中大部分的code上課都有教，直接毫無作假寫給你看！假如有問題早就被抓出來，歷史績效是經的起考驗的！ 所以我也請大家不用相信我，相信你自己跟code吧～ 投資課程究竟該便宜該貴投資課程也算是一種商品，例如手機好了，有人喜歡買「iphone」，但買「小米」手機的人也不少，課程定價本來就可以很浮動，重點是要「超值」！ 例如我開的「python投資：小資族選股策略」，就是走「小米」發燒友路線強調「動手做實驗」的精神，並且買一次終身受用。當然「發燒友」的意思就是，必須要有「研究精神」的人來學習會比較好，課程中比較沒有華麗的GUI介面，有的是很紮實的選股程式碼，還附上了一個策略並且實際驗證給大家看，策略的有效程度！ 我個人覺得滿超值的！尤其是對有研究精神的人～ 一般非量化課程問題在於，你只能相信老師說得話，但無法驗證他說的是否正確，也見過很多策略，理論可行，論述有理，但回測起來績效不好， 更可怕的是之前看過一個直播，講師的策略簡單，歷史績效超好，曲線超美！但詭異的地方是我無論怎麼做，就是完全無法還原他的績效…可能我資質愚鈍吧XD 以上的例子就是在說：你以為「超值」的課程，最後有可能沒那麼「超值」在這種情況下，比起一開始買5萬塊的課程，我覺得先從3000左右價位的課程開始嘗試，也不失是個好主意呀！以成本來說 五萬塊的課程：相當於50萬要獲利10％才能回本 三千塊的課程：相當於30萬只要獲利1％就能回本 以上的例子就可以發現，考量到自己的投資總額，也是非常重要的喔！最近3千這個價位的課程也越來越多了，這是個好現象！讓大家以比較低的成本，學到有用的知識！ 為何這堂課程這麼便宜這堂課程目前真的是破盤價，其中包含一個永久可以使用的回測框架還有其代碼，這些程式碼一般在外販售絕對是更貴的價格！為什麼我們可以賣這麼便宜？ 我們開這堂課的初衷就是：「希望將量化投資帶入平常百姓家」在課堂中，幾乎毫無保留，把所有的程式碼都教了，盡力做到完整！因為我們希望「大家上完這堂課，能夠獨立做財經研究，往財富自由的路上邁進」投資不應被高價課程或軟體壟斷，我們想讓大家用最少的成本，換取最大的福利， 而且我們不擔心全部教完，大家學會就跑走了～反而就是希望你再也不用依靠任何人、任何軟體，也不用再來上我的課，可以自行研究投資這門學問，對自己的獲利負責～我們希望越來越多人利用量化投資獲得穩定合理的報酬！對於改善台灣的投資環境盡一份心力。 FinLab的課程之所以可以橫空出世，闖出一片天，其實反映出台灣股票軟體高昂、財經資訊較封閉的缺點，投資界的「iphone」已經夠多了，我們就來當超高CP值的「小米」吧！","raw":null,"content":null,"categories":[],"tags":[{"name":"如何投資","slug":"如何投資","permalink":"https://www.finlab.tw/tags/如何投資/"}]},{"title":"為何時間管理總是失敗？","slug":"為何時間管理總是失敗？","date":"2018-06-17T06:01:51.000Z","updated":"2018-06-17T12:02:56.000Z","comments":true,"path":"為何時間管理總是失敗？/","link":"","permalink":"https://www.finlab.tw/為何時間管理總是失敗？/","excerpt":"時間總是不夠用？看了很多時間管理大師講述的方法但時間還是管理得很差？透過這篇戳破你的時間管理思維誤區！","text":"時間總是不夠用？看了很多時間管理大師講述的方法但時間還是管理得很差？透過這篇戳破你的時間管理思維誤區！你一定有看過下面這張圖 此圖是由美國的管理大師科維提出的時間管理理論，主要想帶出的概念是 我們的事情可以依照『緊急』及『重要性』分類為四象限 我們常常先做『不緊急不重要』or『緊急不重要』的事情在瞎忙 要想管理時間，除了緊急且重要的事情外，我們應該更優先做重要且不緊急的事 概念聽起來很對，但你有沒有想過，知道這個概念後對你的人生有什麼改變呢？就我自己來說，在不知道這個概念前還好，知道這個概念後我的時間管理技巧反而變得更差了！為什麼呢？因為有些事情不是那麼容易被分成重要還是不重要的，知道這個概念後除了要判斷某件事屬於哪個象限外，還額外造成了不必要的心理負擔 優先做重要且不緊急的事情的時候反而會擔憂緊急不重要的事還沒做！ 問了我身邊的朋友與前輩們發現大家都被“知道”這個概念所苦惱！知道這個理論後最可怕的是在做”緊急但不重要”的事的時候，會擔憂重要的事情都晾一邊沒進度，一來一往分心擔憂最後反而總體效率更差了！因為不管你在做哪個象限的事情，都多了來自其他象限尚未執行的心理壓力成本 盲目知道四象限理論，反而會被四象限困住甚至引發選擇困難症,最終心煩意亂乾脆什麼都不做 患得患失，是我覺得對於知道這個理論後最為悲劇的下場 我很不幸地知道這個理論了，也深有同感覺得時間管理變得更差了，有沒有什麼解決辦法？ 有！絕對有！首先我想說的是，想要控制這四象限裡面做事的順序，就我個人來說，我覺得根本是騙人的，考慮人性及心理因素，上面的四象限做事順序大多時候你根本就無法控制，理由如下 1.對於重要且緊急的事 例如明天突然就是死線要交給老闆產品企劃書這種事，其實根本不用特意安排，也不用談什麼時間管理，你自然會最優先去做，因為你知道沒做成你就死定了！年底考績分紅直接byebye甚至整個人黑掉被老闆討厭！ 2.緊急但是不重要的事 這類事很常出現，大部分是來自於第三方的催促或是人情壓力（例如同事跟你催要資料、年底週年慶大拍賣快要結束等等）雖然這些事不重要，但你不趕快做完心理會有很大的壓力，因為它是如此的緊急，所以你會遲遲放不下心，甚至影響到你做其他事情的效率。 3.不緊急不重要 這類事情是最弔詭、最可怕也是最常發生的，明明超級不重要但是執行力超級驚人，想一下你看到好看的劇會忍不住看幾集？肯定是好幾集甚至一整季對吧？上網購物時你真有辦法控制自己在一定的時間內完成而不會不小心被其他商品吸引而逛了更多時間？『不重要但是執行力超級驚人』是此類事情最可怕的特徵！我個人認為『不緊急不重要』的執行力強大程度僅次於『重要且緊急』，你根本不用特別安排時間也會自動去做，因為大多都是娛樂事項，做的很開心不用動腦，刻意抵抗不去做反而很費力！ 4.重要但是不緊急 例如像是明年的畢業論文、期中考、產品企劃案等等，這個類別的共通特性是通常你會覺得時間還很久，沒關係，我可以慢慢來，明天再說好了..但等你意識到來不及的時候通常已經為時已晚！『覺得時間很長慢慢來最終導致執行力低落』是此類事件共同的特徵。 講了這麼多，既然四象限時間管理法沒用，那時間到底要怎麼管？ 經過我的血淚慘痛教訓，對於時間管理只要掌握四個字『化繁為簡』 從今天開始對於時間管理沒有四象限，就只有兩象限，分別為『自動導航模式』＆『重要卻不緊急的事』，自動導航模式就是憑你的原始直覺，想做就去做，但是當你想要刻意去安排時間的時候，請一律無腦直接做重要且不緊急的事，不要再想那麼多了！為什麼呢？ 對於『緊急重要的事』若真的很緊急重要，光想到沒完成所帶來的可怕災難，不用特別想你就會去做了，哪需要安排時間？先完成它就是一切，你一定會自動擺在第一位去完成它！ 對於『緊急但不重要的事』，你都還有餘力去考慮安排事情的優先順序，代表那些緊急的事對你來說都還存在足夠的時間去完成它，別怕！讓子彈再飛一會兒，等最後死線到了再去做就好，反正它不重要，有時逼進死線去做反而更能聚精會神，花費時間更短效率更高！ 對於『不重要不緊急的事』，這是個人慾望及注意力管控問題，會再開另一篇文章專門探討並介紹關於注意力渙散如何拉回的小技巧。 以上是我對於時間管理慘痛的教訓及經驗分享，你也跟我一樣是被這個理論深受其害的人嗎？還是說這個所謂四象限理論對你來說真的有幫助？不要吝嗇！一起留言分享你的看法！！ Note.本文同步更新於Medium,歡迎follow https://medium.com/@master7x21/","raw":null,"content":null,"categories":[{"name":"生產力","slug":"生產力","permalink":"https://www.finlab.tw/categories/生產力/"}],"tags":[{"name":"生產力","slug":"生產力","permalink":"https://www.finlab.tw/tags/生產力/"},{"name":"個人優化","slug":"個人優化","permalink":"https://www.finlab.tw/tags/個人優化/"},{"name":"時間管理","slug":"時間管理","permalink":"https://www.finlab.tw/tags/時間管理/"}]},{"title":"回測績效檢討","slug":"回測績效檢討","date":"2018-06-14T05:24:11.000Z","updated":"2020-06-05T07:29:49.334Z","comments":true,"path":"回測績效檢討/","link":"","permalink":"https://www.finlab.tw/回測績效檢討/","excerpt":"因為你的疏忽，錯過了遇見聖杯的機會！回測的時候，究竟要注意哪些重點？發現策略效果不好，要怎麼優化呢？","text":"因為你的疏忽，錯過了遇見聖杯的機會！回測的時候，究竟要注意哪些重點？發現策略效果不好，要怎麼優化呢？ 跟長期關注blog的朋友們說聲抱歉，最近真的有點久沒更新了！我想說先把Hahow上的課程照顧好，所以之前的心力都在上面，不過目前課程代碼已經穩定許多，問題變少終於有時間來寫寫blog了！ 一個有趣的問題有同學於論壇中問我，為何他的策略，差幾天選股，回測跑出來差這麼多？請大家先看數據，從數據中找出原因吧！看你想的跟我想的是不是一樣的！ 以下是策略一的獲利狀況 其間 報酬率(%) 股票檔數 2017-06-11 - 2017-08-10 -0.88 15 2017-08-10 - 2017-10-09 +9.06 6 2017-10-09 - 2017-12-08 +8.84 10 2017-12-08 - 2018-02-06 -10.43 8 2018-02-06 - 2018-04-07 -13.09 1 2018-04-07 - 2018-06-06 +14.84 13 2018-06-06 - 2018-08-05 +0.03 13 看起來不是非常理想，但同學做了一點點的修改，把起始日期從原本的 2017/6/11 換成 2017/6/1 號，結果變成了超好的策略： 其間 報酬率(%) 股票檔數 2017-06-01 - 2017-07-31 -2.36 20 2017-07-31 - 2017-09-29 8.76 7 2017-09-29 - 2017-11-28 17.26 6 2017-11-28 - 2018-01-27 3.04 15 2018-01-27 - 2018-03-28 8.21 9 2018-03-28 - 2018-05-27 5.45 16 2018-05-27 - 2018-07-26 4.07 6 回測才相隔十天，並且適用同一個選股策略，究竟什麼造成了如此大的差異呢？大家先不要看我的答案，看看能不能用上面的數據，自己找出原因吧！ ——公佈答案——同學最初覺得跟換股時間對報酬率有極大的影響，但追根究底的原因，其實是「股票檔數」對於報酬率影響很大！ 我們就第一張圖進行檢討，其實仔細看的話，會發現其實每個時間段表現，除了紫色（2/6～4/7），其它時間都有穩定上升代表策略能夠發揮功效 那圖1紫色時間段的問題再哪？其實最主要的原因，紫色的時間區見內（2018-02-06 - 2018-04-07）策略只選擇了一檔股票而已沒有平均分散風險，造成毀滅性的虧損解決的方法很簡單就是讓策略每個時間段都選到一些股票，就不會有此問題了～ 股票檔數是非常非常重要的一個數據！它代表了策略的潛力～例如策略每次都選了很多檔股票進行持有，而長期績效勝過大盤代表這個策略非常有潛力！ 我們課程上的「資優生策略」就算是非常有潛力的璞玉，一次會選出非常多檔股票這些股票並不是拿來讓同學們直接買入，而是可以再進一步根據條件作篩選，選出數10～20檔股票！不但股票檔數變少，績效也有可能上升！ 策略製作最重要的關鍵就在於：股票檔數假如條件太嚴苛，則可能導致選出太少檔股票，無法分散風險 我們課程中教的是以「條件來篩選」，例如 某某值大於多少 這樣子有時候篩選不到股票，要預防這樣的問題，可以用以下的方式 12345condition1 = ...(課堂中的條件)condition2 = ...condition3 = ......conditionn = ... 以上是上課用程式寫出來的條件，或是可以添加一些自己的條件，利用這些條件，幫股票做評分： 1234score = condition1 * 1 + condition2 * 1 + condition * 1 ... + conditionn * 1selected_stocks = score.nlargest(20) 這邊的數字「1」都可以改成其它的權重，來代表該參數的重要性這樣我們就可以很穩定的每次都選出20檔股票囉～ 財報狗的選股清單就是用類似的方式選出來的～有興趣的話可以試試看喔！假如您沒有買課程的話也沒關係，概念上是一樣的喔～希望這篇文章能帶給您一些啟發～","raw":null,"content":null,"categories":[],"tags":[]},{"title":"你最該避開的三個疲勞陷阱！","slug":"你最該避開的三個疲勞陷阱！","date":"2018-06-11T07:59:06.000Z","updated":"2018-06-11T14:15:17.000Z","comments":true,"path":"你最該避開的三個疲勞陷阱！/","link":"","permalink":"https://www.finlab.tw/你最該避開的三個疲勞陷阱！/","excerpt":"有時總是感到莫名累？不是休息不夠，而是你掉入身體運作的機制的陷阱,看完此篇讓你擺脫累累的自己!!","text":"有時總是感到莫名累？不是休息不夠，而是你掉入身體運作的機制的陷阱,看完此篇讓你擺脫累累的自己!! 不知道你有沒有這種經驗，也沒做什麼特別的事情，但就是覺得身體特別累?明明還沒開始工作卻總覺得渾身提不起勁？目標與截止日期血淋淋地擺在那，但無論如何就是調動不了全身的細胞去完成它?到底我們的心靈與身體發生了什麼事?是什麼環節的疏忽導致我們的身體如此頑劣，竟可不經主大腦同意就自動切換成疲勞模式呢? 你只是不自覺做了一些非常耗神的事情而混不自知 人一天百分之80的時間都處於自動導航模式，像是通勤上班、鎖門、買早餐等等，這些行為完全是自然反應，完全不用經過大腦特意處理就可以完成，同樣的在一件事要不要開始做之前，我們也很大程度交由大腦自動導航的模塊去做自動化決定，而某些事做了會特別疲憊但我們卻沒有特別的去意識到甚至去防備它，而這就是身體有時會感到莫名疲憊的原因。 就我的經驗，做某些事總會感到特別疲憊，這些事分別是 短時間內不斷在不同工作間切換 辨別或安排某個項目 飲食攝取問題-咖啡戒斷帶來的注意力渙散 1.短時間不斷在不同工作間切換人是喜歡多工的動物，會讓自己有做很多事的快感，但多工時往往效率是最低的，而且還常常會因為掛念上一件任務，而讓當前任務出錯，關於這個問題我目前也沒找到非常好的方法，目前採用的戰術是計時25分鐘搭配便條紙的方式去抵抗干擾，詳細的步驟主要分為兩步 Step1.決定要做一項事情後，25分鐘內全力衝刺 Step2.若中途有其他閃念或是想法干擾，立刻寫在便條紙上暫緩它做到隔離以維持專注。 這個方法稱不上完美，有時某件詭異的小事儘管寫在紙上，仍還是會讓我莫名執著想要先去完成它~但我深知這件事根本他媽的超級不重要XD！（比如找到ＣＰ值最高的刮鬍刀這種超不重要的小事XD），但目前也還是先用這個方法頂著，盡量保持專注。 2.辨別或安排某個項目改錯字、改BUG分析數據，安排出遊計畫等等，這些行為需要調動到腦中”觀察”和”比較”的功能，長時間下來特別容易讓人感到疲累，我個人的習慣會把這種事放在很後面才做甚至不要去做它。 3.飲食攝取問題-咖啡戒斷帶來的注意力渙散現代人最喜歡喝咖啡，喝咖啡可以帶來短暫提神的作用，但隨之而來的戒斷症狀是很可怕的，會讓你覺得情緒消極絕望，什麼都不想做，甚至讓你常常莫名感到疲憊！就我個人來說目前會採休一喝一的戰術，讓身體慢慢習慣低咖啡因甚至沒有咖啡因的日子，另外經過多次實驗我意外發現，喝完咖啡後戴眼罩在全黑環境下小睡20分鐘，可以讓咖啡帶來的提神效果維持得更久更好！ 總結 1.人要避免疲憊應該極力避免做那些會讓你耗神的事情2.若真要做，請確定這件事的重要性配得上它讓你耗費的精力3.適時透過一些閒談或是在完全黑暗小睡的小技巧休息，效率更高！ 你也是特別容易感到莫名累或是無力的人嗎?下次可以先試試停下來幾秒，評估要開工的這件事對你精神能量的耗損程度，若真的很重要當然可以二話不說立馬開幹，但若不太重要可以試著延後它的優先順序，你也有什麼抵抗疲憊的妙招嗎？歡迎大家踴躍分享！ Note.本文同步更新於Medium,歡迎follow https://medium.com/@master7x21/","raw":null,"content":null,"categories":[{"name":"生產力","slug":"生產力","permalink":"https://www.finlab.tw/categories/生產力/"}],"tags":[{"name":"生產力","slug":"生產力","permalink":"https://www.finlab.tw/tags/生產力/"},{"name":"個人優化","slug":"個人優化","permalink":"https://www.finlab.tw/tags/個人優化/"}]},{"title":"股票投資組合系列（一）","slug":"股票投資組合系列（一）","date":"2018-04-19T04:24:42.000Z","updated":"2020-06-05T07:29:49.768Z","comments":true,"path":"股票投資組合系列（一）/","link":"","permalink":"https://www.finlab.tw/股票投資組合系列（一）/","excerpt":"","text":"這篇介紹多股票或是策略的配置方法，會以常見的方式加以說明，並以用淺顯易懂的方式帶大家拆解複雜的公式，期貨已經有很多人在用「多商品多策略」的方式在投資，這邊的理論部分也是適用的，歡迎進來看看。 股票策略是比較難量化的，因為股票要同時考慮財報、技術、籌碼面，光是要做出策略就已經不容易甚至還要同時考慮多策略，並且配置資產！？真的很難這篇就來介紹一下，比較宏觀的一些數學推演，然後我手上的9個交易策略當作範例，來看看效果如何。 報酬率模型我們用一個最簡單的模型，用數學寫起來就是這樣：r∗=∑p∈Prpwpr^{*}=\\sum_{p\\in\\mathbb{P}}r_{p}w_{p}r​∗​​=​p∈P​∑​​r​p​​w​p​​其中，r∗r^*r​∗​​ 是報酬率（return）P\\mathbb{P}P 是策略庫中的所有策略（portfolio）rpr_{p}r​p​​ 是 p 策略一段時間的報酬率wpw_{p}w​p​​ 是 p 策略一段時間的權重，也就是我們投資多少比例的資產於策略p其中我們限定 ∑wp=1\\sum{w_{p}}=1∑w​p​​=1 ，因為我們想以比例呈現，也就是一塊大餅分給不同的策略p的比例而已。 也可以把上述公式用向量表示：r∗(w)=r⋅wr^{*}(\\mathbf{w})=\\mathbf{r}\\cdot\\mathbf{w}r​∗​​(w)=r⋅w這邊的小寫粗體w跟r就是代表向量的意思，我們的目標就是找到一個 w\\mathbf{w}w 可以優化 r∗r^*r​∗​​ 變得比較大！這邊講的「優化」，是建立在假設「未來的報酬率」會跟「歷史報酬率」r∗r^*r​∗​​ 會是近似，所以優化了r∗r^*r​∗​​就帶表優化了「未來的報酬率」（大部分都是這樣，但有些會不一樣） 但是這邊的「優化」不代表想要一味的最大化r∗r^*r​∗​​，我們同時還希望風險降到最小！ 風險模型跟報酬率模型不一樣，風險可以有很多種模型，因為風險本身就很難定義XD有人說風險要看最大跌幅，有些人說要看獲利曲線的震幅（標準差），有很多種，而且公式有點難，放上來很多人就會暈過去，所以呢，我們這邊先假設風險模型是一個function，h(w)h(\\mathbf{w})h(w) 我們的目標就是要找一個盡可能小的h(w)h(\\mathbf{w})h(w) 同時比較報酬率跟風險所以我們希望報酬率不僅要好，並且風險也要很低才行，報酬率跟風險的圖可以畫成這樣： Y軸就是剛剛算的r∗(w)r^*(\\mathbf{w})r​∗​​(w)，而X軸就是h(w)h(\\mathbf{w})h(w)我們可以把任意的投資商品畫在圖上，例如：現金（cash）就是最沒有風險、但也最無法獲利的資產，所以位於圖中的左下角或是：股票，風險較高，但潛在獲利也比較高，所以位於圖中右上角 我們要是可以找到一組在左上角的資產，該有多好？代表此資產不但獲利高，且風險低，簡直是完美！但可惜的是現實中，很難找到這種資產，怎麼辦？我們自己來創造一個！我們將研發的策略當作是一種資產，並且放上這張圖中！甚至，我們還可以利用 w\\mathbf{w}w來組合不同的策略，產生靠近左上角的點！ 實做報酬率風險圖首先呢，先選取我覺得比較滿意的幾個策略出來： 策略的名字都被換成「口」，因為中文顯示不出來呀XDD（這樣也好，因為看名字就能知道該策略的手法）我把報酬率換成指數，方便觀看，你可能會覺得這策略也太猛，而且沒有開任何槓桿但大部分的策略都是2017年寫出來的，所以也不用覺得這很神，說不定都是一些過擬合的策略XD 接下來，我們利用蒙地卡羅法，跑五萬組隨機的w\\mathbf{w}w，把每個組合產生的「報酬率」跟「風險」畫上來（只考慮2017年）： 這裡的Y軸對應到的就是r∗(w)r^*(\\mathbf{w})r​∗​​(w) ，也就是獲利而X軸就是對應到h(w)h(\\mathbf{w})h(w) ，也就是風險 彩色點點的部分，每一個點，是我們任意分配權重投資9個策略，產生的報酬率和風險你就會發現，這些點只會出現在特定的範圍內，代表我們設定任何w，總會有碰到資產變化的極限， 另外，這些點點的顏色，代表了一種風險指標，同時結合了「報酬率」跟「風險」，名字叫做sharp ratio，它的算法很簡單，就是直接 r∗(w)/h(w)r^*(\\mathbf{w})/h(\\mathbf{w})r​∗​​(w)/h(w)由漸層的斜率可以看出來，sharp ratio 是一個可以幫我們找出「獲利大且風險小」的指標，sharp ratio高的組合，對應到圖中，就是越綠的點（策略組合），剛好是在整張圖的左上方！ 於是我們就可以找出兩個點（藍跟紅點），其中一個是sharp最高的資產組合，另一個是風險最小的資產組合這邊我們先不列出風險 h(w)h(\\mathbf{w})h(w) 到底怎麼定義只是給大家投資組合分析常用的一些套路，之後不外乎就是： 修改報酬率模型 r∗(w)r^*(\\mathbf{w})r​∗​​(w) 修正風險值模型 h(w)h(\\mathbf{w})h(w) 導出一個更好的公式，可以不用蒙地卡羅，直接算出類似藍點或紅點，也就是最佳化的投資組合 我們之後會更具體的來講解這些方法，並實做看看是否有用！（先講結論：有點用）","raw":null,"content":null,"categories":[],"tags":[{"name":"量化投資","slug":"量化投資","permalink":"https://www.finlab.tw/tags/量化投資/"}]},{"title":"Python簡單自動下單","slug":"通用自動下單法（下）","date":"2018-04-13T01:10:52.000Z","updated":"2020-06-05T07:29:47.328Z","comments":true,"path":"通用自動下單法（下）/","link":"","permalink":"https://www.finlab.tw/通用自動下單法（下）/","excerpt":"","text":"哈囉～好久不見！這篇文章分享如何用python自動下單！只要用這種方式，不管您是用哪一個券商，相信都能自動下單的！本文章使用新光證券為範例，其它券商就麻煩大家囉！ 不負責聲明本程式僅供教學用，有幾點必須要注意： 萬一新光證券改版，程式會無法使用喔！ 不要在開盤的時候測試，不然就會直接買賣了喔0.0 在關市時實驗，記得要刪掉委託單喔！ 不要在開盤的時候測試 不要在開盤的時候測試 不要在開盤的時候測試(很重要！多加幾行XD) 使用Selenium這是一個網頁自動化工具，通常是拿來測試網頁用，但是拿來下單也可以！我們用它是因為它支援javascript，實做起來就像是按鍵精靈一樣，比較簡單一點！ 安裝方法請參考Selenium 除了pip install selenium以外，還必須要下載driver才行喔！driver 就是一個控制瀏覽器的接口，可以挑chrome、firefox等來用。 自動登入安裝好了之後，我們先來分析下新光金控的下單流程： 連結到新光證券富貴角 輸入帳密 按「登入」 人工執行很簡單，但是要python執行怎麼寫呢？ 首先，雖然人眼看到的是網頁，但程式看到的，都是代碼，所以輸入帳密時，我們必須找出代碼中，對應到帳密的欄位進行填寫，可以對著欄位按右鍵，查找該欄位的ID 於是我們就有了第一段程式碼（可以從第30行開始看就好了）： 12345678910111213141516171819202122232425262728293031323334353637# 1. webdriver: 就是瀏覽器的介面，可以操控瀏覽器# 2. EC、WebDriverWait：我們可以用WebDriverWait等待EC的條件成立，才執行某些動作# 3. By：寫條件的時候，用By來獲取網頁上的元素from selenium import webdriverfrom selenium.webdriver.support import expected_conditions as ECfrom selenium.webdriver.support.ui import WebDriverWaitfrom selenium.webdriver.common.by import By# 用來填寫表單的functiondef text_input(driver, idname, text): # 確認欄位id存在 field = WebDriverWait(driver, 10).until( EC.presence_of_element_located((By.ID, idname)) ) # 清空並填入欄位 field.clear() field.send_keys(text)# 等 idname 按鈕出現時，按一下def wait_then_click(driver, idname): # 確定按鈕存在 element = WebDriverWait(driver, 10).until( EC.presence_of_element_located((By.ID, idname)) ) # 按一下 element.click()# 打開瀏覽器，並到登入的網址driver = webdriver.Firefox(executable_path='你的driver的位置')driver.get('https://w.sk88.com.tw/Cross/Pc/Login.aspx')# 填入帳號密碼，按確認text_input(driver, 'TxtIDNo', '你的帳號')text_input(driver, 'TxtPass', '你的密碼')wait_then_click(driver, 'Button1') 第30行才開始執行按鍵精靈的功能，假如前面看不懂就省略吧XD以上代碼和解釋就請大家自行讀取囉！ 但事情沒那麼簡單…登入後就看到一行：本機無有效憑證，故無法網路下單，僅提供看盤資訊。 但我們就是想要網路下單呀！所以，只能來個自動匯入憑證了！ 12345678910# 按一下確定wait_then_click(driver, 'Button1')# 匯入憑證（windows裡面的路徑要改成反斜線喔！「C:\\hello\\something\\SKIS_xxx.pfx」之類的）driver.find_element_by_id(\"FileUploadCert\").send_keys('/Users/放哪都可以/Documents/SKIS_xxx.pfx')text_input(driver, 'TxtCertPass', '你的密碼')# 按「確認」wait_then_click(driver, 'BtnImport')wait_then_click(driver, \"jqismooth_state0_button確 認\") 接下來我們又跳回到登入頁面了，所以再登入一次就可以下單囉！12345import timetime.sleep(3)text_input(driver, 'TxtPass', '你的帳號')text_input(driver, 'TxtIDNo', '你的密碼')wait_then_click(driver, 'Button1') 為什麼這邊要用time.sleep呢？我也很想避免，但可能是page loading完，有一些javascript要驗證，所以不能太快填寫表單，不然會被清除，加了sleep等待javascript驗證完畢，才能使用，經過了百般折騰，我們終於可以正式的來下單了！ 下漲停單接下來就來示範漲停單，首先這個頁面，是非常可怕的連環iframe所包成的什麼是iframe呢？白話來說就是網頁中的網頁，的意思…所以這個下單介面，就是網頁包網頁包網頁，如下圖： 我們必須再深入兩層iframe，才能到達下單的真正網頁：1234567driver.switch_to_default_content()WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.NAME, \"Content\")))driver.switch_to.frame('Content')WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.ID, \"OrderPanel\")))driver.switch_to.frame('OrderPanel') 接下來就可以利用這個iframe下單了，總共有七個步驟，以漲停買入為例，如下圖： 這邊要注意第三跟五的步驟，我們要等待特定的事件發生，才能繼續進行喔！因為這關係到網頁與新光證券的伺服器中間的認證，沒有等待就下不了單喔！ 接下來就把這七個步驟寫成代碼： 12345678910111213141516171819202122232425262728293031323334stock_id = '2330'bs = 'buy'amount = 1# 第一步驟text_input(driver, 'TxtSymb', stock_id)# 第二步驟btnbs_xpath = \"//span[@id='RdoOrls']/label/span\" if bs == 'buy' else \"//span[@id='RdoOrls']/label[2]/span\"driver.find_element_by_xpath(btnbs_xpath).click()# 第三步驟if bs == 'buy': WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.XPATH, \"//body[@style='background: rgb(255, 192, 203) none repeat scroll 0% 0%;']\")))else: WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.XPATH, \"//body[@style='background: rgb(167, 217, 254) none repeat scroll 0% 0%;']\")))# 第四步驟btnlimit_xpath = \"//span[@id='RdoOrpt']/label[2]/span\" if bs == 'buy' else \"//span[@id='RdoOrpt']/label[4]/span\"driver.find_element_by_xpath(btnlimit_xpath).click()# 第五步驟if bs == 'buy': WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.XPATH, '//input[@id = \"TxtOrpr\" and @value = \"漲停價\"]')))else: WebDriverWait(driver, 10).until(EC.presence_of_element_located((By.XPATH, '//input[@id = \"TxtOrpr\" and @value = \"跌停價\"]')))# 第六步驟text_input(driver, 'TxtOrsh', str(amount))# 第七步驟driver.execute_script('QueryConfirm()')wait_then_click(driver, 'jqismooth_state0_button確 認')wait_then_click(driver, 'jqismooth_state0_button離 開') 這邊我有用一些xpath的方式，來查找一些按鈕，可以參考xpath教學假如已經事先登入，執行這7個步驟，大約落在3秒左右，應該還算是堪用，但以上範例都是用漲停或是跌停買賣，而且我真的沒有在盤中使用過，還請小心服用！ 以上就是盤中買賣不負責教學！不知道大家有什麼建議呢？","raw":null,"content":null,"categories":[{"name":"財經Python教學","slug":"財經Python教學","permalink":"https://www.finlab.tw/categories/財經Python教學/"}],"tags":[{"name":"python","slug":"python","permalink":"https://www.finlab.tw/tags/python/"}]},{"title":"ROE到底高或低才好？","slug":"ROE到底高或低才好？","date":"2018-03-18T06:15:20.000Z","updated":"2020-06-05T07:29:50.703Z","comments":true,"path":"ROE到底高或低才好？/","link":"","permalink":"https://www.finlab.tw/ROE到底高或低才好？/","excerpt":"","text":"我曾經在EPS跟ROE的比較文章中，說明了「ROE越高越好」，但後來隔了幾個月，財報狗發佈了一篇文章「為什麼ROE 不是越高越好？」，瞬間被打臉，雙方都有回測做依據，究竟誰的回測系統有問題，我們來看個究竟！ FinLab說：為何ROE越高越好？ROE就是一個考慮了公司可用資金與報酬的指標： 股東權益 = 總資產 - 總負債ROE = 稅後盈餘 / 股東權益 * 100% 所以從公式上，我們應該要選擇稅後盈餘高，且股東權益低的公司，代表公司很會賺錢！ 簡單的策略： 每60天（約兩個月）換一次ROE大於10％的股票（ROE高的股票） 結果：ROE高比ROE較低的股票群，來的更有優勢！ 財報狗說：為何ROE越高不會越好，甚至越低越好？因為從統計來說，企業無法維持高ROE是常態，通常擁有較高ROE的產業，必定伴隨很多競爭者、效訪者，所以到至於利潤下滑，產業之間的競爭是非常激烈的喔！而且當企業競爭優勢不再，ROE開始下滑時，股價也會反映出來！ 簡單的策略： 每年換一次ROE高股票 結果：ROE高效果甚至比ROE低的股票，績效更差！ 所以到底誰說的對？這兩套立場各說各話時，背後其實是想要說明一個數據的特性，就像是ROE跟股價之間的變化， 同樣的故事，不同的解讀方式，造成投資變得非常的撲朔迷離！ 撲朔迷離的問題，資料的分析才是解決之道，就我個人的感覺，應該是資料為本，而說詞當輔助，幫助記憶，我覺得很多投資課程，都太強調說詞的傳授，反而沒有全面的真實資料的佐證！ 所以FinLab跟財報狗誰的故事是對的？兩個都對，或者，嚴格說兩個都錯了！就算有數據佐證，故事沒說清楚，也會導致大家理解上有很多誤區 剛剛仔細看文章的讀者，應該會發現，我們在回測時，更換持股的頻率不同！沒錯，就是因為換股的頻率不同，所以導致績效有非常大的差距！ 高ROE的公司股價上升，是正確的！ ROE無法維持高檔，會有回歸的趨勢，造成股價又下跌，也是正確的！ 所以接下來我們就來觀看不同頻率持有高ROE的公司，會得到怎麼樣的報酬率： 當ROE大於10％則持有 n 天，每 n 天換一次股票 不考慮手續費 可以發現，換股頻率高的時候，獲利情況也會跟著變好，基本上也是一字排開的狀況！財報狗只看到了金黃色那條曲線圖，所以他們說ROE高獲利不高而FinLab只看到了深咖啡色的曲線圖，所以說ROE高獲利也高 正解：ROE在高檔時，可以買進，但是最好要密切觀察，當ROE下跌時，盡早賣出！","raw":null,"content":null,"categories":[{"name":"指標分析","slug":"指標分析","permalink":"https://www.finlab.tw/categories/指標分析/"},{"name":"基本面","slug":"指標分析/基本面","permalink":"https://www.finlab.tw/categories/指標分析/基本面/"}],"tags":[{"name":"ROE","slug":"ROE","permalink":"https://www.finlab.tw/tags/ROE/"},{"name":"如何買股票","slug":"如何買股票","permalink":"https://www.finlab.tw/tags/如何買股票/"}]},{"title":"創新高有多高？","slug":"創新高有多高？","date":"2018-02-27T13:10:59.000Z","updated":"2020-06-05T07:29:51.872Z","comments":true,"path":"創新高有多高？/","link":"","permalink":"https://www.finlab.tw/創新高有多高？/","excerpt":"","text":"創多少天新高，才叫創新高？今天用非常紮實的回測，來分析一下多少天創新高，才是真正的創新高。看到很多名師選股，都是用創新高的思路，然而買在創新高就是會讓人怕怕的，這麼高了！真的可以買嗎？尤其是對於價值型投資者來說，看到創新高的股票，有些本益比都快噴發60倍，避之唯恐不及，怎麼可能還買呢！？ 今天分享給大家，創新高真的沒問題嗎？越創越高難道真的越好？（真的越好）究竟為何會發生這種現象？ 股價突破某個歷史高點，事出必有因，以下歸納一下原因： 題材股：豬，站在風頭也會飛，可能是最近一波題材股的關係！ 獲利股：財務結構重大改變，獲利暴增。 利多股：未來獲利預估會暴增的股票。 當然還可能有更多原因，就請大大們補充了！總之股價突破了某個歷史高點，接下來必定就是兩條路： 沾了一下高點，又跌了回去 繼續噴高，一去不復返 究竟怎麼分別這兩種股票呢？我發現，創新高，多久的新高非常關鍵！所以我做了以下的回測分析： 當股價創 n 天新高時，分配金額，隔天開盤買入 持有20天後賣出 不算手續費，會有以下的結果： 超級漂亮的一字排開！而最紅的曲線，就是600天創新高才買入，而最黑的那條線，則是60天創新高就買入了！事實證明，創新高真的有用！而且創新高天數（n）設定越高，創新高就越有用。 然而這個沒有考慮手續費喔！考慮100萬起始資金，手續費(6折)，和證交稅的話，獲利會降低，600天創新高的績效變成2.75倍，比照同期大盤1.2倍，加權報酬1.59倍。 接下來來分析一下，不考慮手續費： 勝率分析接下來我們再來分析一下勝率：下圖中的 x 軸是不同的策略，採取x天創新高，y軸則是該交易的勝率（就是一支股票獲利的機率）： 大部分都落在46到47％左右，然而這是沒有加上手續費的，假如加上手續費，勝率更低…。只能說創新高勝率不高…，會讓你心情不太好，而且常常集體一起爛掉（個人使用的感覺），尤其是大盤有點漲不上去的時候，（如最近XDD）。 但是整體來講還是會獲利喔！就像是一百次小輸，但贏的那次大贏。所以接下來我們就來研究選到飆股的機率吧！ 選到飆股機率但偶爾會有飆股！讓我們來分析一下買到飆股的機率，我們先定義飆股為漲40％以上來看看所有的買賣當中，飆股比例是否跟 n 天創新高有關： y軸為買到飆股的機率，大約是1％左右，平均就是100檔裡面有一檔飆股啦XDD。但飆股與n天創新高有明顯的關連，可見，n 越大，越有可能買到飆股，這真是一個好現象呀！ 平均獲利比較所以就選擇那些越久創新高的，會比較好囉？先別急，不能只看大飆股，應該要考慮每檔股票買賣的平均獲利比較準！所以我們也分析了一下： 上圖的y軸，大於1代表獲利，小於1代表虧損，每支股票平均的獲利可以在1％左右，算上摩擦成本（0.7%），就看起來沒這麼多了對吧XD。 發現，以平均來說，雖然似乎n有越大越好的趨勢，但是120日創新高也不能忽略，我的感覺是，很多人都用120創新高這個參數在買股票，所以很多圖都在120日有奇怪的反應（勝率跟獲利，都異常的高，詳見上圖）。 所以這篇文章對創新高的天數做了分析，也讓大家有一個策略的原型，可以將此策略再多觀察、多分析，結合不同指標，相信可以篩選出更好的買點賣點！ 不好意思讓大家久等了，最近一直在忙課程的東西，我覺得對長期支持blog的大家覺得虧欠。我的理想目標是blog的發文頻率不要因為課程拍攝影片而被影響！然而，事情畢竟沒有這麼簡單，目前呈現蠟燭幾頭燒的狀態。但我會盡力的！也謝謝各位的長期支持！我們會秉持初衷，維持文章的品質！讓FinLab的理念可以被更多人看到～","raw":null,"content":null,"categories":[{"name":"指標分析","slug":"指標分析","permalink":"https://www.finlab.tw/categories/指標分析/"},{"name":"技術面","slug":"指標分析/技術面","permalink":"https://www.finlab.tw/categories/指標分析/技術面/"}],"tags":[{"name":"如何買股票","slug":"如何買股票","permalink":"https://www.finlab.tw/tags/如何買股票/"},{"name":"歷史回測","slug":"歷史回測","permalink":"https://www.finlab.tw/tags/歷史回測/"},{"name":"選股","slug":"選股","permalink":"https://www.finlab.tw/tags/選股/"},{"name":"程式交易","slug":"程式交易","permalink":"https://www.finlab.tw/tags/程式交易/"},{"name":"型態學","slug":"型態學","permalink":"https://www.finlab.tw/tags/型態學/"},{"name":" 量化投資","slug":"量化投資","permalink":"https://www.finlab.tw/tags/量化投資/"},{"name":"指標","slug":"指標","permalink":"https://www.finlab.tw/tags/指標/"}]},{"title":"我的量化投資史","slug":"我的量化投資黑歷史","date":"2018-02-15T05:12:15.000Z","updated":"2020-06-05T07:29:49.737Z","comments":true,"path":"我的量化投資黑歷史/","link":"","permalink":"https://www.finlab.tw/我的量化投資黑歷史/","excerpt":"","text":"我以前很喜歡寫程式，剛開始接觸投資時，就希望能夠用程式超越99%的投資人我以為程式交易是好棒棒，有了這個絕密的武器，在投資市場上就能夠輕而一舉超越絕大部分投資者。現在真的覺得自己好傻好天真呀！ 我錯了，量化投資不是聖杯後來不斷的研究發現，量化投資也是有其極限歷史年化報酬率最高也就10～20％，上線後還不保證可以跟歷史績效一樣這個時候才瞭解，操盤手每天看線，不是看假的，投資還是得花很多時間磨練。 於是，我開始主觀交易，但後果是？想建構一個超強的回測平台，真的不容易。還沒建好前，我手已經很癢，就開始投資了，那個時候我真的很蠢，直接上網搜尋，大家最近講哪些股票、看看KD值，就直接買了！？ 可想而知，結果就是慘賠（幾千塊XD我很膽小），但心情很差！尤其是每天要顧著那些股票，不知道它明天又要如何震盪，心情隨之擺盪。 於是，我又參考了一個很有名的老師，照著它的明牌買，發現怎麼買怎麼跌，心情更差！總覺得股市茫茫無所適從， 突然發現，我這不是在”投資”，而是在”賭”！ 有了好策略，還是高買低賣我的回測平台終於建好了，開始找好的策略，也有幾個不錯的選股方法，用股市大富翁模擬，跑得好棒棒，於是決定將策略上線，上線後覺得好奇怪，怎麼開始策略不管用了？連續兩個月都在震盪， 當時又是暑假，我就丟棄此策略，跑去到處玩。 九月開學，回頭才發現自己的策略漲了20%我竟然都沒有跟到，於是投入真錢，又開始賠…。 原來這就是傳說中，有了策略還是高買低賣呀XD。 終於，下定決心每天投資開始使用策略，策略會跑出來的股票清單，但我還是不相信它，喜歡自己研究半天，少買幾檔， 後來發現沒買的都漲，買的都跌，跑出來跟策略的報酬率不太一樣，我的實際報酬率輸策略的報酬率… 於是，下定決心按表操課？沒有，最後我還是沒按表操課，因為我慢慢的跟策略產生了一些默契，現在我每天只看10分鐘，搭配一些額外的籌碼面（券商分點），我發現主觀甚至可以稍微優化策略，當然沒有歷史績效輔助，說不定我只是最近運氣好罷了。 當初我就是沒有個方向，才學習的如此緩慢，所以撰寫新手選股SOP懶人包雖然不一定是最好，但假如你是剛開始接觸股票的話，應該可以避免你走一些冤枉路。 人與量化條件搭配，相輔相成從最初，策略帶我找標的，最後，我用更多數據來篩選策略給我的股票， 學習選股的路上，像是互相提拔的感覺。人與量化策略一起買賣股票，目前看來是可行的，缺點就是要額外的時間，考慮額外的因素來買賣，而且遇到策略不靈光時，有交易手法變形的可能。 平常不太會去更動策略的選股，但最近躲過全球慘跌是我自己主觀判斷， 大家在交易的時候，應該也有量化（機械式的篩選）和主觀（自己查個股資料判斷）的部分，很好奇大家在這兩個部分各佔了多少呢？","raw":null,"content":null,"categories":[],"tags":[{"name":"投資","slug":"投資","permalink":"https://www.finlab.tw/tags/投資/"},{"name":"股票","slug":"股票","permalink":"https://www.finlab.tw/tags/股票/"}]},{"title":"python上櫃資料爬蟲輕鬆做","slug":"簡單python上櫃資料爬蟲實做","date":"2018-02-10T12:22:15.000Z","updated":"2020-06-05T07:29:48.394Z","comments":true,"path":"簡單python上櫃資料爬蟲實做/","link":"","permalink":"https://www.finlab.tw/簡單python上櫃資料爬蟲實做/","excerpt":"","text":"謝謝各位的支持，有很多人寄信來問各式各樣不同的研究！但因為討論熱烈，我目前先挑比較簡單的做，其它的在清單中，依序補上～最近發現上櫃的股票也滿多人在看的，今天教大家如何用python抓取上櫃公司的收盤價！ 首先，我們只要從這個網址，把資料get下來就行了！ 爬取上櫃股價網址12345import requestslink = 'http://www.tpex.org.tw/web/stock/aftertrading/daily_close_quotes/stk_quote_download.php?l=zh-tw&amp;d=107/02/09&amp;s=0,asc,0'r = requests.get(link)r.ok 可以看到網址中，包含了日期：107/02/09，這個字樣，可以改成其它日期。get下來就是csv檔了！直接丟進pandas： 使用pandas讀取123456lines = r.text.replace('\\r', '').split('\\n')import pandas as pdfrom io import StringIOdf = pd.read_csv(StringIO(\"\\n\".join(lines[3:])), header=None)df.head() 但我發現一個小問題： 在csv檔中，第一行是：”a”,”b”,”c” 但是在其它行，則顯示：a,b,c 有沒有雙引號很重要，會讓pandas沒辦法直接讀進來，所以我們前面幾行先去除（上段code中lines[3:]） 就可以得到下圖： 但我們的index跟column都還沒設定好（都是數字），要把它轉換成有意義的label： 整理index跟columns1234df.columns = list(map(lambda l: l.replace(' ',''), lines[2].split(',')))df.index = df['代號']df = df.drop(['代號'], axis=1)df.head() 首先先來換column，裡面有些複雜的程式（第一行）慢慢講解： lambda l: l.replace(&#39; &#39;,&#39;&#39;) 是一個函式，但是我懶得命名，所以就用 lambda 賴省略函式名稱，它會讀入，這個函式讀入 l，並將l裡面的空白刪除並outpu出來。 其中的map(func, array)就指：將array裡面所有元素，都用func處理一遍。 line[2].split(&#39;,&#39;)：將字串依照 “,” 分割成好幾個小字串。 總體來說，就是將資串分割-&gt;針對每個子字串刪除空白。 另外針對index，我們就單純用df.index = df[&#39;代號&#39;]來設定，並用df.drop將原本的 column刪除，其實知道pandas有df.set_index()這個函式，但是發現存檔怪怪的，所以改用途法煉鋼（第2、3行） 這樣差不多就完成了： 那要如何把檔案存起來呢？ 我們可以利用 save file12df.to_csv('test.csv')pd.read_csv('test.csv', index_col='代號').head() 來存檔跟讀檔喔！跑出來會是一模一樣的！ 今天的簡易教學就到這邊！附件 是 jupyter notebook 檔案 可以下載下來玩玩看喔！","raw":null,"content":null,"categories":[],"tags":[{"name":"python","slug":"python","permalink":"https://www.finlab.tw/tags/python/"}]},{"title":"大跌後：用python找出強勢股！","slug":"大跌後：找出強勢股！","date":"2018-02-06T06:57:08.000Z","updated":"2020-06-05T07:29:48.285Z","comments":true,"path":"大跌後：找出強勢股！/","link":"","permalink":"https://www.finlab.tw/大跌後：找出強勢股！/","excerpt":"","text":"今天台股真的太誇張了，這波由美股帶頭的狂跌，真的很難預料，然而事情已經發生，我們能做的就是養精蓄銳，將自己的能力培養起來，等到盤勢穩定的時候，再持之以恒的投資！海浪退潮，你看的出誰穿褲子游泳，今天就帶大家來找出大跌中的強勢股～（長下影線） 災情分享我自己的持股在禮拜一開盤就清空了，因為當時美股已經倒地我可以承受少賺一個禮拜，但不想賠光好幾個月的獲利。雖然統計說開盤跟美股高連動，盤中相關性反而低，最好在盤中或盤末賣，比較不受影響，但我在法國，沒辦法看盤，所以還是開盤賣…損失了3%左右。 持之以恒投資最重要的就是持之以恒，並不是說一直持有股票，是一直持續學習！我從來都沒有推薦哪支股票，看多或看空，只推薦你不斷的學習！ 程式首先先複製今日股價爬蟲，找出今天崩壞的可憐股票們：每日爬蟲12345678910import requestsfrom io import StringIOimport pandas as pdimport numpy as npdatestr = '20180205'r = requests.post('http://www.twse.com.tw/exchangeReport/MI_INDEX?response=csv&amp;date=' + datestr + '&amp;type=ALL')df = pd.read_csv(StringIO(\"\\n\".join([i.translate(&#123;ord(c): None for c in ' '&#125;) for i in r.text.split('\\n') if len(i.split('\",')) == 17 and i[0] != '='])), header=0) 接下來做一些處裡： 設定股票名稱為index，讓每個股票可以對應到一樣的數值 將df中的字串轉換成float（有小數點的數字） 資料整理123df.index = df['證券名稱']for i,v in df.items(): df[i] = pd.to_numeric(df[i], errors='coerce') 再來，就可以用條件篩選出今天逆勢上漲的股票們！或是下影線長值得期待的股票們： 找出今天很猛的股票12strongIndex = (df['收盤價'] - df['最低價']) / (df['最高價'] - df['最低價'])strongIndex[(strongIndex &gt; 0.8) &amp; ((df['最高價'] / df['最低價'] &gt; 1.02))].sort_values(ascending=False) 結語雖然分析出了強勢股，可以持續追蹤，但別衝動。現在最重要的就是找買點了，最近有時間的話，我想分析台股大跌的歷史紀錄，找出辨別好買點指標！ 大家在投資的路上繼續努力！共勉之～","raw":null,"content":null,"categories":[{"name":"指標分析","slug":"指標分析","permalink":"https://www.finlab.tw/categories/指標分析/"},{"name":"技術面","slug":"指標分析/技術面","permalink":"https://www.finlab.tw/categories/指標分析/技術面/"}],"tags":[{"name":"選股策略","slug":"選股策略","permalink":"https://www.finlab.tw/tags/選股策略/"},{"name":"大盤","slug":"大盤","permalink":"https://www.finlab.tw/tags/大盤/"},{"name":"大跌","slug":"大跌","permalink":"https://www.finlab.tw/tags/大跌/"}]},{"title":"股票入門SOP懶人包","slug":"股票入門懶人包","date":"2018-01-28T10:00:27.000Z","updated":"2020-06-05T07:29:49.432Z","comments":true,"path":"股票入門懶人包/","link":"","permalink":"https://www.finlab.tw/股票入門懶人包/","excerpt":"","text":"大部分的人投資股票，包括我自己，常常在股票下跌時手足無措，上漲時沾沾自喜，面對這麼多檔股票無所適從，究竟要如何找到自己的投資方法，長年穩定獲利？一直都是投資人的終極目標。我們研發一套專屬投資SOP，教你如何獲利最佳化！ 初學者投資SOP我們的SOP將投資分為三個步驟，學習時期、實驗時期（模擬）、投資時期（實戰），將投資當成個人專案，好好經營，按照以下SOP，在股海茫茫中找到穩定獲利的投資模式。 1. 第一步：基礎知識建立首先身為一個初學者，得先瞭解投資人都在說什麼，先瞭解K線圖、技術指標、財報關鍵數據。各種名詞可能讓你馬上暈倒，但不用擔心，你就蜻蜓點水般看過去，不求樣樣精通，只是在腦海裡有個印象，對選股最基本的感覺就可以了！ 這階段你會參考很多不同的免費網站學習，知識不一定全部正確，甚至看一個忘一個，都沒有關係的！這個階段，只是要讓你對投資有個感覺，知道依照數據，被動的買入賣出。 為什麼要看數據被動的買賣呢，主動投資難道不好嗎？主動投資說的簡單一點，就是看很多指標、新聞，然後憑吸收的知識，與你已知的投資經驗來買賣股票，主動投資需要花比較多時間研究個股，有一些主觀投資的高手，教你數十種指標，面面俱到，但在教學上，會延伸出幾個問題： 指標這麼多，到底要用哪幾個？新聞又佔幾％呢？ 新手容易在買賣之間慌張做決定 賺錢了固然好，賠錢的話，是高手遜嗎？還是自己沒學好？分不清楚… 當然，主動投資也有很多很厲害的高手在，但是複製他們的能力很難！相反的，假如我們是被動的買賣： 依據少數指標，邏輯清晰 買賣坦然買入，不帶感情 虧錢了，當然是策略不好～直接換一個！ 這樣的方法比較適合新手，之所以強調被動的買賣股票，是因為我們希望可以機械式的操作，不要有任何感情，才能把高手的策略原封不動，複製過來！ 最近股市大好，我先來練練盤感？此期間，不要實戰買賣股票！網路上有很多無法獲利的方法，照著用真的只會賠錢，或是浪費時間，我們在下一個階段會教你如何破除這些陷阱。但請不要現在就等不急開始買賣，尤其是你覺得最近行情大好，更不可以輕舉妄動，請記住：我們是新手，而市場就是一個心裡學戰場，專門騙新手進去賠錢的！ 任務：養成閱讀理財知識的習慣要養成每天花一點投資的好習慣，聽起來累，其實不然，我們只希望你每天能花十分鐘看一篇文章：瞭解一些指標，以及如何運用，以下就是一些入門的文章，看文章時，記得把一些有趣的選股方法給存起來喔！之後會用到喔～ 財經數據雖然背後有很多複雜的邏輯！對簡單的被動投資而言，每個財務名詞就是一個數字，數字大於或小於多少，就買進賣出。如此而已。 股票是否買貴了？最應該瞭解的股價淨值比（PB）和本益比（PE）： 財報狗：用股價淨值比找出買賣點 股價淨值比有這麼神？ 用股價淨值比來判斷大盤漲跌 大盤要跌了嗎？利用企業本益比分佈來判斷！ 本益比能幫你選出優質股？ 本益成長比真的越低越好！？ 企業是否能獲利，重點盈利指標： 買股票只考慮ROE是不夠的！ EPS跟ROE哪個比較好用？ 財報狗：為什麼 ROE 不是越高越好？（甚至越高越不好！） 絕無僅有的超強指標！ 三種看月營收的進階方法！ 市值營收比-幫你找到便宜獲利股 持續營收成長的股票真的比較好嗎？有一個風險一定要小心 財報狗：用自由現金流避開地雷股 幫你衡量企業體質： 用杜邦分析加強你的選股技巧（上） 用杜邦分析加強你的選股技巧（中）總資產週轉率 用杜邦分析加強你的選股技巧（中）權益乘數 用杜邦分析加強你的選股技巧（中）淨利率 用杜邦分析加強你的選股技巧（下）回測 用自由現金流避開地雷股 買股的時機如何決定呢，看技術指標吧： 如何定義KD鈍化 坊間沒在教的RSI選股技巧 超短線上影黑密技！ 目前大多數為FinLab自己的文章，有空再補齊其它網站的文章，也請大家有好文章多多分享喔！ 好了！既然一個月過去了！相信你已經獲得了一些寶貴的知識，也養成每天碰一點投資的習慣，準備磨刀霍霍，小試伸手！ 2. 第二步：策略實驗階段（一個月到半年）這邊主要分為三個部分，就跟打桌球、網球同樣的道理，你必須先有裝備，才能上場打球！買賣股票也是一樣： 找一種你喜歡的球類（選好一個選股策略） 買一個好球拍（找到適合的選股工具） 開始訓練（用股市大富翁模擬） 有了財經知識，就可以開始建構自己的策略囉！ 任務：找到至少5種被動的選股策略這個時期有一個重要的一點，就是找到自己滿意的投資模式，假如你是新手，建議可以先利用量化策略下手，因為量化策略獨有可複製性，不論智商、不論經驗，只要照表操課就行了。然而哪裡有還不錯的量化策略呢？有一些上網看到的策略，在這邊舉例： FinLab上公開的免費的策略： 教你用財報狗巴菲特免費選股 價值股策略 14年14倍的選股策略！ 小資族也可以使用的選股法！ 回測框架介紹 腦力激盪的外資策略！ 外資大賣，反而要買！？ 要選擇適合的策略上面提供了一些策略，但不代表你一定要使用，可以隨時新增其它你覺得有可能獲利的策略！但並不是所有的策略都能使用喔！必須要滿足以下條件： 同時至少持有5檔股票以上，最好有10檔以上 最好是週期性的，例如7天、20天、60天換一次手上所有股票，不然會太累 假如不嫌累，可以找每天更換持股的策略（非常不建議XD） 先不要自創選股方法這個階段，你還是先效法別人的方法就好，因為自創的方法有非常大的風險，會把策略搞爛！根據我的經驗，一個好的策略，隨便加一個條件，都很有可能導致策略績效變差（差很多）！假如你是第一次買股票，可以就照著別人的策略跑就可以囉！網路上已經很多策略了，真的有好的策略在裡面，只怕你挑不到而已XD 找到了5個策略，就可以開始實做選股的功能了！ 任務：實做5種策略的選股功能實做策略的方式有很多種，每一種都不錯： 1）用別人的軟體又可以分成免費或是付費的，免費的好處就是不用錢，但壞處就是有些功能比較寒酸一點…。花錢買的軟體，優點是功能較多，缺點是要繳月費、年費。 2）自己寫程式！（前期很累、後期很輕鬆）你可以利用python自行打造一套選股軟體，我們finlab提供了各式各樣的教學，讓你每天可以把最新的資料爬下來，自己作分析，甚至自己追蹤個股漲跌！每天按一個鍵，自動策略策略，所需花費 0 元！當然剛開始的付出是肯定多的，並畢竟要學一門程式語言！但不用擔心，我們也提供文章引導你慢慢學習python： 財經python教學： 超簡單台股每日爬蟲教學 Python 時間序列實做！ Python 簡單158種技術指標計算 Python：利用Pandas輕鬆選股 Python 財報爬蟲 自動下單（1）用Python爬取交易記錄 利用Pandas輕鬆取得股價並回測 Python-簡單的月營收選股！ 超簡單用python抓取每月營收 用數學計算日馳何時崩盤！ Python 簡單選股和回測 讓Machine Learning幫你看財報！ 利用Machine Learning 選股新手教學 Machine Learning 表示：看季線最無用！ 用深度學習幫你解析K線圖！ 不論你是用免費、付費、或是python，都要達到在1分鐘內找出當天的股票清單 既然我們已經能夠選出股票清單，就可以開始利用虛擬大富翁，檢測5種測略是否獲利。 任務：股市大富翁模擬這5種選股策略這個階段，就開始真正選股並模擬操作，離實戰不遠了！也恭喜你一路堅持，這個步驟非常重要！在股市大富翁裡面，你會得到虛擬的帳戶，並且有虛擬的金錢來投資股票，開5個虛擬帳戶，並且依照5種策略分別選股，並且分別監控獲利狀況！聽起來是一件非常累人的差事，其實五個策略一個小時以內就能設定完成！只要你的策略買賣頻率低一點，不會太辛苦的。 你也可以利用python取代股市大富翁的功能，程式碼也還算簡單！這樣就能達到每天按一個鍵，自動模擬並追蹤策略的績效了！但我們先從股市大富翁講起： 我沒辦法在股市大富翁開那麼多帳戶？不用擔心，你真正的帳戶只需要一個，因為大富翁遊戲裡的虛擬子帳戶，是可以同時開很多個的！把每個帳戶的初始金額，設定在你自己投資的金額上，將五個虛擬帳戶重新命名，就可以開始玩囉！ 同時監控5個策略也太累了吧！假如你覺得很累，那可能有以下幾點原因，你誤解了我們的遊戲規則： 策略買賣頻率太高了：最好要降低一點，假如你20天換一次持股，代表三個禮拜只需要一天換股就好了，很輕鬆的 你用主觀的方式篩選股票：假如你是股票的新手，請不用做這件事情，短時間或許讓你獲利，但十有八九長期績效會輸給策略，我自己就曾經犯過這樣的錯，浪費好多時間斟酌，還拖累了原本的策略。 天生就是懶：那你非適合學python，目前我手上有18個股票策略每天更新，自動監測獲利狀況，也不用管策略買賣頻率到底高不高，每天都只按一個鍵！ 請持續約60天以上的模擬，並且與大盤比較績效，當然你有心力，還可以增加策略數，別人用金錢測試繳交學費，你用的是股市大富翁模擬，學費0元！別人一次測試一個策略，你一次就測了五個，快速累積經驗！ 第三步：真槍實彈上場恭喜你至少有了5種策略，並且對它們有深刻的瞭解，可以根據最近的績效，選擇1～2個策略，真槍實彈上戰場！ 任務：選1～2個策略上戰場吧！要怎麼選呢？首先你得看策略的風險是不是你可以承受的，先說在前，由於大部分的策略可能是做多，金融海嘯時無可避免的會很慘（可能有30%以上的財產損失），所以應該要預留一些資金，等金融海嘯結束時，再進場投資便宜股。或許你想問，既然金融海嘯跌這麼慘，那為什麼還要投資呢？因為長期來說，擁有一個好策略，能獲利的機會滿大的！ 是否選擇獲利高的策略越好？還有很多面向可以考慮，例如sharp、最大跌幅、波動率…等等，但由於五種策略的實驗時間很短，用這麼多指標來量化績效有沒有必要，也有待商榷。簡單來說，就選擇績效筆直向上的策略，就可以了！記得跟大盤的報酬率比較一下，看看你的策略是否大於大盤的策略，例如考慮近60天，我有11個策略勝大盤，7個輸大盤，最高的報酬率是17％，最低的是-4％，同期大盤2.5％。 如何分配每檔股票花多少錢？剛開始一定是平均分散的概念，將金額等分給每支持有的股票，當然有時候金額會不夠，這時你可以摒棄價格太高的股票，再平均分配。等你熟練之後，可以再依照額外的選股指標調整比例。 任務：監測你的策略上線之後，依照你的策略更新持股的頻率，監測它的報酬率，假如近期報酬大於0則很好，要是虧損，也不必太擔心，可以在上線策略前，先寫好萬一虧損的方針： 防止策略大跌：設定止損點對於那些上線的策略，你可以設定一個門檻，例如10%，假如策略近期（例如：60天）跌幅超越了10%，則立即終止運作。另外，其實每個策略在大盤不好的時候，都會有嚴重的虧損。另一種風險控管，是把策略跟大盤做比較，近期內虧損比大盤嚴重則停止使用。 發現更好的策略：替換方式假如你發現其它模擬的策略，有些跑得比上線的策略還好很多，可以非常緩慢的把策略1慢慢更新成策略2。為什麼要緩慢的移動，不能一次到位呢？因為就算我們已經有好策略，還是有可能高買低賣，緩慢的更新讓你有充裕的時間分析自己的決策是否正確，讓你有臨陣回頭的餘地。 什麼叫做慢慢更新呢？例如你有100％的投資金額，正在用策略1，想換成策略2，則可以先設定成60％，40％的比重。然後每個月或每週，參考績效撥10%給另一個策略。 別忘了只顧著你上線的策略，模擬的策略也要記得顧喔！ 任務：繼續模擬策略這個時期，就算有些策略沒有上線，還是要繼續模擬喔！因為或許某個策略只是最近較差，說不定哪天會噴高。你可以把模擬當做事練兵的感覺，強將手下無落兵，必須偶爾練練兵，甚至要增加新兵（新策略），並汰弱留強。依照自己的能力，手上至少保持5個策略在模擬。 假如你是用python選股，那更好，可以自動模擬選股，並把績效存起來！我手上的18支策略每天都會自動更新，也不用我去管它，只要最後看它們績效，決定用哪支就好了！這也是學python最大的好處之一喔！ 不要隨意更動策略在設定SOP時，你可能覺得止損點-10％還可以承受，但碰到實戰，往往跌了5%就快受不了了，這時候，就是深呼吸沉住氣，策略還沒跌到停損點，不要直接替換策略，因為你很有可能會賣在策略的低點喔！稍微耐心點，跌到止損點前，就祈禱它慢慢補回來吧！ 結語：不斷進化的SOP現在就把這個SOP加入最愛吧！我們會依照大家的建議不斷更新此SOP喔！這個SOP的三步驟，其中的步驟一跟二，我自己親身經歷，覺得學到很多東西，投資功力大增！推薦給大家，讓大家用很短暫的時間，超越大部分的投資新手，然而第三步驟，也是我還在嘗試的階段，不敢說寫到最好，但力求完善，之後隨著我的見識更廣，會慢慢將SOP越修越好！不知道大家對這個SOP有什麼看法？會不會覺得太難，在下面留言，讓這個SOP變得更好吧！","raw":null,"content":null,"categories":[],"tags":[{"name":"如何買股票","slug":"如何買股票","permalink":"https://www.finlab.tw/tags/如何買股票/"},{"name":"入門教學","slug":"入門教學","permalink":"https://www.finlab.tw/tags/入門教學/"}]},{"title":"用深度學習幫你解析K線圖！","slug":"用深度學習幫你解析K線圖！","date":"2018-01-23T12:50:05.000Z","updated":"2020-06-05T07:29:48.390Z","comments":true,"path":"用深度學習幫你解析K線圖！/","link":"","permalink":"https://www.finlab.tw/用深度學習幫你解析K線圖！/","excerpt":"","text":"現今在股市裡有三大分析方法，即：技術面、基本面、籌碼面等，而各流派似乎也都有自己能自圓其說的選股策略。這三種方法並無法直接說出孰好孰壞，分析方法的選擇跟操作者的心態、個性、紀律都有很大的關係。而我個人覺得買股票除了要買得好（投報率高）以外，賣得快（IRR高）也是很重要的，畢竟投報率會因為時間的流逝而漸漸下降。 因為重視時間對股價影響的我，日K線裡藏有的奧妙便是我想一探究竟的。K線型態學主要就是在探討每根K棒的開盤價、收盤價、最高價、最低價、以及成交量這五大要素所反映出多空雙方的心理交戰。日本著名的投資大師本間宗久影響後人而產生一系列「酒田戰法」的相關書籍裡頭便對K線型態學有了不少篇幅的評析。但人心是會變的，K線型態也是。有沒有方法能幫助我們解讀每天數百張詭譎多變的K線圖呢？ 長短期記憶 (Long Short-Term Memory, LSTM) 神經網路長短期記憶 (LSTM) 神經網路屬於循環神經網路 (RNN) 的一種，特別適合處理和預測與時間序列相關的重要事件。以下面的句子做為一個上下文推測的例子： “我從小在法國長大，我會說一口流利的？？” 由於同一句話裡前面提及到法國這個國家，且後面提到說這個動作。因此，LSTM便能從法國以及說這兩個長短期的記憶中重要的訊號推測出可能性較大的法文這個結果。 K線圖也述說著類似的事情，股價是隨著時間的流動及重要訊號的出現而做出反應的： 在價穩量縮的盤整區間中突然出現一帶量突破的大紅K，表示股價可能要上漲了 在跳空缺口後出現島狀反轉，表示股價可能要下跌了 在連漲幾天的走勢突然出現帶有長上下影線的十字線，表示股價有反轉的可能 LSTM 要做的事情就是找出一段時間區間的K棒當中有沒有重要訊號（如帶量紅K）並學習之後股價的走勢。 LSTM 實作股價預測資料是以鴻海(2317)從2013年初到2017年底每天的開盤價、收盤價、最高價、最低價、以及成交量等數據，如果你對這筆資料有興趣請參考附註的方式索取。 首先將資料讀入並存至pandas的DataFrame，另外對可能有N/A的row進行剔除： 資料讀入1234import pandas as pdfoxconndf= pd.read_csv('./foxconn_2013-2017.csv', index_col=0 )foxconndf.dropna(how='any',inplace=True) 為了避免原始數據太大或是太小沒有統一的範圍而導致 LSTM 在訓練時難以收斂，我們以一個最小最大零一正規化方法對數據做正規化： 資料正規化123456789101112131415from sklearn import preprocessingdef normalize(df): newdf= df.copy() min_max_scaler = preprocessing.MinMaxScaler() newdf['open'] = min_max_scaler.fit_transform(df.open.values.reshape(-1,1)) newdf['low'] = min_max_scaler.fit_transform(df.low.values.reshape(-1,1)) newdf['high'] = min_max_scaler.fit_transform(df.high.values.reshape(-1,1)) newdf['volume'] = min_max_scaler.fit_transform(df.volume.values.reshape(-1,1)) newdf['close'] = min_max_scaler.fit_transform(df.close.values.reshape(-1,1)) return newdffoxconndf_norm= normalize(foxconndf) 然後對資料進行訓練集與測試集的切割，另外也定義每一筆資料要有多長的時間框架： 資料編輯123456789101112131415161718192021222324252627282930313233import numpy as npdef data_helper(df, time_frame): # 資料維度: 開盤價、收盤價、最高價、最低價、成交量, 5維 number_features = len(df.columns) # 將dataframe 轉成 numpy array datavalue = df.as_matrix() result = [] # 若想要觀察的 time_frame 為20天, 需要多加一天做為驗證答案 for index in range( len(datavalue) - (time_frame+1) ): # 從 datavalue 的第0個跑到倒數第 time_frame+1 個 result.append(datavalue[index: index + (time_frame+1) ]) # 逐筆取出 time_frame+1 個K棒數值做為一筆 instance result = np.array(result) number_train = round(0.9 * result.shape[0]) # 取 result 的前90% instance做為訓練資料 x_train = result[:int(number_train), :-1] # 訓練資料中, 只取每一個 time_frame 中除了最後一筆的所有資料做為feature y_train = result[:int(number_train), -1][:,-1] # 訓練資料中, 取每一個 time_frame 中最後一筆資料的最後一個數值(收盤價)做為答案 # 測試資料 x_test = result[int(number_train):, :-1] y_test = result[int(number_train):, -1][:,-1] # 將資料組成變好看一點 x_train = np.reshape(x_train, (x_train.shape[0], x_train.shape[1], number_features)) x_test = np.reshape(x_test, (x_test.shape[0], x_test.shape[1], number_features)) return [x_train, y_train, x_test, y_test]# 以20天為一區間進行股價預測X_train, y_train, X_test, y_test = data_helper(foxconndf_norm, 20) 我們以 Keras 框架做為 LSTM 的實作選擇，首先在面前加了兩層 256個神經元的 LSTM layer，並都加上了Dropout層來防止資料過度擬合（overfitting）。最後再加上兩層有不同數目神經元的全連結層來得到只有1維數值的輸出結果，也就是預測股價： Keras 模型建立123456789101112131415161718192021222324from keras.models import Sequentialfrom keras.layers.core import Dense, Dropout, Activationfrom keras.layers.recurrent import LSTMimport kerasdef build_model(input_length, input_dim): d = 0.3 model = Sequential() model.add(LSTM(256, input_shape=(input_length, input_dim), return_sequences=True)) model.add(Dropout(d)) model.add(LSTM(256, input_shape=(input_length, input_dim), return_sequences=False)) model.add(Dropout(d)) model.add(Dense(16,kernel_initializer=\"uniform\",activation='relu')) model.add(Dense(1,kernel_initializer=\"uniform\",activation='linear')) model.compile(loss='mse',optimizer='adam', metrics=['accuracy']) return model# 20天、5維model = build_model( 20, 5 ) 建立好 LSTM 模型後，我們就用前面編輯好的訓練資料集開始進行模型的訓練： LSTM 模型訓練12# 一個batch有128個instance，總共跑50個迭代model.fit( X_train, y_train, batch_size=128, epochs=50, validation_split=0.1, verbose=1) 在經過一段時間的訓練過程後，我們便能得到 LSTM 模型（model）。接著再用這個模型對測試資料進行預測，以及將預測出來的數值（pred）與正確答案（y_test）還原回原始股價的大小區間： LSTM 模型預測股價及還原數值12345678910111213141516def denormalize(df, norm_value): original_value = df['close'].values.reshape(-1,1) norm_value = norm_value.reshape(-1,1) min_max_scaler = preprocessing.MinMaxScaler() min_max_scaler.fit_transform(original_value) denorm_value = min_max_scaler.inverse_transform(norm_value) return denorm_value# 用訓練好的 LSTM 模型對測試資料集進行預測pred = model.predict(X_test)# 將預測值與正確答案還原回原來的區間值denorm_pred = denormalize(foxconndf, pred)denorm_ytest = denormalize(foxconndf, y_test) LSTM 預測股價結果讓我們把還原後的數值與答案畫出來，看看效果如何： LSTM 預測股價結果1234567import matplotlib.pyplot as plt%matplotlib inline plt.plot(denorm_pred,color='red', label='Prediction')plt.plot(denorm_ytest,color='blue', label='Answer')plt.legend(loc='best')plt.show() 如下圖，藍線是正確答案、紅線是預測股價。雖然整體看起來預測股價與正確答案有類似的走勢，但仔細一看預測股價都比正確答案落後了幾天。如果真的將這個模型應用在買賣策略上我們應該很快就畢業了。 所以我們試著來調整一些設定： 時間框架長度的調整 Keras 模型裡全連結層的 activation 與 optimizaer 的調整 Keras 模型用不同的神經網路（種類、順序、數量）來組合 batch_size 的調整、epochs 的調整 … 經過我們對上述的幾個參數稍微調整過後，我們就得到一個更貼近正確答案的預測結果囉。如果你發現哪些設置能得到更好的結果歡迎你在下面留言跟大家分享。 參考資料 詳細的python教學：利用Machine-Learning-選股新手教學 Keras 說明文件：Keras Documentation 另一種 RNN：GRU, Gated Recurrent Unit Kaggle 相關競賽：New York Stock Exchange 附註：現在就開始AI選股，免費取得訓練資料取得訓練資料的方法很簡單，幫冷清的寒舍小小宣傳一下： 按右下角分享這篇文章到你的FB 將分享截圖傳到 finlabstaff@gmail.com 一兩天內即可獲得原始資料喔！","raw":null,"content":null,"categories":[{"name":"AI看股票","slug":"AI看股票","permalink":"https://www.finlab.tw/categories/AI看股票/"}],"tags":[{"name":"python","slug":"python","permalink":"https://www.finlab.tw/tags/python/"},{"name":"程式交易","slug":"程式交易","permalink":"https://www.finlab.tw/tags/程式交易/"},{"name":"型態學","slug":"型態學","permalink":"https://www.finlab.tw/tags/型態學/"},{"name":"Deep-Learning","slug":"Deep-Learning","permalink":"https://www.finlab.tw/tags/Deep-Learning/"},{"name":"深度學習","slug":"深度學習","permalink":"https://www.finlab.tw/tags/深度學習/"},{"name":"K線圖","slug":"K線圖","permalink":"https://www.finlab.tw/tags/K線圖/"},{"name":"K棒","slug":"K棒","permalink":"https://www.finlab.tw/tags/K棒/"},{"name":"Candlesticks","slug":"Candlesticks","permalink":"https://www.finlab.tw/tags/Candlesticks/"},{"name":"LSTM","slug":"LSTM","permalink":"https://www.finlab.tw/tags/LSTM/"}]},{"title":"Python-月營收這樣看！三種月營收選股法！","slug":"Python-簡單用月營收選股！","date":"2018-01-22T07:10:47.000Z","updated":"2020-06-11T05:07:10.912Z","comments":true,"path":"Python-簡單用月營收選股！/","link":"","permalink":"https://www.finlab.tw/Python-簡單用月營收選股！/","excerpt":"","text":"月營收的資訊是跟股價成高度相關，月營收好的股票比較容易漲，反之容易跌，被列為財報狗的付費功能之一。今天教大家如何用python免費使用此功能！這篇是完整的範例，教你如何下載月營收，過濾出可能會飆漲的股票。這個條件我很常用，效果也不錯，分享給大家！ 下載近12個月的月報之前我們也講過如何獲取月營收的歷史資訊 請先到該網站把monthly_report給copy下來，我們接下來會用到喔！ monthly_report這個函式，會下載上市公司月報，並整理成pandas.DataFrame，也就是一種存在python中的表格。接下來我們連續呼叫monthly_report來把近12個月的資料收集整齊： 獲取近12個月的資料12345678910111213141516171819202122232425262728import datetimeimport pandas as pdimport timedata = &#123;&#125;n_days = 12now = datetime.datetime.now()year = now.yearmonth = now.monthwhile len(data) &lt; n_days: print('parsing', year, month) # 使用 crawPrice 爬資料 try: data['%d-%d-01'%(year, month)] = monthly_report(year, month) except Exception as e: print('get 404, please check if the revenues are not revealed') # 減一個月 month -= 1 if month == 0: month = 12 year -= 1 time.sleep(10) 執行的時候，有一行error，因為新的月報還沒有下來的原因，而其它天都是成功的，這樣都算是正常！ 以上這段code請大家一定要看的懂喔！我們要的只有 data 這個 dictionary 物件，裡面依照不同的日期，存放著所有股票的月營收。例如，你可以顯示data[&#39;2017-12-01&#39;]，就會顯示以下這張表： 代表 2017 年 12 月的月營收。 數據處理 - 合成時間序列根據不同的日期，有不同的dataFrame，用起來有點麻煩，所以我們再經過一個處理，將所有數據結合，變成時間序列： 數據處理─結合月營收資訊123456for k in data.keys(): data[k].index = data[k]['公司代號'] df = pd.DataFrame(&#123;k:df['當月營收'] for k, df in data.items()&#125;).transpose()df.index = pd.to_datetime(df.index)df = df.sort_index() 最後產出的 df 可以囉！df 的結構如下： 這個 df 超級好用，以下示範畫出 1101（台泥） 的月營收曲線圖： 還有他的MOM： 各種變化就讓大家自己去玩囉～這邊還是得著重在選股的功能上！ 開始選股首先，大家可以參考最近寫的，三種月營收進階看法，裡面的選股條件，接下來會一一實做： 平均線法平均線法選股12method1 = df.iloc[-3:].mean() &gt; df.iloc[-12:].mean()method1[method1 == True].index 噹啷！就這麼一行，選出來了，會有非常多的標的，還可以再進行過濾。這邊有一些厲害的 function 提一下： iloc[i:j] 選取第i個到第j個數據 mean() 選處取出來的series的平均 成長法成長法選股123method2 = df.rolling(4, min_periods=2).mean()method2 = (method2 &gt; method2.shift()).iloc[-5:].sum()method2[method2 == 5] 第一行首先是平滑，做出平均序列，其中min_periods=2 代表只要有兩筆數據以上，就計算平均，不然就寫成NaN。第二、三行是說這條平滑曲線，近五個月都是上升 創新高法創新高法選股12method3 = df.iloc[-1] == df.iloc[-12:].max()method3[method3 == True].index 使用方法可以將各種的條件再做組合，例如用股價淨值比，或是 ROE，實測都有不錯的效果喔！","raw":null,"content":null,"categories":[{"name":"財經Python教學","slug":"財經Python教學","permalink":"https://www.finlab.tw/categories/財經Python教學/"}],"tags":[{"name":"python","slug":"python","permalink":"https://www.finlab.tw/tags/python/"},{"name":"程式交易","slug":"程式交易","permalink":"https://www.finlab.tw/tags/程式交易/"},{"name":"月營收","slug":"月營收","permalink":"https://www.finlab.tw/tags/月營收/"}]},{"title":"三種看月營收的進階方法！","slug":"三種月營收進階看法","date":"2018-01-17T16:27:48.000Z","updated":"2020-06-05T07:29:51.528Z","comments":true,"path":"三種月營收進階看法/","link":"","permalink":"https://www.finlab.tw/三種月營收進階看法/","excerpt":"","text":"說到台股基本面，就不得不提更新最快的月營收，每個月更新一次，讓投資人措手不及，今天就來教你怎麼看月營收！並比較這三種方法的獲利～ 1. 均線法好像是財報狗的收費功能，其實還滿簡單計算的！ 當近三個月營收平均 &gt; 近一年月營收平均 代表公司最近一季表現比較好，可能會有較亮眼的財報！但可能會有一些怪異的營建股，月營收突然暴增被選進來。 2. 突破法這個是看Cmoney找到的，創新高的月營收容易被炒作，獲利效果還不錯，我發現24個月創新高最有用！ 創過去24個月創新高 3. 成長法這個是我自己研發的指標，其實我在之前有講過，計算稍微複雜一點： 當我們要平滑月營收曲線時，取最近的 M 個值平均，產生新的曲線 新的曲線連續 N 個月不斷變高。 主要是利用連續N個月，不斷成長的概念！ 最後還有MOM、QOQ、YOY這些就是比較傳統一點的指標： MOM 這個月跟上個月比較 QOQ 當前一季跟前季比（三個月加總） YOY 當月跟去年同月相比 以下就是所有方法的回測，我們任意選擇一天觀察當月的指標，將符合條件的股票納入監測（假設平均買入），並在60天後賣出並選擇新的股票，每60天一次循環，以下是績效： 在這場大亂鬥中，從爛到優慢慢分析： 傳統指標普遍效果較差這三個指標，假如值為正就買入。MOM 自然是最遜的指標，但也不能怪它，畢竟他只用了最近兩個月的數據QOQ、YOY 表現比較好，但畢竟是傳統一點的指標，效果較差，但比MOM好很多了！ 因為我是大於零就買入，所以可能效果比較不好，之後有機會再研究看看。 第三名：均線法（average）首先我們看到財報狗付費策略裡面，收錄的均線法（average），我們發現這個方法還不賴，每個月選到的股票大部分都在400檔以上，過年的二月也有一兩百檔，算是個很平穩的策略 第二名：突破法（break through）老實說突破法大部分的時間都輸給均線法，唯獨2015年中，壓注在單一檔股票（只有一檔符合條件），而該股票剛好是飆股，於是瞬間超越多數方法，然而非常不推薦一般選股使用。 第一名：我發明的成長法（increase）最後我的成長法小勝一籌，原因是它選出的股票，獲利成長都常常很驚人（單看月營收的話）！但選出來的股票比較少，平常有一兩百檔，有時候只有數十檔，成長法的原理我在那篇文章 有講過，有興趣可以看一看喔！ 選股參考：均線法均線法找出的股票數量比較多，每六檔股票裡面就有一檔，適合當選股的輔助判斷，每當你看某檔股票時，偶爾用均線法判斷一下。 積極選股：成長法成長法找出的股票數量比較少，過濾了太多的股票（然而改變參數也是可以的），所以比較適合積極型選股，從中再挑選較好的股票。 均線法跟成長法這兩個方法找出來的股票比較穩定，第二名的突破法有點像是賽到XDD，以後選股大可以參考這兩個指標，作為買賣參考依據！近日我會針對這兩個指標教大家實做！有興趣記得要關注這個部落格喔！ 大家還知道月營收可以變出什麼有趣的指標嗎？可以分享給我喔！幫你測測看～","raw":null,"content":null,"categories":[{"name":"指標分析","slug":"指標分析","permalink":"https://www.finlab.tw/categories/指標分析/"},{"name":"基本面","slug":"指標分析/基本面","permalink":"https://www.finlab.tw/categories/指標分析/基本面/"}],"tags":[{"name":"如何買股票","slug":"如何買股票","permalink":"https://www.finlab.tw/tags/如何買股票/"},{"name":"月營收","slug":"月營收","permalink":"https://www.finlab.tw/tags/月營收/"}]},{"title":"用數學計算日馳何時崩盤！","slug":"用數學計算日馳何時崩盤！","date":"2018-01-10T08:18:47.000Z","updated":"2020-06-05T07:29:50.573Z","comments":true,"path":"用數學計算日馳何時崩盤！/","link":"","permalink":"https://www.finlab.tw/用數學計算日馳何時崩盤！/","excerpt":"","text":"目前我持有日馳的股票，前段時間噴高高，但最近不停漲停！跌停！搞的我心力交瘁。於是今天決定用一個數學模型來預測可能的崩盤時機。LPPL是我之前在ricequant看到的泡沫預測模型，對於那些極右側交易者（追漲）滿有幫助的，然而這個模型只考慮股價，不考慮財報、月報等，所以比較適合用在大盤，個股可能比較沒辦法。但我還是很想知道日馳是否要崩盤了！？XD 預防針這邊還是要提醒大家，這個只是個有趣的小實驗，但我真的不確定這個很可靠，請不要依賴LPPL買賣股票，可以當作一個參考，追蹤一下日馳的股價是否跟LPPL模型顯示的一樣。我個人是持非常懷疑的態度！請大家不要因為這篇文章來決定要不要買日馳。說不定明天就崩到底給你看XDD。 LPPL該網站都已經寫的滿清楚的，我就不多加贅述，雖然你第一次看可能會不太懂，可以先看以下的補充說明：一些關於model（模型）的觀念： model就是一個數學模型，由一或多個數學公式組成，可以拿來預測天氣、預測人口成長率、預測各種東西，是個很強大的東西！ LPPL就是一個數學震盪公式： y(t)=LPPL(t,tcrash,x)y(t) = LPPL(t, t^\\text{crash}, x)y(t)=LPPL(t,t​crash​​,x) 當中的一些變數： y(t)y(t)y(t)：模擬的股價 1. ttt：就是指每天的日期 tcrasht^\\text{crash}t​crash​​：崩盤的日期 3. xxx：其它一些比較不重要的參數 我們的目標就是調整 tcrasht^\\text{crash}t​crash​​ 和 xxx 的值，讓模擬的股價 y(t)y(t)y(t) 可以對應到某支股票的實際股價 ym(t)y^m(t)y​m​​(t)，就可以了。通常我們會用以下的方法對應到一個股價： mintcrash,x∣y(t)−ym(t)∣2\\min_{ t^\\text{crash}, x}\\left|y(t)-y^{m}(t)\\right|^{2}​t​crash​​,x​min​​∣y(t)−y​m​​(t)∣​2​​ 這個步驟就是調整參數，讓股價跟模型預測的股價趨近一樣，通常也可以稱為最佳化！於是，我們就有了 tcrasht^\\text{crash}t​crash​​ 的值，也就可以預測崩盤的時機了！ 接下來可以參考網站中的介紹，看一下LPPL的預測能力。 以下示範日馳給大家看： 取得日馳股價首先我們用 pandas 中的 datareader，取得日馳的股價 取得股價12345678from pandas_datareader import data # pip install pandas_datareaderimport matplotlib.pyplot as plt # pip install matplotlibimport pandas as pd # pip install pandas%matplotlib inlinedata = data.DataReader(\"1526.tw\", \"yahoo\", \"2017-04-01\",\"2018-01-10\")c = data['Close']c.plot() 最佳化接下來，將網站中的LPPL複製過來，並且將日馳的股價 data.Close assign給 sz 這個變數。 這段code是在計算最佳參數，我沒有仔細閱讀code。有時寫程式就要學會複製貼上，可以用，就好了，對我們來說這不是科學問題，而是工程問題XD。 LPPL模型分析123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189import numpy as npimport matplotlib.pyplot as pltfrom scipy.optimize import fmin_tncimport randomimport pandas as pdfrom pandas import Series, DataFrameimport datetimeimport itertoolssz = data.Closedate = sz.indextime = np.linspace(0, len(sz)-1, len(sz))close = np.array(np.log(sz))DataSeries = [time, close]def lppl (t,x): #return fitting result using LPPL parameters a = x[0] b = x[1] tc = x[2] m = x[3] c = x[4] w = x[5] phi = x[6] return a + (b*np.power(tc - t, m))*(1 + (c*np.cos((w *np.log(tc-t))+phi)))def func(x): delta = [lppl(t,x) for t in DataSeries[0]] delta = np.subtract(delta, DataSeries[1]) delta = np.power(delta, 2) return np.sum(delta)class Individual: \"\"\"base class for individuals\"\"\" def __init__ (self, InitValues): self.fit = 0 self.cof = InitValues def fitness(self): try: cofs, nfeval, rc = fmin_tnc(func, self.cof, fprime=None,approx_grad=True, messages=0) self.fit = func(cofs) self.cof = cofs except: #does not converge return False def mate(self, partner): reply = [] for i in range(0, len(self.cof)): if (random.randint(0,1) == 1): reply.append(self.cof[i]) else: reply.append(partner.cof[i]) return Individual(reply) def mutate(self): for i in range(0, len(self.cof)-1): if (random.randint(0,len(self.cof)) &lt;= 2): self.cof[i] += random.choice([-1,1]) * .05 * i def PrintIndividual(self): #t, a, b, tc, m, c, w, phi cofs = \"A: \" + str(round(self.cof[0], 3)) cofs += \"B: \" + str(round(self.cof[1],3)) cofs += \"Critical Time: \" + str(round(self.cof[2], 3)) cofs += \"m: \" + str(round(self.cof[3], 3)) cofs += \"c: \" + str(round(self.cof[4], 3)) cofs += \"omega: \" + str(round(self.cof[5], 3)) cofs += \"phi: \" + str(round(self.cof[6], 3)) return \"fitness: \" + str(self.fit) +\"\\n\" + cofs def getDataSeries(self): return DataSeries def getExpData(self): return [lppl(t,self.cof) for t in DataSeries[0]] def getTradeDate(self): return datedef fitFunc(t, a, b, tc, m, c, w, phi): return a - (b*np.power(tc - t, m))*(1 + (c*np.cos((w *np.log(tc-t))+phi)))class Population: \"\"\"base class for a population\"\"\" LOOP_MAX = 1000 def __init__ (self, limits, size, eliminate, mate, probmutate, vsize): 'seeds the population' 'limits is a tuple holding the lower and upper limits of the cofs' 'size is the size of the seed population' self.populous = [] self.eliminate = eliminate self.size = size self.mate = mate self.probmutate = probmutate self.fitness = [] for i in range(size): SeedCofs = [random.uniform(a[0], a[1]) for a in limits] self.populous.append(Individual(SeedCofs)) def PopulationPrint(self): for x in self.populous: print(x.cof) def SetFitness(self): self.fitness = [x.fit for x in self.populous] def FitnessStats(self): #returns an array with high, low, mean return [np.amax(self.fitness), np.amin(self.fitness), np.mean(self.fitness)] def Fitness(self): counter = 0 false = 0 for individual in list(self.populous): print('Fitness Evaluating: ' + str(counter) + \" of \" + str(len(self.populous)) + \" \\r\"), state = individual.fitness() counter += 1 if ((state == False)): false += 1 self.populous.remove(individual) self.SetFitness() print(\"\\n fitness out size: \" + str(len(self.populous)) + \" \" + str(false)) def Eliminate(self): a = len(self.populous) self.populous.sort(key=lambda ind: ind.fit) while (len(self.populous) &gt; self.size * self.eliminate): self.populous.pop() print(\"Eliminate: \" + str(a- len(self.populous))) def Mate(self): counter = 0 while (len(self.populous) &lt;= self.mate * self.size): counter += 1 i = self.populous[random.randint(0, len(self.populous)-1)] j = self.populous[random.randint(0, len(self.populous)-1)] diff = abs(i.fit-j.fit) if (diff &lt; random.uniform(np.amin(self.fitness), np.amax(self.fitness) - np.amin(self.fitness))): self.populous.append(i.mate(j)) if (counter &gt; Population.LOOP_MAX): print(\"loop broken: mate\") while (len(self.populous) &lt;= self.mate * self.size): i = self.populous[random.randint(0, len(self.populous)-1)] j = self.populous[random.randint(0, len(self.populous)-1)] self.populous.append(i.mate(j)) print(\"Mate Loop complete: \" + str(counter)) def Mutate(self): counter = 0 for ind in self.populous: if (random.uniform(0, 1) &lt; self.probmutate): ind.mutate() ind.fitness() counter +=1 print(\"Mutate: \" + str(counter)) self.SetFitness() def BestSolutions(self, num): reply = [] self.populous.sort(key=lambda ind: ind.fit) for i in range(num): reply.append(self.populous[i]) return reply; random.seed()from matplotlib import pyplot as pltimport datetimeimport numpy as npimport pandas as pdimport seaborn as snssns.set_style('white')limits = ([8.4, 8.8], [-1, -0.1], [350, 400], [.1,.9], [-1,1], [12,18], [0, 2*np.pi])x = Population(limits, 20, 0.3, 1.5, .05, 4)for i in range (2): x.Fitness() x.Eliminate() x.Mate() x.Mutate() x.Fitness() values = x.BestSolutions(3)for x in values: print (x.PrintIndividual()) 別懷疑，就給它跑下去就對了，我也沒仔細看就跑了，需要跑一段時間。跑完後應該會得到下圖： 可以看到這段代碼總共做了3次預測，以防算出來不準，其中的 critical time 就是指崩盤日期，約在380天左右，而我們總共測了200天，所以距離今天（2018-01-10），大概還需要 380 - 200 = 180 個交易日，才會有毀滅性的崩盤。 最後畫出圖，我也是複製貼上： 畫圖123data = pd.DataFrame(&#123;'Date':values[0].getDataSeries()[0],'Index':values[0].getDataSeries()[1],'Fit1':values[0].getExpData(),'Fit2':values[1].getExpData(),'Fit3':values[2].getExpData()&#125;)data = data.set_index('Date')data.plot(figsize=(14,8)) 結論LPPL這個模型看看就好，財報、月報也很重要，依照這個程式的結果，日馳距離泡沫崩盤還要很久，但千萬別因為這樣就買入，畢竟股票有太多要考量的因素了，大戶的脾氣不是數學模型可以模擬的XDDDDDDD…。","raw":null,"content":null,"categories":[{"name":"財經Python教學","slug":"財經Python教學","permalink":"https://www.finlab.tw/categories/財經Python教學/"}],"tags":[{"name":"python","slug":"python","permalink":"https://www.finlab.tw/tags/python/"},{"name":"程式交易","slug":"程式交易","permalink":"https://www.finlab.tw/tags/程式交易/"}]},{"title":"自動下單（1）用Python爬取交易記錄","slug":"用python獲取持股損益表","date":"2018-01-08T07:07:16.000Z","updated":"2020-06-05T07:29:49.018Z","comments":true,"path":"用python獲取持股損益表/","link":"","permalink":"https://www.finlab.tw/用python獲取持股損益表/","excerpt":"","text":"量化投資原來分為以下兩個步驟： 用數學模型，運算出買賣股票清單 清單自動與看盤軟體對接，實現自動買賣 今天就教你怎麼將自己的帳戶與python做連接，讓電腦得知你實際持股的部位。 打開券商看盤軟體（網站）首先，我們針對新光證券來進行對接，其它證券的朋友就不好意思了，我只有新光XDD，但每一家的網站設計不會差太多，可以舉一反三，做出其它證券的對接系統。 雖然我是新光的用戶，但新光的網站真的很瞎！介面老舊不說，每天早上9點開盤必當機…好在我都是直接下開盤漲停買入，我是可憐窮散戶金額小所以沒差XDD。 打開網頁，監控network接下來我們要來查看登入機制是如何運作的，知道了內部的機制，才能用python來模擬登入的動作喔！ 用無痕視窗登入頁面 對著網頁任何一處按右鍵，選擇inspect（中文忘記是什麼了，反正就是最下方那個XD） 選擇network（一樣請自己對照中文） 做完這三步驟你應該會看到以下節圖： 這個 Network 列表是做什麼的？network這個列表，最主要就是會紀錄網頁所用到的 get 跟 post 的請求，什麼是 get 跟 post 呢？籠統的說，這些就是你的瀏覽器跟網站主機互動時的通信方式，平常瀏覽網頁，將網頁從網路上下載到瀏覽器中，這個動作通常是用get，而隱私性比較高的（登入、修改網路上的資料），就會用 post。 輸入你的帳號密碼按下登入，你會看到network的列表出現了很多東西，大部分的都不重要，請點選其中的 Login.aspx，裡面紀錄著用來登入的通訊過程。 你應該會看到以上的節圖，裡面有些重要的資訊，我們先把登入當作是一封寫給新光主機的信，上圖中包含了幾個重要的資訊： 信寄到：https://w.sk88.com.tw/Cross/Pc/Login.aspx 這個地方 這是一個 POST request server 回覆代號是 302 （通常是2XX、或3XX。4XX、5XX代表有問題） 查看 Request 內容目前知道的訊息有：信的種類為 post，而地址也有了。但信中的內容要寫什麼呢？無非就是跟登入有關的訊息吧！例如帳號密碼之類的，所以我們將視窗往下拉，看到form data這裡： 你可以看到信封裡的內容： __EVENTTARGET: 欄位為空 __EVENTARGUMENT: 欄位為空 __VIEWSTATE: 亂碼 __VIEWSTATEGENERATOR: 亂碼 __EVENTVALIDATION: 亂碼 TxtIDNo: 你的身份證字號, TxtPass: 你的密碼, HiddenIDNo: 你的生份正字號, Button1: 登入, 我們可以發現除了帳號密碼外，還有很多怪東西，例如：「__EVENTTARGET」等等，這些東西我們不能亂填，我們得找到這些欄位的正確內容，登入才會生效。我們可以到原本的登入網頁找： 回到登入頁面（inspect依然開啟） 點選 inspect 中的 Element，打開網站的原始碼，並搜尋（Ctrl-F 或 Cmd-F），’__VIEWSTATE’，就可以找到一它的value是多少了！ 其它如「__EVENTARGUMENT」、「__VIEWSTATE」、「__VIEWSTATEGENERATOR」、「__EVENTVALIDATION」也是用一樣的方式找 以下是節圖： 當然自己慢慢輸入肯定很蠢，所以這一切都要用python自動化才行！以後真的只要1秒就可以下載好，省去網站慢吞吞填入帳密。。。 寫code時間所以你已經瞭解了原理了，接下來就是實做！首先，我們要得到網頁，找尋當中的「__VIEWSTATE」等驗證碼：得到網頁、驗證碼123456789101112131415161718192021222324import reimport requestsimport pandas as pdfrom io import StringIO# 開啟瀏覽器ses = requests.Session()# 打開登入網頁d = ses.get('https://w.sk88.com.tw/Cross/Pc/Login.aspx')# 此函式會找特定的value，如「__VIEWSTATE」等def find_value(name, web): reg = 'name=\"' + name + '\".+value=\"(.*)\" /&gt;' pattern = re.compile(reg) result = pattern.findall(web.text) try: return result[0] except: return \"\"# 使用方式find_value('__VIEWSTATE', d) 我特別寫好了一個 find_value 的函式，它會幫你找出網頁中的怪碼，大家有興趣可以去研究 regex ，用來解析字串用的。 於是__VIEWSTATEGENERATOR、 __EVENTVALIDATION，這些怪東西的驗證碼就被找到了！ 寫信封的內容接下來我們再來實際的登入： 用python模擬登入12345678910111213data = &#123; '__EVENTTARGET': find_value('__EVENTTARGET', d), '__EVENTARGUMENT': find_value('__EVENTARGUMENT', d), '__VIEWSTATE': find_value('__VIEWSTATE', d), '__VIEWSTATEGENERATOR': find_value('__VIEWSTATEGENERATOR', d), '__EVENTVALIDATION': find_value('__EVENTVALIDATION', d), 'TxtIDNo':'你的身份證字號（帳號）', 'TxtPass':'密碼', 'HiddenIDNo':'你的身份證字號（帳號）', 'Button1':'登入',&#125;login = ses.post('https://w.sk88.com.tw/Cross/Pc/Login.aspx', data=data) 以上的code，就是創建信封的內容 data，並發送「POST」，請求登入。記得要修改改帳號密碼才能用喔！ 下載持股部位接下來，由於已經登入了，我們就去相對應的網址，下載自己的持股部位：下載持股部位1234567891011121314# 下載持股data = ses.get('https://w.sk88.com.tw/Cross/Pc/QueryPositionRealTime.aspx')data.encoding = 'utf-8'# 用 pandas 整理df = pd.read_html(StringIO(data.text))[0]# 設定第一行row 為 欄位名稱df.columns = df.iloc[0]# 刪除第一行rowdf = df.iloc[1:]df 以上是我的持股記錄，趁最近表現不錯放一下XDD，這只是表面績效很好，實際上沒那麼好，因為最近賣了很多虧損股，只剩好的股票，所以才看起來光鮮亮麗。絕對不能只看持股獲利，還必須考慮銀行帳戶中的存款才行喔！不然很有可能發現，持股獲利很高，但帳戶餘額慢慢變少的情況喔！ 以上就是今天的教學，有以下幾個小重點： 學習用chrome來找 get post 的方法 利用python 模擬登入帳號 下載自己的持股狀況 下次會介紹如何串接自動化買賣，敬請期待！","raw":null,"content":null,"categories":[{"name":"財經Python教學","slug":"財經Python教學","permalink":"https://www.finlab.tw/categories/財經Python教學/"}],"tags":[{"name":"python","slug":"python","permalink":"https://www.finlab.tw/tags/python/"},{"name":"程式交易","slug":"程式交易","permalink":"https://www.finlab.tw/tags/程式交易/"},{"name":"爬蟲","slug":"爬蟲","permalink":"https://www.finlab.tw/tags/爬蟲/"}]},{"title":"新年賀禮 ─ 投信跟盤法！","slug":"投信跟盤法！","date":"2018-01-01T07:55:40.000Z","updated":"2020-06-05T07:29:49.987Z","comments":true,"path":"投信跟盤法！/","link":"","permalink":"https://www.finlab.tw/投信跟盤法！/","excerpt":"","text":"大家好！新年快樂，很久沒有寫文章了，今天要介紹的是投信的跟隨買賣，算是2018年送給大家的新年賀禮！這是一個完整的策略，方法非常簡單，看完這篇就可以直接使用，手動操作該策略喔！ 我趁著歐洲聖誕假期，跑去土耳其玩，土耳其真的很多商人，到處跟我裝熟、賣我東西，買了才發現不但品質差，價錢還是正常的好幾倍。他們的話術真的很強，去玩一定要小心。雖然被坑很多錢，但股票有賺一些XD，心沒有這麼痛。廢話不多說，開始介紹這個選股方法吧！ 投信就是基金投信簡單說，就是我們口中的基金公司啦！很多人懶得自己投資，就將錢交給高手，讓他們去操盤。 但是基金公司的缺點，在於管理費用太高了，賺的錢都進了基金公司的口袋，假如你要將資產交給基金公司的話，最好是大金額，才能藉由談判，壓低手續和管理費。 假如你想要省下管理費，假如你不止想投資理財，也想投資自己的腦袋，那就常來看一下我們的文章吧！我們的目標就是想要讓大家用很低的成本，學會如何穩定的獲利。 投信買賣資料台灣有很多獨特的數據，投信買賣數據就是台灣獨有的，證券交易所每天公布三大法人的當日買賣狀況，有外資、投信、自營商。 投信最重要的數據就是某支股票的當日總買賣張數，當某公司表現良好，基金公司通常會比散戶更快掌握狀況並買入，就會反映在這個數據上，我們就藉由這個原理，跟隨投信來買賣。 策略思路投信擁有投資人大筆的金額，所以假如公司的市值比較小，投信就可以操弄其股價，迫使股價上漲，並出場結算。所以我們選取市值較小，投信又買入的股票，當 市值（百萬） &lt; 10000 投信當日買賣 &gt; 200 張 我們買入該股30天。 以上的條件都可以用 GoodInfo 股票篩選功能 來達成喔！ 我們回測採用手續費6折，證交稅千分之三，由100萬當起始資金，平均分配到每日持有的標的。 結果我們針對所有的上市公司，當日發現符合條件，隔日以開盤價買進，30天後開盤價賣出！可以得出權益曲線，也就是你資產的增加幅度（獲利金額持續投資） 由圖可見，紅色的是策略，灰色的是大盤，這個策略在2008跟2011年的回檔都非常嚴重！但近五年的獲利超好，感覺投信的投資技巧有越來越進步的趨勢。 為什麼大盤回檔時，投信會很慘呢？由於法規規定投信持股要70% 以上，所以當金融海嘯時，無法退出市場，所以虧損是無可避免的。 策略再優化既然這篇是新年賀禮，怎麼可能報酬率就只有這樣呢？我的讀者一定都知道，如何避開大盤大跌 ！假如你還沒看過那一篇的話，可以去看看！最近滿常用這個方法，有時候還滿好用的。 賣出條件（賣出所有持股）： 大盤在均線下 且 均線比昨日低 （25日均線） 可以看到策略躲過了金融海嘯，且在金融海嘯一結束馬上啟動獲利！且14年獲利來到了16倍！ 持股都還算滿多的，但有時候會瞬間歸0，是由於要避開大盤大跌時，一次性的全部賣出導致的。 最大虧損降低到-30％以內，算是滿優秀的！ 結論到此為止，投信跟隨策略就算差不多了！我們利用了幾個概念： 市值小的公司，較容易被投信操控 避開大盤大跌 簡單的構成了這個策略，不但條件少，而且獲利效果是目前為止最好的，可以直接用GoodInfo或類似的選股軟體篩選持股。 謝謝大家的支持！2018繼續努力！部落格累積了很多留言，今天也一一回覆完了，有很多網友給我很好建議！之後都會最更詳細研究看看： 凱利公式做資產配置 技術指標的回測模組 回測報表教學 營業現金流選股 外資跟隨買賣優化（有點難，還在想） 假如大家有什麼感興趣的，想要我研究看看，都可以在下面留言喔！ 祝大家2018投資順利！","raw":null,"content":null,"categories":[{"name":"指標分析","slug":"指標分析","permalink":"https://www.finlab.tw/categories/指標分析/"},{"name":"籌碼面","slug":"指標分析/籌碼面","permalink":"https://www.finlab.tw/categories/指標分析/籌碼面/"}],"tags":[{"name":"選股策略","slug":"選股策略","permalink":"https://www.finlab.tw/tags/選股策略/"},{"name":"歷史回測","slug":"歷史回測","permalink":"https://www.finlab.tw/tags/歷史回測/"},{"name":"量化投資","slug":"量化投資","permalink":"https://www.finlab.tw/tags/量化投資/"},{"name":"投信","slug":"投信","permalink":"https://www.finlab.tw/tags/投信/"},{"name":"股票分析","slug":"股票分析","permalink":"https://www.finlab.tw/tags/股票分析/"}]},{"title":"利用Pandas輕鬆取得股價並回測","slug":"利用Pandas輕鬆取得歷史股價","date":"2017-12-11T14:19:49.000Z","updated":"2020-06-05T07:29:51.878Z","comments":true,"path":"利用Pandas輕鬆取得歷史股價/","link":"","permalink":"https://www.finlab.tw/利用Pandas輕鬆取得歷史股價/","excerpt":"","text":"我們之前有教過怎麼樣取當日所有股票股價的方法，但是假如我們想要做歷史回測，除了慢慢一天天抓，也可以使用 pandas_datareader 這個 package（可以用pip install pandas_datareader來安裝） 跟之前股價爬蟲的比較之前我們教的股價爬蟲，是採取一天天下載的方式，今天教的方法是幾支股票，一次下載全部歷史股價！這個方法的優點是超簡單，而且下載速度又快，缺點是有些下市的股票的股價沒有辦法取得，會有生存者偏差，而且資料比較不齊全，但偶爾玩玩，練習一下 pandas 是很不錯的！ 線上用colab練習此文章中的程式碼 首先先用 pandas_datareader 取得資料取得資料又更簡單了！先匯入要用的包 import1234from pandas_datareader import data # pip install pandas_datareaderimport matplotlib.pyplot as plt # pip install matplotlibimport pandas as pd # pip install pandas%matplotlib inline 然後： get data123data = data.DataReader(\"^TWII\", \"yahoo\", \"2000-01-01\",\"2018-01-01\")c = data['Close']c.plot() 就這樣，真的超簡單吧！假如你之前不會…現在跟你講了，別打我XDD 這個方法爬到的資料真的比較不齊全啦！ 用 pandas 計算 60日收盤價格如何用 pandas 快速算出平均線呢？get data123456# 近60日收盤c60 = c.rolling(60, min_periods=1).mean()# 畫圖c['2015':].plot()c60['2015':].plot() 第二行的 c 就是收盤價 close 的簡稱，是一個 series ，代表每一天收盤價的時間序列，可以上 pandas 官網上查詢 相關的用法，其中有一個好用的 function 叫做 rolling 其實它的含意就是隨時間移動窗格，將窗格中的收盤價取： 60天最大值（c.rolling(60).max()） 60天平均（c.rolling(60).mean()） 60天最小值（c.rolling(60).min()） 那為何我們還需要一個min_periods=1這個參數呢？因為照原本的設定，60天內只要有一個值是NaN，則平均值就是NaN，只要一筆資料有問題，你就有60天算不出平均值，所以 min_periods=1 就是在說，只要60天裡面有一天不是 NaN 就強制算的意思。 第五行跟第六行是畫圖，因為我們不想畫整整18年的圖，畫最近三年就好了，所以利用 [start:end] 來選擇時間，我們希望從 2015年到此資料的最後一筆，所以end放空白（跟python array一樣的選取方式，只是改用日期）。 用pandas算出買入訊號假如當日收盤 &gt; 近60日收盤，則當日收盤瞬間買，不然則空手 這樣子的回測要怎麼寫呢？三行解決，有沒有比multichart還簡單！？ backtest12345678910# 進60日收盤c60 = c.rolling(60, min_periods=1).mean()# 買入訊號signal = (c &gt; c60)# 回測並跟大盤比較(c.shift(-1) / c)[signal].cumprod().plot(color='red')(c.shift(-1) / c).cumprod().plot(color='blue') 買入訊號（line 5）是如何建立的呢？原本的 c 和 c60 都是 float series，然而這邊的 signal 是一個 boolean series，代表當天的c 比 c60還要大，每一天都會有一個布林值，True 代表要在收盤價買入，而 False 代表在收盤價空手 為何我們用一行（line 8）就可以回測呢？首先，我們將數值變成成長率 c.shift(-1)/c，其中c.shift(-1)代表明天的收盤價，而c代表今天的收盤價。這個成長率是一個近似於 1 的數值，大於1代表明天漲，小於1代表明天跌。我們將所有的成長率照著時間乘起來，就會還原成原本的大盤 c，然而我們只有在 signal = True 的時候持有大盤，資產才會隨著增長率變動。xx[signal]的意思就是選取一個 sub-series，將signal = False的天給去除。所以我們只選 signal = True 的每一天相對應的成長率乘起來（cumprod()），就會是回測結果了！ 最後一行（line 9）是做什麼的？用來畫出大盤的，假設我們沒有用xx[signal]篩選，等於每天都買入的狀況，利用 cumprod 把每一天的成長率都乘起來。其實這行也可以寫成 (c/c[0]).plot(color=&#39;blue&#39;) 都是互通的，各位可以試試看。 這邊比較複雜，建議把 c、(c.shift(-1)/c)、signal，這些數值都print出來比較一番吧！get data1pd.DataFrame(&#123;'c':c, 'c60':c60, '增長率':c.shift(-1)/c, 'signal':signal&#125;).head() 小總結 我沒有考慮手續費喔！考慮了以後，這個方法應該不會太好，這篇主要是帶大家練習pandas！ 利用 Pandas 來攝取資料 1 行 利用 Pandas 簡易回測 3 行 學習 series 的操作 第一次看，應該會覺得pandas怎麼這麼厲害，但又很無奈自己無法玩轉操弄它。不用擔心，只要常常看這個系列，就會慢慢對pandas有感覺囉！","raw":null,"content":null,"categories":[{"name":"財經Python教學","slug":"財經Python教學","permalink":"https://www.finlab.tw/categories/財經Python教學/"}],"tags":[{"name":"python","slug":"python","permalink":"https://www.finlab.tw/tags/python/"},{"name":"大盤","slug":"大盤","permalink":"https://www.finlab.tw/tags/大盤/"}]},{"title":"坊間沒在教的RSI選股技巧","slug":"坊間沒在教的RSI-選股技巧","date":"2017-12-10T12:35:51.000Z","updated":"2020-06-05T07:29:47.175Z","comments":true,"path":"坊間沒在教的RSI-選股技巧/","link":"","permalink":"https://www.finlab.tw/坊間沒在教的RSI-選股技巧/","excerpt":"","text":"RSI在個股程式交易上，都還算滿准的，有很多台指期策略都是使用RSI，但是在選股的時候，假如還是用一樣的方法囫圇吞棗，則會悽慘無比，就算不算手續費好了，經過我的實測，RSI黃金交叉死亡交叉的選股買賣，效果非常不好，甚至落後大盤。要如何改進呢？請接著看： RSI 超直覺介紹！RSI到底要怎麼用在選股上呢？首先讓我們來簡單複習一下RSI： 上圖中，紅色跟綠色代表漲跟跌，長度代表漲跌幅。可以發現，當股價上漲時，雖然細部漲跌互見，但紅色線條的總長度大於綠色線條總長度，而下跌時正好相反。實際上RSI就只是這樣算而已： $$RSI = \\frac{n天內紅色總長}{n天內紅色總長 + n天內綠色總長} \\times 100 \\% $$ 所以當 RSI = 100 時，代表近 n 天每一天都漲，而 RSI = 0 時，代表近 n 天每天都跌。RSI厲害的地方在於它考慮了股價移動的方向，而且不管任何股票，RSI永遠介於 0 ~ 1 之間。 RSI 用在選股上的難題然而它的壞處是：每個股票漲跌的週期不同，例如有些股票跌5％會跌深反彈，但有些可能要道10%，每一支股票股性質不同。不能直接用，每個股票的 n 可能都不一樣，硬是將所有股票都用同一個 n 的 RSI 效果都非常差！ 這就是為什麼明明同樣的 RSI ，有些人會說要追漲、又有人會說止跌！只能說股票特性不一樣，用法也不一樣，沒有什麼誰對誰錯的問題，也沒有說哪種比較好，完全看你的 n 值怎麼設定，所以這也是我說 RSI 用在期貨、外匯上比較好，因為可以針對同一個商品客製化參數 n，然而選股就沒辦法了。 所以靠 RSI 選股就是個玄學！？要如何用同一個 n 來選股呢？老實說半年前我就在琢磨這個問題，研究一直滿失敗的，但最近終於有所突破，而且方法很簡單，接下來的內容，集結了我好幾個月的研究，各位假如還滿意可以使用我們新的 email 訂閱我們的新文章喔！我們的文章含金量都很高XD（自己覺得）！ 在每個股票之間找尋統一的 n，實現 RSI 追漲策略我們硬是讓 n=定值，怎麼做好呢？於是我做了很多的測試，結論是：長週期的股票RSI有共通性！ 以下面這個例子舉例： 上圖中我只用了一個簡單的選股策略： 當 RSI &gt; 55 且 ROE &gt; 0 時買入。 當 買超過60天 或 跌破季線 賣出。 （不考慮手續費，純實驗性質） 可以發現週期越長，股票越有共通性，RSI 越能在不同的股票間都有一致的作用！ 而當這種長週期 RSI 有點高時（55左右），代表股價正在上漲，此時跟風會有滿不錯的收穫！ 尤其是 RSI 週期 n = 60 以上，讓然感覺滿驚艷的！ 小結論網路上沒有任何地方有教你，RSI選股要用這麼長的週期，可以自己找幾支股票追蹤看看，或許你跟我會得到類似的答案喔！ 還是提醒一下大家，投資風散風險，這個方法不可能就這麼厲害，只是說上漲的期望值比較大而已，真正操作一個月，感受絕對是五五波，冷暖夾雜的啦XD，可以再多用點指標去過濾看看！","raw":null,"content":null,"categories":[{"name":"指標分析","slug":"指標分析","permalink":"https://www.finlab.tw/categories/指標分析/"},{"name":"技術面","slug":"指標分析/技術面","permalink":"https://www.finlab.tw/categories/指標分析/技術面/"}],"tags":[{"name":"選股","slug":"選股","permalink":"https://www.finlab.tw/tags/選股/"},{"name":"程式交易","slug":"程式交易","permalink":"https://www.finlab.tw/tags/程式交易/"},{"name":"RSI","slug":"RSI","permalink":"https://www.finlab.tw/tags/RSI/"}]},{"title":"腦力激盪的外資策略！","slug":"腦力激盪的外資策略！","date":"2017-12-08T05:13:29.000Z","updated":"2020-06-05T07:29:51.572Z","comments":true,"path":"腦力激盪的外資策略！/","link":"","permalink":"https://www.finlab.tw/腦力激盪的外資策略！/","excerpt":"","text":"最近跟大家用email討論感覺很趣的！而且最近也比較忙，所以比較少時間寫blog跟大家道歉！這個週末我會利用假日來研究一下巴菲特選股！敬請期待～～ 以下是其中一篇email，我們在討論一個外資策略，從原本一個普通的策略，變得可以很有效的避開大盤大跌，成為長年穩定獲利的投資方法！有時候真的是要互相討論，互相切磋，從大家身上學到很多東西！真的非常謝謝各位！ 然而有時候回信比較慢，請見諒，手邊事情有點多，因為歐洲要放聖誕節了，最近會特別忙！ 也歡迎大家跟我一起討論策略，我可以幫你回測跟優化，也不會隨意公布，除非你同意，我回信時間比較不固定，但我一定盡量早點回！ P大：最近在觀察一個選股邏輯，法人連買10日以上，且股價還沒漲多，通常之後會有不錯的漲勢～或許你有系統可以研究或是討論看看 我：我幫你做了一下回測： 的確是會比大盤好，我用的是外資買賣正的超過十天以上，且十天內報酬率不超過5%時買入，持有20天或是60天，都會比大盤還好喔！我比較喜歡持有60的版本，因為效果差不多，且手續費比較便宜。 這個方法有時候還是會同時出現100檔股票，感覺還可以再增加條件篩選出優質股，我們可以用email來回討論你的想法！讓這個策略越來越好。 P大：遇到好人可以討論真的太好了～沒關係，要怎麼運用都可以，一起進步，一起賺錢～我也不太好意思，因為不知道怎麼回測，所以還請您幫忙，不過儘量提供出一些假設性的問題。～關於這個策略，或許可以再加上price大於ma60，本益比小於15，或是股價淨值小於0.8之類的呢？承佑什麼想法建議的嗎？ 對了 想請叫一下 怎麼不繼續使用14年那邊的策略呢？ 我：最近比較忙，拖了一下才回信，為什麼我不用14年那個策略呢？因為很多策略都很猛呀XDD，14年那個只是還好而已。我剛剛幫你設計一下，加了一些條件，不算手續費也14倍呀。但計算了手續費後，獲利只剩下六倍，也不錯啦XD。這個策略的優點是下跌幅度滿小的，都在15%以內！金融海嘯那年竟然還賺錢。很適合穩健型的投資！我是用100萬去模擬的。 這個策略的思路就像你說的，加了 本益比&lt;20 股價淨值比&lt;0.8 另外還加了測試後發現有用的： 市值小於5000千：選擇一些外資喜歡但市值還不會太大的小型股（外資比較好操弄）。 避開大盤大跌的方法 當中提到的大盤濾網（在此策略調整成25天均線）。當反向條件成立時，立刻賣出手中所有持股。 另外外資連買10天改成5天。 我覺得這幾封信的內容很有價值，我們將一個構想中的策略實現，並且回測，適合放在blog中，你覺得呢？有什麼其它想法歡迎跟我討論喔！ P 大如果可以成為您其中一篇文章的構想覺得榮幸哈哈哈～ 歡迎大家跟我討論策略喔！這個大概就是我們討論的經過，最後P大也同意把討論的過程放上blog，歡迎對策略有興趣的人也可以跟我一起討論喔！這也是督促我研發新策略的一個動力！新策略研發最主要是幫助你可以更確定策略的有效性，而我獲得的好處就是多一點寫blog的靈感，當然我一定會詢問經過你的同意，才把策略放上blog，目前手邊有很多策略了，不缺策略，只缺本金阿XDD。","raw":null,"content":null,"categories":[{"name":"指標分析","slug":"指標分析","permalink":"https://www.finlab.tw/categories/指標分析/"},{"name":"籌碼面","slug":"指標分析/籌碼面","permalink":"https://www.finlab.tw/categories/指標分析/籌碼面/"}],"tags":[{"name":"外資","slug":"外資","permalink":"https://www.finlab.tw/tags/外資/"}]},{"title":"Python 超簡單-讓你投資少繳點學費！選股與回測","slug":"Python-簡單選股和回測","date":"2017-11-30T05:21:38.000Z","updated":"2020-06-11T05:09:29.437Z","comments":true,"path":"Python-簡單選股和回測/","link":"","permalink":"https://www.finlab.tw/Python-簡單選股和回測/","excerpt":"","text":"最近在看一些比較古典而學術的策略文章，雖然已經眾所皆知，但是好像很少人用，所以今天來介紹一下，如何利用 python 實做 portfolio trading。 Portfolio Trading 的意思就是選擇一籃子股票，並且照著一定的比例買入，今天我就不介紹太詳細，先用最簡單的篩選法，選出一些股票，並觀察買入一兩年後的變化。 首先，大家必須要把之前的 Python-時間序列實作！ 那一篇複習下，我們會用到當中的 close 這個成品，最好是跑五年以上的資料，會比較有可靠性。 先寫好策略框架在開始寫策略時，先用簡單的兩三句話，來闡述所有的code在做什麼，並且逐段擴寫： pseudo code1234for 每年: 1. 先看前三年每個股票的表現 2. 篩選股票 3. 回測當年的狀況 於是接下來我們就依照這三點來建構回測。 前三年股票的狀況假設我們目前在第year年，，我們把最近lookback_period年所有股票的股價選取出來 lookback three years1234567891011# 拿取近n年股票c = close.truncate(str(year-lookback_period), str(year))# 計算近n年最大下跌幅度dropdown = (c.cummax() - c).max()/c.max()*100# 計算近n年報酬率profit = (c.iloc[-1] / c.iloc[0] - 1) * 100# 計算近n年標準差(波動率)std = (c/c.shift()).std() * 200 第5、8、11行是計算三個指標，當然你也可以建構自己的一些指標，我這邊就先舉這三個例子，這邊的每一行都很值得玩味，假如你都看不懂，建議你先去看 pandas 的新手教學。 篩選股票這邊我們就用剛剛計算的三個指標來選股： select stocks123constraint = (std[std &lt; 2].index &amp; profit[profit &gt; 10].index &amp; dropdown[dropdown &lt; 50].index) 這邊顧名思義，我們希望選取： 波動率 &lt; 2％：波動率越大代表股價變化幅度越大，我們只選波動率小的股票 獲利 &gt; 10%：近三年報酬率大於10的股票 最大下跌幅度 &lt; 50%：下跌幅度也不能太大 回測接著就是回測，這邊的回測只求簡單算算，跟實際情況一定不一樣，這邊我們將資產均勻分佈於選出來的股票，不計算手續費，也不計算除權息、減資等等。建議有餘力的人可以用 adjust close取代普通的 close price，結果會比較準確。 backtest1234567891011121314# 取出今年的股價c2 = close.truncate(str(year), str(year + 1))# 依照剛剛的條件選取股票selected_stocks = constraint &amp; c2.columnsprint(year, '年買了',len(selected_stocks),'支股票')# 回測equality = c2[selected_stocks].dropna(axis=1).mean(axis=1)total_equality = (equality / equality[0] * start_capital)total_equality.plot(color='blue')# 今年底的資產，變成明年初的資產start_capital = total_equality[-1] 什麼！回測竟然只要這麼少行！！是的因為我們是平均分散所有要買的股票，所以只要把選出來的股價做平均，買入這個平均指數就可以了。由於有了前面的假設，結果會是一樣的。 完整的範例1234567891011121314151617181920212223242526272829303132333435363738394041424344454647import pandas as pd%matplotlib inlinelookback_period = 3start_capital = 1for year in range(2010, 2018): # calculate performance of stocks # ------------------------------- # 拿取近n年股票 c = close.truncate(str(year-lookback_period), str(year)) # 計算近n年最大下跌幅度 dropdown = (c.cummax() - c).max()/c.max()*100 # 計算近n年報酬率 profit = (c.iloc[-1] / c.iloc[0] - 1) * 100 # 計算近n年標準差(波動率) std = (c/c.shift()).std() # constraint # ---------- constraint = (std[std &lt; 0.02].index &amp; profit[profit &gt; 10].index &amp; dropdown[dropdown &lt; 50].index) # backtest # -------- # 取出今年的股價 c2 = close.truncate(str(year), str(year + 1)) # 依照剛剛的條件選取股票 selected_stocks = constraint &amp; c2.columns print(year, '年買了',len(selected_stocks),'支股票') # 回測 equality = c2[selected_stocks].dropna(axis=1).mean(axis=1) total_equality = (equality / equality[0] * start_capital) total_equality.plot(color='blue') # 今年底的資產，變成明年初的資產 start_capital = total_equality[-1] 這邊已知的問題是，假如你當年沒有任何股票的話，回測會有點問題喔！盡量讓每一年都持有一些股票吧！（或者debug一下XD）可以看出前幾年獲利滿好的，近年來獲利普普，感覺還得加入其它的條件吧？大家可以新增一些指標，並且用類似的方法做回測喔！ 另外，假如想要實做更多有用的指標，可以參考：超簡單108種技術指標，找一個你喜歡的吧！ 除了開高低收，想要有更多數據做回測嗎？也歡迎到財報爬蟲月營收爬蟲來找找喔！","raw":null,"content":null,"categories":[{"name":"財經Python教學","slug":"財經Python教學","permalink":"https://www.finlab.tw/categories/財經Python教學/"}],"tags":[{"name":"python","slug":"python","permalink":"https://www.finlab.tw/tags/python/"},{"name":"程式交易","slug":"程式交易","permalink":"https://www.finlab.tw/tags/程式交易/"}]},{"title":"威廉．納葛維茲-價值型選股策略","slug":"威廉．納葛維茲-價值型選股策略","date":"2017-11-28T09:46:51.000Z","updated":"2020-06-05T07:29:49.353Z","comments":true,"path":"威廉．納葛維茲-價值型選股策略/","link":"","permalink":"https://www.finlab.tw/威廉．納葛維茲-價值型選股策略/","excerpt":"","text":"最近偶然看到了TEJ網頁中，有很多策略，公式都寫好了，只要無腦回測！好開心XD，但裡面策略也太多了吧！有些有用，有些沒用，還是要慢慢撈珍，原本在大海裡撈珍，現在在河川裡撈珍，輕鬆多了。 今天要介紹的是裡面的 威廉．納葛維茲-價值型選股策略 然而為了讓回測更有用，我有做了一些小調整，條件做了一些更動，以下是程式交易的思路： 營運合格的小市值股票這個價值型策略，尋找的標的是小而美的股票，價格都在五十塊以下，然而小市值的公司通常風險比較高，所以此策略利用了 自由現金流 跟 負債比率，來觀察此公司的營運狀況，營運狀況不用到非常好，只求不要太差就可以了： 市值 &lt; 10000（千） 近四季自由現金流量&gt; 0 負債比率 &lt; 70 很多網站都會說 負債比率 是個很重要的指標，但我多次測試，發現它在很多策略中都無法增加獲利，甚至還會減少…，然而這只是我的經驗，不代表 負債比率 真的不用看，還是請各位自行斟酌。除了我這麼說外，原來Mr. Market跟我看法有志一同：你覺得「負債比率」越低越好嗎？其實，它沒有想像中這麼有效！ 營收高是王道！以上的條件看起來都挺保守的，接下來才是比較積極的指標，以下的指標都是用來觀察一家公司的營收跟淨利！假如一家正常營運的公司獲利比其它公司好，那沒理由不投資呀！所以這個策略用了 市值營收比 、 本益比 、營業利益成長率，來觀察公司是否持續獲利，並且獲利越來越高。 市值營收比 = 市值 / 月營收 &gt; 3 本益比 &lt; 20 營業利益成長率 &gt; 0 市值營收比也是一個很好用的財務指標，可以參考我的文章。 稅後淨利要考慮！一家獲利良好的公司，獲利持續成長，固然是好事，但不能只是獲利表面上成長，而稅後淨利卻很少，那也不行！所以這邊就用了額外的一個指標，來判斷稅後淨利的大小： 股東權益報酬率 = 稅後淨利 / 股東權益總額 &gt; 市場均值 這邊的 除 股東權益總額 是用來對整個市場做一個公平的比較，例如某公司發行很多股票，且股價很高，那就更應該有很好的 稅後淨利 ，不然投資人為何要拿錢給你呢？ 思路總結：這個策略基本上就是找小巧、獲利高的股票，我覺得其中很棒的概念是 用市值營收比，而不是單純的營收 用股東權益報酬率，而不是單純的毛利率或稅後淨利 利用上述兩個指標，才能將每家公司更公平的做比較，進而找出小而美的股票！ 回測結果符合上述條件，持有60天，每60天換一輪股票： 由於很久沒有介紹回測結果了，這邊在重新複習一下，藍色的就是不含手續費，紅色的是有含手續費，灰色的是台股。看起來領先台股非常多，代表這個TEJ策略裡面真的有些黃金可以挖寶，然而調整參數還是滿必要的就是了，照著TEJ直接使用，效果沒那麼好。 買股數量 每次換股的時候，我們就盡量平均自己的資產，當然每張股票價格都不一樣，所以不可能會超級平均，只求盡量。另外我們可以看到，金融海嘯的時候，藍色線買了將近150支股票，而紅色線只買了80種不同的股票，為什麼會這樣呢？因為藍色曲線是最理想的狀況，也就是全部都買，全部超級平均分散，而紅色的就是只看現有資產是多少，盡量分散，買不起就放棄。 為何金融海嘯時，有那麼多股票？因為金融海嘯不管好股壞股，都跌到了很低的價位，於是市值變小，此策略就會撈出比較多股票。 跌幅 此策略在金融海嘯時讓你的資產虧損一半多，但一般狀況表現非常傑出，約有20％的回撤，但不算太大，算是滿傑出的。 總結： 用自由現金流來、負債比率來看公司體質 用營收增長率及股東報酬率來衡量公司的獲利能力 分享TEJ網站中的策略 外部延伸閱讀：黃國華：市值跟營收之間的合理關係 今天介紹了TEJ網頁中的策略，發現滿有用的，想在多寫點，不知到大家最有興趣的是其中的哪一個策略呢？","raw":null,"content":null,"categories":[{"name":"選股策略","slug":"選股策略","permalink":"https://www.finlab.tw/categories/選股策略/"}],"tags":[{"name":"選股策略","slug":"選股策略","permalink":"https://www.finlab.tw/tags/選股策略/"},{"name":"歷史回測","slug":"歷史回測","permalink":"https://www.finlab.tw/tags/歷史回測/"},{"name":"選股","slug":"選股","permalink":"https://www.finlab.tw/tags/選股/"},{"name":"程式交易","slug":"程式交易","permalink":"https://www.finlab.tw/tags/程式交易/"},{"name":"市值營收比","slug":"市值營收比","permalink":"https://www.finlab.tw/tags/市值營收比/"}]},{"title":"市值營收比-幫你找到便宜獲利股","slug":"市值營收比","date":"2017-11-24T02:19:11.000Z","updated":"2020-06-05T07:29:47.644Z","comments":true,"path":"市值營收比/","link":"","permalink":"https://www.finlab.tw/市值營收比/","excerpt":"","text":"我才疏學淺，最近才發現這個指標，一用之下大為驚嘆，回測的效果還滿好的，今天分享給大家。網路上有各種算法，究竟要用財報上的營收總額算，還是直接用月營收算？用月營收算的話，要加總幾個月比較好？在這篇做簡單的分析。 市值營收比的計算方式如下： $$ 市值營收比 = 市值 / n個月營收總和 $$ 一般來說，我們都是希望 市值營收比 越小越好，因為 市值營收比 越小代表市值越小，而營收越高，也代表較便宜的高營收股。市值營收比 有很多好處，它的變化速度非常快，市值是每個交易日都會變動，而月營收也是每個月都有新的數字，讓它的反應速度比其它的基本面指數再快一些。 也有人會把分母換成每季的營收總額，但我實測後發現效果沒有用月營收好。 分母中的 n 是個使用者決定的數字，例如你想計算每一季的 市值營收比，那就帶入4，這邊以4為例子。 首先我們來看 市值營收比 分佈圖： 可以發現這又是一個類似於1/x曲線的分佈圖，\b我們將其照高低分成四組去持有，每60天換一次股，不計算手續費： 很漂亮的一字排開！我發現120天換一次股，效果比60天或是240天都還要好（無論n＝4，6，12，24，36）。然而這邊的回測只是建立在一次持有幾百種不同股票的狀況下，真實的情況，我們沒有那麼多錢去分散投資時，不能只看 市值營收比 來選股，不然漲跌機率還是跟擲銅板的機率沒兩樣，還必須做更多的篩選。 市值營收比 的缺點是，營收不代表稅後淨利，可能有些公司表面上賣出很多產品，但都是賠本生意，這種公司沒辦法被過濾，所以下一篇我們就來看看 市值營收比 搭配其它指標來做回測吧！ 計算 市值營收比 時，用月營收計算獲利效果比較好！ 市值營收比（季）還滿好用的，是我認為排名前十的基本面指標 市值營收比找出來的股票，小型股偏多 可以用 3.77（50％）當作 市值營收比 的中位數，作為選股的依據，越低越好。","raw":null,"content":null,"categories":[{"name":"指標分析","slug":"指標分析","permalink":"https://www.finlab.tw/categories/指標分析/"},{"name":"基本面","slug":"指標分析/基本面","permalink":"https://www.finlab.tw/categories/指標分析/基本面/"}],"tags":[{"name":"選股","slug":"選股","permalink":"https://www.finlab.tw/tags/選股/"},{"name":"指標","slug":"指標","permalink":"https://www.finlab.tw/tags/指標/"},{"name":"市值營收比","slug":"市值營收比","permalink":"https://www.finlab.tw/tags/市值營收比/"}]},{"title":"避開大盤大跌的方法！","slug":"過濾大盤的簡單方法！","date":"2017-11-21T06:37:34.000Z","updated":"2020-06-05T07:29:48.844Z","comments":true,"path":"過濾大盤的簡單方法！/","link":"","permalink":"https://www.finlab.tw/過濾大盤的簡單方法！/","excerpt":"","text":"目前這個blog上的策略大部分都是一直持股，就算大盤跌到慘慘慘，反正就繼續持有就對了！我們能不能想一個過濾的方法，讓我們躲避掉大盤下跌的時候呢？其實是可以辦到的，這篇文章就是討論大盤過濾的效果和得失。 何時該用大盤過濾？使用時機，最白話的說法就是：你不希望賺錢之後連本帶利虧回去，但是如何定義虧很多呢？例如，今天某人虧損30萬，很多嗎？對於一個小資族如我，這樣算是非常多的，得上班好幾個月才能補回來。但對於手上持有一億元的基金公司，其實也才千分之三，是常有的事情。 所以我們通常會去看一個數值，叫做dropdown（DD），也叫虧損，或是回撤。 今天的投資資本 - 投資資本歷史最高點 用比較數學正式的角度講，我們先假設總投資資產為c(t)c(t)c(t)，那dropdown，d(t)d(t)d(t)，就可以寫成： d(t)=(c(t)max{c(i)∣0≤i≤t}−1)×100%d(t)=\\left(\\frac{c(t)}{\\max\\left\\{ c(i)\\mid0\\le i\\le t\\right\\} }-1\\right)\\times100\\%d(t)=(​max{c(i)∣0≤i≤t}​​c(t)​​−1)×100% 某人原本有100元，賺了50元，獲利繼續投資，但後來虧了30元，來到了120元，請問dropdown是多少？ (120150−1)×100%=−20%(\\frac{120}{150} - 1)\\times100\\%=-20\\%(​150​​120​​−1)×100%=−20% 假如100塊直接虧損30塊，那dropdown會是 -30％，但好在某人已經先獲利了50%並且持續投入股市，所以從150虧損到120元，這個策略的 dropdown 其實是 -20%。 所以不管是資金規模大小，我們有了一個統一的指標去衡量策略的下跌幅度了！通常我們會進一步去看整個回測，例如十年當中，虧損最慘最慘的位置，也就是最大下跌幅度，maximum dropdown（MDD）： argmintd(t)\\text{arg} \\min_t d(t)arg​t​min​​d(t) 而 ttt 通常發生在 2008～2009 金融海嘯附近。所以我習慣真的要用的策略，會測到2007年，才能看出虧損最嚴重的情行在哪裡。 我所有的策略不加大盤濾網平均dropdown在 -30% ~ -40% 左右，有些稍好在 -20%（沒有槓桿），很多有到-60%，所以投資股票當大盤大跌時，你用了沒有融券的單一策略，那就要有承受損失 -20％ ~ -30% 的心理準備。 當今天發現某個策略效果不錯，但是金融海嘯時特別差（40%～60％），那就可以使用大盤過濾了！ 大盤過濾的優劣得失當你加入了大盤過濾的策略後，很可能會發生以下情形： 策略變差 大家都說大盤過濾可以幫助我們將獲利保護好，以便賺更多。但不好意思要潑個冷水。我的回測經驗是，大部分的大盤過濾都會讓策略獲利變差，尤其是那些原本就獲利很好的策略。常常會發現原本可以獲利的策略，瞬間變得黯淡無光，這種事情經常發生！我的心得是，沒有一種大盤過濾法是萬用的，應該說有幾種可能有用，可以試試看，但不用抱持太大的期待。 Dropdown 變小 dropdown會有很明顯的變小，但是要比 -30% 好甚至到 -20%，以日為頻率做買賣個人覺得是有難度的，所以除非金融海嘯你的策略虧損來到了40%以上，再考慮使用大盤的過濾就好了。 範例這篇的重點應該是用大盤過濾來降低dropdown，所以這邊給了一個簡單的策略。 PB &lt; 1.5 ROE &gt; 1 (當季) EPS &gt; 0 (當季) 上次寫過自己愛用的指標 每80天換一次股，看一下結果： 這個策略算是可以穩定慢慢的獲利，而且買股數量也不會很多，這邊我的起始資金設定成50萬，紅色的權益曲線是計算了手續費後的結果，藍色的則沒有計算手續費，這應該也算是一個小資族存點錢後可以使用的策略。然而在金融海嘯時，dropdown非常大，竟然來到了 -60%，這樣的策略就算長年下來可以獲利，我也是不敢用，誰知道下一次金融海嘯什麼時候來呢…。 所以我們用了一個大盤的濾網，在設計濾網時，可以直接買賣大盤，初步看一下是否真的有用，我最後設計的條件： 大盤在21日均線上 或 21日均線上升（比昨日高） 為什麼要用21呢？其實只是一種斐波那契数列的迷信而已，也可以用20啦，沒差多少。以下是直接回測大盤，但不考慮手續費，反正只是想看一下這個濾網有沒有用： 藍色就是真正的大盤，我們從2000年開始測試橘色的是買賣大盤的結果，這邊的曲線是只有買大盤，沒有空的部分，總結這17年，此方法是有一定的獲利能力的，甚至可以拿來用在台指期策略上，我們今天只用在改善選股策略，避開一些不必要的虧損。大家可以去Cmoney或是玩股網，人工的方式去比對這個簡單的大盤條件。 說到這個，我跟玩股網、CMoney、財報狗都沒有什麼關係，只是網路上好用的工具就那幾個網站，而且順便提升一下這個blog的外部優質連結，如此而已啦！我還太小咖不會有人找我業配XDD 這邊只是簡單的過濾，另外還可以用KD、RSI，都試試看，甚至上網搜尋台指期的期貨策略，直接套成濾網（當然前提是時間尺度要match，這邊的最小單位是”天”）。 接下來我們修正原本的策略，加上了以上的大盤過濾條件，這邊要注意的是，我們在換股當下檢查大盤就好了，不需要每天都檢查，就是一翻兩瞪眼，也就是要買就買80天，不然就空手80天： 可以看到，它的dropdown從 原本的 -60% 縮小到 -30% 左右，且總獲利甚至提升了一些，這樣的結果還算滿意，覺得這應該算是過濾大盤的一個成功案例，要秀失敗策略的很簡單，因為太多了XDD，但我還是盡可能的把優質的內容呈獻給各位，今天的總結： dropdown的定義 過濾大盤的利弊 一個真實的大盤過濾方法，有可能可以套用再其它策略 大盤過濾研發的思路，及過濾的前後比較 假如喜歡這個blog，可以定期追蹤喔！我每個禮拜都會不定時發文。","raw":null,"content":null,"categories":[{"name":"大盤漲跌","slug":"大盤漲跌","permalink":"https://www.finlab.tw/categories/大盤漲跌/"}],"tags":[{"name":"歷史回測","slug":"歷史回測","permalink":"https://www.finlab.tw/tags/歷史回測/"},{"name":"大盤","slug":"大盤","permalink":"https://www.finlab.tw/tags/大盤/"}]},{"title":"Python 超簡單 - 158種技術指標計算","slug":"Python-簡單158種技術指標計算","date":"2017-11-19T11:46:09.000Z","updated":"2020-06-11T05:06:28.680Z","comments":true,"path":"Python-簡單158種技術指標計算/","link":"","permalink":"https://www.finlab.tw/Python-簡單158種技術指標計算/","excerpt":"","text":"這篇接續著Python時間序列實做，先複習一下，上回合結束，我們有一個最重要的成果：close，它的columns是所有的股票代號，而index是日期。 123close = pd.DataFrame(&#123;k:d['收盤價'] for k,d in data.items()&#125;).transpose()close.index = pd.to_datetime(close.index)close 還記得嗎？上方式是上次的code，將data，把每個股票的收盤價拿出來。因為很重要所以說三遍： 123456789101112open = pd.DataFrame(&#123;k:d['開盤價'] for k,d in data.items()&#125;).transpose()open.index = pd.to_datetime(open.index)high = pd.DataFrame(&#123;k:d['最高價'] for k,d in data.items()&#125;).transpose()high.index = pd.to_datetime(high.index)low = pd.DataFrame(&#123;k:d['最低價'] for k,d in data.items()&#125;).transpose()low.index = pd.to_datetime(low.index)volume = pd.DataFrame(&#123;k:d['成交股數'] for k,d in data.items()&#125;).transpose()volume.index = pd.to_datetime(volume.index) 大家有沒有發現，相同的東西抄了五次，但我們拿出來的不是close，是open、high、low 跟 volume。把所有的東西都統整好。統整好後，再將我們想看的股票拿出來，我們以近年超紅的台積電。 把其中的股票拿出來，變成 dict 結構123456789tsmc = &#123; 'close':close['2330']['2017'].dropna().astype(float), 'open':open['2330']['2017'].dropna().astype(float), 'high':high['2330']['2017'].dropna().astype(float), 'low':low['2330']['2017'].dropna().astype(float), 'volume': volume['2330']['2017'].dropna().astype(float),&#125;tsmc['close'].plot() 花這麼久時間，tsmc 這個結構有什麼用？來，接下來我們配合一個超厲害的python package：talib。安裝talib不是直接pip install那麼簡單，請參考python talib 的網頁 來安裝。 接下來任意找出105種指標！ KD 值計算KD指標12345678910111213from talib import abstractdef talib2df(talib_output): if type(talib_output) == list: ret = pd.DataFrame(talib_output).transpose() else: ret = pd.Series(talib_output) ret.index = tsmc['close'].index return ret;talib2df(abstract.STOCH(tsmc)).plot()tsmc['close'].plot(secondary_y=True) 其中，最重要的是第 9 行，我們利用 abstract.STOCH 這個函式，來計算KD值，計算好後，再由talib2df將格式轉換成 dataframe 方便我們畫圖。第 10 行是說，我們想要同時顯示tsmc的收盤價，secondary_y 是說我們需要用第二個 y軸，因為KD我們知道是在0～100之間，而台積電股價在200左右。 以下就是我們的成品，橘色、藍色代表的就是KD值。而紫色的就是收盤價！ 收盤價對應到右邊的 y 軸，而左邊的y 軸則是 KD 值。 MACD 計算這還不夠酷炫，以上的鋪陳都是為了接下來的爽： MACD 計算12talib2df(abstract.MACD(tsmc)).plot()tsmc[&apos;close&apos;].plot(secondary_y=True) 只要把STOCH改成MACD就好了，各種指標隨便用： OBV計算OBV 計算12talib2df(abstract.OBV(tsmc)).plot()tsmc[&apos;close&apos;].plot(secondary_y=True) 威廉指數計算WILLR 計算12talib2df(abstract.WILLR(tsmc)).plot()tsmc[&apos;close&apos;].plot(secondary_y=True) ATR 計算ATR 計算12talib2df(abstract.ATR(tsmc)).plot()tsmc[&apos;close&apos;].plot(secondary_y=True) 我的天所以到底有幾種指標？！總共有 all indicators1talib.get_functions() 這些就是可以用的指標，總共有158種，慢慢看，學也學不完XDD。 改變參數之前不是說KD指標有三個參數：（9、3、3），假如今天我想要客製化，怎麼修改呢？我們現在只知道KD指標是 abstract.STOCH 這個function，要如何看如何設定呢？直接 print 這個函式看看： function detail1print(abstract.STOCH) 我們可以改變得參數是 Parameters 項目中的五個，可以看到假如什麼都不輸入的話，它的值預設是（5、3、0、3、0），這邊的0代表的就是平滑的演算法式哪一種，例如我們希望它的三個參數不要是（5、3、3），想改成台灣常用的（9、3、3），也就是我們想把 fast_period從原本的5改成9，只要在呼叫 talib.abstract.STOCH 的時候輸入 fastk_period=9 就可以了： MACD 計算12talib2df(abstract.STOCH(tsmc, fastk_period=9)).plot()tsmc[&apos;close&apos;].plot(secondary_y=True) 今天教了大家這麼多的index，大家幾乎可以做自己的玩股網，Cmoney了，再配合上次教的用pandas選股，一個系統就快被搭建起來了！ 接下來，你應該會想要建立自己的回測系統吧！不妨看一下這篇文章喔！","raw":null,"content":null,"categories":[{"name":"財經Python教學","slug":"財經Python教學","permalink":"https://www.finlab.tw/categories/財經Python教學/"}],"tags":[{"name":"python","slug":"python","permalink":"https://www.finlab.tw/tags/python/"},{"name":"程式交易","slug":"程式交易","permalink":"https://www.finlab.tw/tags/程式交易/"}]},{"title":"Python 時間序列實做！","slug":"Python-時間序列實作！","date":"2017-11-15T06:03:03.000Z","updated":"2020-06-05T07:29:48.084Z","comments":true,"path":"Python-時間序列實作！/","link":"","permalink":"https://www.finlab.tw/Python-時間序列實作！/","excerpt":"","text":"之前我們介紹了很多爬蟲，可以爬每天、每月、每季的資料，今天就是要交爬完了之後要怎麼運用。這篇文章會教如何將爬下來的資料整理成 time series （時間序列） 每日爬蟲首先，我們將之前一篇：超簡單台股每日爬蟲教學 所分享的程式碼變成以下的function，方便我們多次呼叫，才能爬每一天的股價。 每日股價爬蟲123456789101112131415161718import requestsfrom io import StringIOimport pandas as pdimport numpy as npdef crawl_price(date): r = requests.post('http://www.twse.com.tw/exchangeReport/MI_INDEX?response=csv&amp;date=' + str(date).split(' ')[0].replace('-','') + '&amp;type=ALL') ret = pd.read_csv(StringIO(\"\\n\".join([i.translate(&#123;ord(c): None for c in ' '&#125;) for i in r.text.split('\\n') if len(i.split('\",')) == 17 and i[0] != '='])), header=0) ret = ret.set_index('證券代號') ret['成交金額'] = ret['成交金額'].str.replace(',','') ret['成交股數'] = ret['成交股數'].str.replace(',','') return ret 就跟之前是一樣的，只是被包成 function ，它的 input 是日期，output 是 dataframe，寫程式最重要的就是瞭解 input 跟 output 的型態，就會比較簡單了！ 呼叫每日爬蟲，連續爬 n 天接下來我們就來利用這個 function 幫我們爬最近9天的資料，並將數據存在 data 這個 variable 中： 一次爬 n_days 天的股價1234567891011121314151617181920212223242526272829import datetimeimport timedata = &#123;&#125;n_days = 9date = datetime.datetime.now()fail_count = 0allow_continuous_fail_count = 5while len(data) &lt; n_days: print('parsing', date) # 使用 crawPrice 爬資料 try: # 抓資料 data[date.date()] = crawl_price(date) print('success!') fail_count = 0 except: # 假日爬不到 print('fail! check the date is holiday') fail_count += 1 if fail_count == allow_continuous_fail_count: raise break # 減一天 date -= datetime.timedelta(days=1) time.sleep(10) 想要增加天數，只要調整 n_days 這個參數就行了！一切都順利的話，會顯示成以下這樣： 大部分的天數都是 success 代表成功讀取資料，但是每間隔5天就會顯示兩次 fail，代表那可能是假日，然而不能保證就是了，也可能是你的網路斷掉XD，或是 code 有bug，就要單獨做測試，至少在我的電腦裡，它抓的滿好的。 整理 data 轉成 收盤價 time series接下來我們來看一下得到了什麼： 我們像上圖一樣，只拿取 “2019-06-05” 號的股價，會像上面這樣，變換不同的日期，可以得到不同的表。但這並不是我們想要的，我們想要有 time series，也就是看到某個欄位隨時間變動的圖表，於是我們做以下的轉換： 123close = pd.DataFrame(&#123;k:d['收盤價'] for k,d in data.items()&#125;).transpose()close.index = pd.to_datetime(close.index)close 在上面的程式中，現在我們只拿所有股票的 收盤價，並建構 close 這個 dataframe，這個 dataframe，假如你還不知道什麼是 dataframe，或對 dataframe 還不熟，可以參考連結學習一下。 輸入後會看到以下成品： 現在整張表都只剩 收盤價 了，而且還是按照日期排列，超讚的！我也覺得很開心，竟然兩行就處理完，可見pandas真的很厲害！ 時間序列還有非常多功用！接下來我們就來實做一百種指標吧！","raw":null,"content":null,"categories":[{"name":"財經Python教學","slug":"財經Python教學","permalink":"https://www.finlab.tw/categories/財經Python教學/"}],"tags":[{"name":"python","slug":"python","permalink":"https://www.finlab.tw/tags/python/"},{"name":"KD","slug":"KD","permalink":"https://www.finlab.tw/tags/KD/"},{"name":"程式交易","slug":"程式交易","permalink":"https://www.finlab.tw/tags/程式交易/"}]},{"title":"如何定義KD鈍化","slug":"KD1","date":"2017-11-14T07:22:16.000Z","updated":"2020-06-05T07:29:48.110Z","comments":true,"path":"KD1/","link":"","permalink":"https://www.finlab.tw/KD1/","excerpt":"","text":"謝謝大家的鼓勵，最近有點太忙了，加上懶惰蟲上身，上禮拜中斷了XD，這禮拜會繼續加油！希望可以知道大家最想要看什麼，有看到留言說希望可以增加 python 有關的教學文！收到了，甚至可以更仔細說明，例如爬哪個網站之類的，我都可以幫你寫喔！大家想要看什麼可以在下面留言！ 今天先來看一下KD值好了，畢竟都還沒有看到太多指標相關的文章，其實KD值是非常簡單的，但在這邊我不想要介紹公式，因為太無聊了，而且每次看每次忘，我只想介紹如何看KD，以及參數如何設定： KD 的意義KD就是像坊間說的，兩條線，K跟D，一條反應較快，一條慢，都介於0～100之間。其意義在於股票在n天之內的相對位置，相對位置就是指n天內的最高最低，將當前的股價做normalize。 給一個簡單的例子，例如今天全班考試，有人拿30分，請問他考的好不好？ 答案是：不知道，因為沒有辦法比較，說不定考卷很難，30分就是全班最高分了！要是考卷出太難，大家的成績介於10～30之間，那老師就可以做 normalize 讓成績分佈好看一點： 新成績 = ( 成績 - 10 ) / (30 - 10) 這樣子，考最好的人就是100分，而考最爛的人就是0分，這個就是KD指標的意義，而每個學生的成績，就是每日的收盤價。 最後我們將 新成績 對時間平滑一次，變成K值，再對K值平滑一次，變成D值。 KD 的參數介紹完之後，K D 指標的參數就很好理解了： 9天：只考慮9天內的最高最低 3天：K的平滑 3天：D的平滑 平滑數字越大，數字變動越慢，雜訊越少平滑數字越小，數字變動越快，雜訊越多 我們用台積電為例子： 以上就是用正統的參數：9、3、3的KD指標（橘色、綠色），紫色是股價，可以看到KD值低檔交叉，算是好買點，最近就等著台積點低於20 XDD，（隨便說的，不是投資建議），我們試著換一個參數（9、6、6）看看： 可以看到曲線比較平滑一點，且K跟D差距比較明顯，相較於第一張圖，8月初比較不會有雜訊，但是反應變慢很多。 KD 坊間策略大家都說K超越D時，代表黃金交叉，可以買進K落於D時，代表死亡交叉，可以賣出 真的是這樣嗎？讓我們來看看： 黃金交叉買，死亡交叉賣： 參數（9,3,3）勝率：0.386參數（45,15,15）勝率：0.407參數（180,60,60）勝率：0.364 以下是這三個參數的獲利曲線： 結果好像不太好，看來真的不太能直接用，尤其短週期的KD，進出太平凡，導致手續費飆高，根本就是一直賠錢（紅色），用長週期的KD才稍微好轉。而藍線（不考慮手續費），則是中間的（類似週KD）表現比較好，但總之效果都不太好XD。 KD 鈍化另外一個網路上的偏方：KD鈍化，但大家沒有定義什麼時候賣，也沒有數據顯示幾天賣比較好，於是我們就來做個實驗： 買入條件：k, d （參數為 9，9，3）都大於80，至少 n 天則買入賣出條件：m 天賣出 當然還有很多種買法我沒測過，有興趣的話可以在下面留言，我幫你測！ 色溫越暖，代表10年獲利越高，這張圖的 x軸 為 m 天， y軸 為 KD大於80 至少 n 天，可以發現，幾乎十幾個交易日賣出是最保險的，而5~6天連續高檔，代表鈍化，會有比較好的效果，第十天突然異軍突起，超紅，可能有些股票末路狂飆吧。。。 然而上述是不考慮手續費的情況，所以當我們將最好的一組參數(10,12)拿來跑回測，會是這個樣子： 藍線代表沒有考慮手續費，一飛沖天紅現代表考慮手續費，完全沒賺到什麼錢 看來手續費真的差很大，短線選股真的是比較困難，但滿有潛力的就是了。 以下是我調整後覺得最好的參數： KD（5、3、3）連續10天大於75時買進 30 天 扣除手續費後終於贏過大盤！不知道KD拿來加入其它策略效果如何？另外，也可以跟我說想要看到哪一類的文章，或有什麼技術上的問題，都歡迎留言喔！","raw":null,"content":null,"categories":[{"name":"指標分析","slug":"指標分析","permalink":"https://www.finlab.tw/categories/指標分析/"},{"name":"技術面","slug":"指標分析/技術面","permalink":"https://www.finlab.tw/categories/指標分析/技術面/"}],"tags":[{"name":"簡易策略","slug":"簡易策略","permalink":"https://www.finlab.tw/tags/簡易策略/"},{"name":"如何買股票","slug":"如何買股票","permalink":"https://www.finlab.tw/tags/如何買股票/"},{"name":"選股策略","slug":"選股策略","permalink":"https://www.finlab.tw/tags/選股策略/"},{"name":"歷史回測","slug":"歷史回測","permalink":"https://www.finlab.tw/tags/歷史回測/"}]},{"title":"Python：利用Pandas輕鬆選股","slug":"Python：利用Pandas輕鬆選股","date":"2017-11-08T07:16:44.000Z","updated":"2020-06-05T07:29:49.794Z","comments":true,"path":"Python：利用Pandas輕鬆選股/","link":"","permalink":"https://www.finlab.tw/Python：利用Pandas輕鬆選股/","excerpt":"","text":"上一篇的Python教學中，我們學會了怎麼爬財報，但是爬完的資料要怎麼運用呢？這篇會給大家一些方向。那篇有點不好意思，好像有兩個package沒有import，下次發現的話，可以在下方留言告訴我，我會盡快更正。 今天這篇的前置作業，請參考連結把當中的function給copy過來，然後就開始吧！ 資料處理首先，我們要先使用這個function，可以直接在jupyter視窗內輸入，來取得爬取今天的主角：”營益分析彙總表” 利用上次的爬蟲取得資料12df = financial_statement(107, 2, '營益分析彙總表')df 第一行，我們將 “營益分析彙總表” 儲存在 df 這個變數之中，第二行，我們希望將 df 給顯示出來，看一下它長什麼樣子第二行的功能是只有在jupyter 這個IDE才看的到喔～假如是寫在python script的話，就要用 print(df) 。假如一切OK就會是以下的樣子： 我們觀察一下這張表，有一行真的詭異：”合計：共 808 家” ，這行完全沒有任何可以用的資料，所以我們將它刪除： 刪除其中一行1df = df.drop(['合計：共 808 家'], axis=1) 接下來我們發現 index （每一列）的命名很怪，怎麼用 1,2,3… 來命名呢，應該要用公司名稱！？我們將股票的名稱當成新的 index： 將index換成公司名稱1df = df.set_index(['公司名稱']) 最後一步，我們希望資料欄位中，所有的元素都是 float ，所以要做一次轉換： 轉換成數值1df = df.astype(float) 資料處理一行版這樣就沒問題了！其實有個更快速的寫法，將以上三件事情寫成一行： 一行直接處理1df = df.drop(['合計：共 808 家'], axis=1).set_index(['公司名稱']).astype(float) 這樣就可以一次處理好！ 簡單的取出行列：我想單選出毛利率： 取得毛利率1df['毛利率(%)(營業毛利)/(營業收入)'] 假如今天我只想看 台積電 表現如何： 取得台積電資料1df.loc['台積電'] 取每一欄，跟取每一列，語法不太一樣喔！要小小注意一下。 假如我想同時看 台積電 跟 聯發科： 取得TSMC跟MTK的資料1df.loc[['台積電', '聯發科']] 數值分析接下來我們稍微分析一下這個表中的數字：數值分析1df.describe()這樣簡單一行，就可以得到每一欄的數值分析，當初我知道這個 df.describe() 也覺得很神。 毛利率分佈圖只要簡單一行，我們就可以看到全台灣的上市公司，毛利率分佈圖： 毛利率分佈圖12％matplotlib inlinedf['毛利率(%)(營業毛利)/(營業收入)'].hist(bins=range(-100,100)) 選股選股也很簡單，只要寫成以下條件： 條件12cond1 = df['毛利率(%)(營業毛利)/(營業收入)'].astype(float) &gt; 20cond2 = df['營業利益率(%)(營業利益)/(營業收入)'].astype(float) &gt; 5 就是說 第一個欄位：毛利率，我們希望找出大於20的 股票另外呢 第二個欄位：營業利益率，我們希望找出大於5的 股票 那我們就可以用這兩個條件來選股： 選股1df[cond1 &amp; cond2] 搭啦！其實外面的選股軟體也就這樣而已啦！還收費這麼貴XDD 如果你覺得觀賞這個blog有點收穫，記得存到我的最愛定期觀看喔！我每個禮拜都會有一些更新。 這次教學的檔案：notebook.ipynb檔","raw":null,"content":null,"categories":[{"name":"財經Python教學","slug":"財經Python教學","permalink":"https://www.finlab.tw/categories/財經Python教學/"}],"tags":[{"name":"python","slug":"python","permalink":"https://www.finlab.tw/tags/python/"},{"name":"選股","slug":"選股","permalink":"https://www.finlab.tw/tags/選股/"},{"name":"程式交易","slug":"程式交易","permalink":"https://www.finlab.tw/tags/程式交易/"}]},{"title":"超短線上影黑密技！","slug":"超短線上影黑密技！","date":"2017-11-03T10:44:31.000Z","updated":"2020-06-05T07:29:47.359Z","comments":true,"path":"超短線上影黑密技！/","link":"","permalink":"https://www.finlab.tw/超短線上影黑密技！/","excerpt":"","text":"很多來拜訪本blog的人，都是搜尋 “財報狗” 來的，大部分都是價值投資策略，而沒有使用技術分析，或曾經使用技術分析，因為太難用了而放棄。價值投資跟技術分析最大的差異是，價值投資看的財報是經過嚴格審核的精確數字，而技術分析是在看雜訊中找規律。 有人會說價值投資，是學會看一家公司的價值，而不像技術分析，是在玩股票。我覺得各有各的好，都是在一堆數字裡面找規律，只要不要被股票玩，哪一種策略我都願意接受XDD。 今天想當一下標題黨，我幫這個策略取了一個超級中二的名字：”超短線上影黑密技”，無論看幾眼都覺得很彆扭，但是還是讓我一一的解釋每個字的用意： 超短線這個絕對是 “日” 週期裡面，最短的策略了，因為這個策略持股一天隔天直接賣出，適合不想要跟某支股票產生愛恨情仇，喜歡斬釘截鐵，無情操作的人。 上影這絕對不是火影忍者裡的上忍、火影，其實是個上影線策略，也就是當看到上影線，那代表這支股票可以空，當然也沒這麼簡單，要有一層層過濾。 黑黑就是指下跌的意思，這是一個空股票的策略，我不常寫空股票的策略，因為本身沒有在融資融券，但就是因為很少有人空股票，這個策略才沒有因為被挖掘而失效，放空有時候比看多的策略好寫。 密技好啦，其實這也不算什麼密技，上影線大家也不是不知道： 大家都說看到上影線，代表要下跌了，但是這是很不負責任的介紹，因為沒人跟你講會跌多少？上影線多長算長？什麼時候買賣？完全沒有數據，頂多是附圖說，你看這支股票，上影線出現後一路跌。 策略人多口雜，沒有回測看看就好同樣上影線，可以找到100張K線圖，驗證之後真的會跌，反過來，也可以找到100張K線圖，驗證之後其實會漲。 看過很多自稱是技術分析高手，分享一些方法，KD、MACD、OBV什麼都用上了，回測起來績效不太好，也不知道他是靠投資掙錢，還是靠嘴\b掙錢。也看過一些人，突然PO文說自己打開多年投資經驗的任督二脈，把blog加密起來，付費觀看，火紅一時。然而過了半年，那個人不見了，消失在茫茫股海中，應該是他的策略就好這麼幾個月，之後就爛掉了XDD。 回測的重要性所以我覺得回測很重要，才能知道是否安穩的獲利，而且還不用每天盯盤。可能有人會反問： W 底要怎麼回測？有些型態學根本不可能寫程式怎麼辦？要是我的話，就會選擇不用，反正還有其它的策略可以用，我比較膽小，只用有驗證過的策略XD。 策略突然啪啦啪啦寫了一堆，不好意思讓各位眼睛痛了，以下就是本篇策略： 上影線佔 60% （（高 - max(收, 開)）／（高 - 低）&gt; 0.6） 突然放量 （成交量 &gt; 十日均量 * 4） 流動率高 （十日均量 &gt; 1000） 股票不在高檔 （收盤 - 120日最低價）/ (（120日最高價 - 120日最低價）&lt; 0.7 第四條拿出來說明一下，高檔的股票，有時候會被主力炒作，太飆了，還是不要拿來放空比較好XD。 以下的權益曲線是空1天，即回補，我另外有測試n天的，基本上獲利更高，但曲線比較不好看。 但這個策略沒有加上手續費，槓桿是調整成0，但假如考慮融券手續費，效果可能就沒那麼好就是了，當沖手續費低會更好？滿有可能的。 下圖是 賣出/買入 價格的漲跌分佈圖： 我們可以看到，這些股票下跌（小於1）的數目真的比較多（橘色），然而加上手續費（約千分之8），後，就沒有這麼明顯了（淺藍色），手續費多少是關鍵！像我這種散戶，手續費太高自然是無法使用這個策略QQ。 可以看到每年都只買了超少次，而且快進快出，大部分時候是空手狀態，很輕鬆。 可以看到最大虧損也不是很嚴重，尤其時近期，幾乎很少虧損到20%的投資資產。 當然，大部分的策略看看就好，這個策略也是（由於手續費的關係），重點應該是學到一些東西，以下列舉此篇的重點： 用簡單的公式看股價高檔低檔（條件4） 股票不再高檔、近期上影線放量，假如想放空，可以空n天，(n&lt;10)回測獲利都是很可觀，持有時間長，股價漲跌波動大，可以淡化手續費的影響，但持有時間越長，權益曲線越不美。 股票不在高檔、近期上影線放量，假如想買多，隔幾天再買入\u001f較可能買到更好的價格！（假如你用的是長線策略） 假如大家有興趣，我想找時間來跑一些統計結果，看看上影線對於股價的影響。假如覺得本blog還可以的話，可以定期來觀看～我每個禮拜都會更新幾篇喔！","raw":null,"content":null,"categories":[{"name":"指標分析","slug":"指標分析","permalink":"https://www.finlab.tw/categories/指標分析/"},{"name":"技術面","slug":"指標分析/技術面","permalink":"https://www.finlab.tw/categories/指標分析/技術面/"}],"tags":[{"name":"簡易策略","slug":"簡易策略","permalink":"https://www.finlab.tw/tags/簡易策略/"},{"name":"如何買股票","slug":"如何買股票","permalink":"https://www.finlab.tw/tags/如何買股票/"},{"name":"選股策略","slug":"選股策略","permalink":"https://www.finlab.tw/tags/選股策略/"},{"name":"歷史回測","slug":"歷史回測","permalink":"https://www.finlab.tw/tags/歷史回測/"}]},{"title":"Python 超簡單 - 財報爬蟲一次抓（綜合損益、資產負債、營利分析）","slug":"Python-財報爬蟲-1-綜合損益表","date":"2017-11-02T14:19:27.000Z","updated":"2020-06-11T05:08:29.815Z","comments":true,"path":"Python-財報爬蟲-1-綜合損益表/","link":"","permalink":"https://www.finlab.tw/Python-財報爬蟲-1-綜合損益表/","excerpt":"","text":"本系列已經介紹了各式各樣的爬蟲，從每天、每月，現在終於要季了，在尋找了各式各樣的網站，交叉比對之下，發現公開資訊觀測站的總報表還滿好抓的，所以就從這個網站下手。 Python中有個非常好用的package，叫做pandas，利用它我們就可以簡潔的把網頁上的表格，轉換成dataframe，也就是整理成程式看的懂的表格，我們幾乎不需要做太多的處理！這也是我喜歡用python一點。 這邊我用的是python3 喔～可能要注意一下，另外pandas的版本不一樣，可能會導致網頁轉dataframe的時候，有點小不一樣，可能要稍微檢查一下，我是用0.20.3這個版本。 財報爬蟲1234567891011121314151617181920212223242526272829303132333435import requestsimport pandas as pdimport numpy as npdef financial_statement(year, season, type='綜合損益彙總表'): if year &gt;= 1000: year -= 1911 if type == '綜合損益彙總表': url = 'https://mops.twse.com.tw/mops/web/ajax_t163sb04' elif type == '資產負債彙總表': url = 'https://mops.twse.com.tw/mops/web/ajax_t163sb05' elif type == '營益分析彙總表': url = 'https://mops.twse.com.tw/mops/web/ajax_t163sb06' else: print('type does not match') r = requests.post(url, &#123; 'encodeURIComponent':1, 'step':1, 'firstin':1, 'off':1, 'TYPEK':'sii', 'year':str(year), 'season':str(season), &#125;) r.encoding = 'utf8' dfs = pd.read_html(r.text, header=None) return pd.concat(dfs[1:], axis=0, sort=False)\\ .set_index(['公司代號'])\\ .apply(lambda s: pd.to_numeric(s, errors='ceorce')) 這個function的用法，就跟月爬蟲是一樣的，可以直接輸入西元或國曆，然後第n季，只能輸入1～4季喔～不然會當掉，最後還要輸入哪一種財報： 綜合損益彙總表 資產負債彙總表 營益分析彙總表 都可以爬取喔！以下就是利用這個function所爬取的資料 大家可以看到有些columns怪怪的，例如 “合計：共 808 家” 這個是什麼鬼XDD，由於我一次爬了三個表，這一點小問題應該還好啦！XDD，可以再寫一行code刪除該列就好了。 基本上資料都是對齊的，不用太擔心。 爬完之後就交給大家自由發揮囉～～可以做很多事情。總算各種股價、財報、月報的爬蟲都分享完了～ 接下來就是真的利用這些資料來選股囉！","raw":null,"content":null,"categories":[{"name":"財經Python教學","slug":"財經Python教學","permalink":"https://www.finlab.tw/categories/財經Python教學/"}],"tags":[{"name":"python","slug":"python","permalink":"https://www.finlab.tw/tags/python/"},{"name":"選股","slug":"選股","permalink":"https://www.finlab.tw/tags/選股/"},{"name":"程式交易","slug":"程式交易","permalink":"https://www.finlab.tw/tags/程式交易/"}]},{"title":"外資大賣，反而要買！？","slug":"跟著外資買股票","date":"2017-10-30T06:57:49.000Z","updated":"2020-06-05T07:29:48.992Z","comments":true,"path":"跟著外資買股票/","link":"","permalink":"https://www.finlab.tw/跟著外資買股票/","excerpt":"","text":"外資近年來幾乎稱霸台股，每天台股上上下下，都得看它臉色，今天我們來進行簡單的參數優化，看看跟隨外資買賣有沒有搞頭！藉由程式交易，讓我們來找尋外資與股價的規律吧！ 最佳化外資買賣策略假設 n 天內外資總買賣超超過 a 張，則買入，而低於 -a 張，就賣出，我們可以得到一下這張表： 在上圖中，跑了25種不同的回測，每一次回測，n跟a的值都不一樣，紅色代表獲利較多的策略，而藍色代表獲利較少的策略，我們發現 a = 0 的時候結果普遍比較好，另外 n=10~30 天都是合理的選擇，太高或太低不夠具有代表性。 當然這樣的條件其實還是太弱了，完全沒辦法當作一個策略，一定得配合其它的條件，目前開發的策略中，我也有加入這個條件，有些策略無效，但有些績效明顯上升很多，可以把它想成一個助攻手。假如你本身也有寫偏短線的回測，可以將 外資10天買賣超 &gt; 0 這個條件加入看看，有時候效果會變好。然而，假如你沒有寫回測的話，其實外資買賣對你的影響有限，幾乎不需要管它。 外資大買大賣，跟著操作？外資已經很進步了，這個時代並不是看外資大買，隔天股票就會漲了，甚至，看到外資大買，隔天最好還是別輕舉妄動比較好，以下我做了兩個實驗，一個是外資大買，一個是外資大賣，不考慮手續費： 外資總買賣 - 昨天外資總買賣 &gt; 5000 （外資大買） 持該股兩天後賣出 外資總買賣 - 昨天外資總買賣 &lt; -5000 （外資大賣） 持該股兩天後賣出 你以為一號策略比較好嗎？ 錯… 我回測時也小震驚了一下，原來外資大買，隔天買入可能會不太好！還不如趁外資大賣的時候買。怎麼會這樣！？實在是太顛覆常理了… 上圖可以看出，策略2比策略1的報酬好很多。其結論是外資大買，請不要跟著買，因為說不定是外資太多人看了，導致股票隔天衝很高，導致買在高點。相反，大家看到外資大賣，也會恐慌性賣出，造成隔天開盤價格異常低，而剛好被我們買到了！賺到了短線價差。只能說，股票就是人性呀！大家還是太依賴外資籌碼了。總之假如你沒有好策略的話，請不要直接看外資來決定買什麼。","raw":null,"content":null,"categories":[{"name":"指標分析","slug":"指標分析","permalink":"https://www.finlab.tw/categories/指標分析/"},{"name":"籌碼面","slug":"指標分析/籌碼面","permalink":"https://www.finlab.tw/categories/指標分析/籌碼面/"}],"tags":[{"name":"簡易策略","slug":"簡易策略","permalink":"https://www.finlab.tw/tags/簡易策略/"},{"name":"如何買股票","slug":"如何買股票","permalink":"https://www.finlab.tw/tags/如何買股票/"},{"name":"選股策略","slug":"選股策略","permalink":"https://www.finlab.tw/tags/選股策略/"},{"name":"歷史回測","slug":"歷史回測","permalink":"https://www.finlab.tw/tags/歷史回測/"},{"name":"程式交易","slug":"程式交易","permalink":"https://www.finlab.tw/tags/程式交易/"}]},{"title":"超簡單用python抓取每月營收","slug":"超簡單用python抓取每月營收","date":"2017-10-28T12:30:39.000Z","updated":"2020-06-05T07:29:49.014Z","comments":true,"path":"超簡單用python抓取每月營收/","link":"","permalink":"https://www.finlab.tw/超簡單用python抓取每月營收/","excerpt":"","text":"今天承接上次的超簡單python系列，教大家如何得到每家企業每個月的營收。這個系列的最終目的就是讓大家可以創造自己的投資自動化程式，甚至擁有自己的看盤軟體。 真的不要把程式交易想像的很難，感覺爬2000多支股票，並整理資料，好像是一件很累很痛苦的是情，但真的只需要30行，你可能會覺得這些代碼真的太短了，但真的就是這麼短，然而這必須建立在python或是R，這些package豐富的腳本語言才有可能辦到，這兩個語言都不錯，但我比較喜歡寫python就是了XD，因為python還可以做很多酷炫的事情，例如寫server，或是一些自動化工具，然而R好像沒有這麼多功能？ 那我們就來爬取吧！首先先決定要爬哪個網頁，我選擇的是TWSE官方網頁它的網址是http://mops.twse.com.tw/nas/t21/sii/t21sc03_103_2_0.html 各位有看到103這個數字嗎？其實這個就是年份，而緊接在後面的 “2” 就是月份，所以只要改動這兩個值，我們就可以下載不同年月的歷史資訊： 月爬蟲12345678910111213141516171819202122232425262728293031323334353637383940import pandas as pdimport requestsfrom io import StringIOimport timedef monthly_report(year, month): # 假如是西元，轉成民國 if year &gt; 1990: year -= 1911 url = 'https://mops.twse.com.tw/nas/t21/sii/t21sc03_'+str(year)+'_'+str(month)+'_0.html' if year &lt;= 98: url = 'https://mops.twse.com.tw/nas/t21/sii/t21sc03_'+str(year)+'_'+str(month)+'.html' # 偽瀏覽器 headers = &#123;'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36'&#125; # 下載該年月的網站，並用pandas轉換成 dataframe r = requests.get(url, headers=headers) r.encoding = 'big5' dfs = pd.read_html(StringIO(r.text), encoding='big-5') df = pd.concat([df for df in dfs if df.shape[1] &lt;= 11 and df.shape[1] &gt; 5]) if 'levels' in dir(df.columns): df.columns = df.columns.get_level_values(1) else: df = df[list(range(0,10))] column_index = df.index[(df[0] == '公司代號')][0] df.columns = df.iloc[column_index] df['當月營收'] = pd.to_numeric(df['當月營收'], 'coerce') df = df[~df['當月營收'].isnull()] df = df[df['公司代號'] != '合計'] # 偽停頓 time.sleep(5) return df 以上這段程式碼就是一個function可以在其它地方隨時呼叫，code真的超短，但這樣就夠了！ 接下來我們隨意讀取任意年月份（可以用民國或是西元都支援）： 月爬蟲1234567# 民國100年1月monthly_report(100,1)# 西元2011年1月monthly_report(2011,1) 就會跑出以下的表格： 其實寫程式真的好簡單XDD，坊間財經軟體都好貴，不就是幾行code而已，是不是！目前已經交完 日、月 的資料爬取了，下一次就是一季囉！ 當然還有各式各樣可以爬的東西，有時間再跟大家介紹～","raw":null,"content":null,"categories":[{"name":"財經Python教學","slug":"財經Python教學","permalink":"https://www.finlab.tw/categories/財經Python教學/"}],"tags":[{"name":"python","slug":"python","permalink":"https://www.finlab.tw/tags/python/"},{"name":"程式交易","slug":"程式交易","permalink":"https://www.finlab.tw/tags/程式交易/"},{"name":"月營收","slug":"月營收","permalink":"https://www.finlab.tw/tags/月營收/"}]},{"title":"本益成長比真的越低越好！？","slug":"比本益比更好用的本益比成長率！","date":"2017-10-26T07:58:56.000Z","updated":"2020-06-05T07:29:48.695Z","comments":true,"path":"比本益比更好用的本益比成長率！/","link":"","permalink":"https://www.finlab.tw/比本益比更好用的本益比成長率！/","excerpt":"","text":"很久之前有寫過 本益比 如何使用，本益比 就是看企業股價和獲利之間的關係，選擇小一點的本益比是可以幫助我們選到好股票的，但是每一家公司的本益比都有著天壤之別，所以必須要校正， 本益成長比 就是一個本益比的進化版。本益成長比 不只可以看當下，還考慮了一家公司未來是否能繼續盈利一個指標。 以下是 本益成長比 的公式： 近4季稅後淨利年增率：(近4季稅後淨利總和 / 去年同期近4季稅後淨利總和 - 1) * 100%本益成長比（PEG）：本益比/近4季稅後淨利年增率 看起來考慮了公司的成長，所以當PEG越小，代表 本益比 越小或是 淨利年增率 越大，對投資人來講都是好事情！ 理論上是這樣，而實際上真的是這樣嗎？我們不妨接著看！ 首先我們先算出當前所有上市上櫃其PEG的分佈圖： 可以發現越接近0的越多公司，這種分佈還滿奇特的，我以為接近0的公司會很少才對，沒想到事實竟然跟我想像的相反，感覺好像很多公司的淨利年增率很猛！然而假如我哪裡做錯了，可以直接留言糾正我。 我們就將公司分成好幾組，每60天選擇PEG在只定範圍內的股票，就可以畫成下圖： 簡直有夠亂…這說明了PEG難道無效？！感覺是真的很難分辨出越小越好，還是越大越好…，所以我們再畫另一張圖，更好的判斷PEG大小跟獲利的高低： 圖中的X軸是PEG從小到大，而Y軸是平均獲利，我們發現，當PEG太大獲利真的很差。但當PEG非常小的時候，效果也非常不好。PEG約等於0.5的時候，會有最好的獲利。 只能說PEG在台股可能不是非常的好用，PEG不能一味的追求越小越好，最好選擇PEG等於 0.5 左右的股票，歷史回測會有比較好的結果。 我覺得另一個可能的原因是，當PEG過小的時候，可能選入了一些短期內獲利爆起爆落的公司，其公司股價可能先盛後衰，造成投資上的虧損。但我不太確定，還必須做更多功課才能釐清。 總之以統計的結果來看，PEG並沒有特別顯著的功能，相較於其它介紹過的指標。也有可能是我實驗那裡做錯了，可以留言跟我討論，我會儘速更改！確保大家獲得正確的內容～！","raw":null,"content":null,"categories":[{"name":"指標分析","slug":"指標分析","permalink":"https://www.finlab.tw/categories/指標分析/"},{"name":"基本面","slug":"指標分析/基本面","permalink":"https://www.finlab.tw/categories/指標分析/基本面/"}],"tags":[{"name":"選股","slug":"選股","permalink":"https://www.finlab.tw/tags/選股/"},{"name":"本益比","slug":"本益比","permalink":"https://www.finlab.tw/tags/本益比/"},{"name":"指標","slug":"指標","permalink":"https://www.finlab.tw/tags/指標/"},{"name":"PEG","slug":"PEG","permalink":"https://www.finlab.tw/tags/PEG/"},{"name":"本益成長比","slug":"本益成長比","permalink":"https://www.finlab.tw/tags/本益成長比/"}]},{"title":"超簡單台股每日爬蟲教學","slug":"超簡單台股每日爬蟲教學","date":"2017-10-24T16:17:06.000Z","updated":"2020-06-05T07:29:47.688Z","comments":true,"path":"超簡單台股每日爬蟲教學/","link":"","permalink":"https://www.finlab.tw/超簡單台股每日爬蟲教學/","excerpt":"","text":"今天教大家如何下載今日的股價，並從中篩選本益比較低的股票，重點是超簡單，只要15行以內就可以辦到！以後這個blog會偶爾釋放一些程式片段，讓大家組裝成一個功能健全的回測＋當日選股的架構。 大家最終最終會學到： 如何爬取每日資訊 如何爬取財報 利用上述資料來篩選股票 觀察篩選後的股票在歷史回測中是否能獲利 每日計算當天獲利與明天操作 只要長期追蹤這個blog，當我某天心血來潮就會放上一些code，讓大家能夠自行學習並拼裝成自己的系統，以下是我的系統的截圖： 可以看到我的系統內每天都有數個程式交易策略在運行，選股策略每天會公布隔天的操作方式，也可以利用這個介面編寫回測，並驗證策略的效果。磁力回測是我們之前黑客松比賽用的名字，其實我們是台大黑客松第一名得獎團隊，後來又於中信金控黑客松得到第一名，才開始了量化回測之路，現在由於大家比較忙，目前只剩我還在使用這套系統而已XDD。 這套系統非常完善，我們編寫了幾套策略在上面，獲利還算OK，當然我不可能直接把這套系統公布出來，畢竟這是大家一起做的心血，然而有一些簡單卻重要的功能，我會在這個blog上面分享給大家。只要持續關注本blog，最後大家可以拼裝出自己的系統！ 那就廢話不多說，來看看如何使用 python 爬取當天大盤，首先，我們得先安裝 python 的 package： requests ：幫我們抓取 csv 檔 pandas：幫我們選股 假如懶得安裝的話，也可以用雲端colab直接執行程式，來看看程式怎麼運作的喔！https://colab.research.google.com/drive/1MgGot14B_nynU4nf4SeJF2UbphubXO8o 然後就可以開始了，首先抓取台股的資料表： crawler12345678910111213141516171819import requestsfrom io import StringIOimport pandas as pdimport numpy as npdatestr = '20180131'# 下載股價r = requests.post('https://www.twse.com.tw/exchangeReport/MI_INDEX?response=csv&amp;date=' + datestr + '&amp;type=ALL')# 整理資料，變成表格df = pd.read_csv(StringIO(r.text.replace(\"=\", \"\")), header=[\"證券代號\" in l for l in r.text.split(\"\\n\")].index(True)-1)# 整理一些字串：df = df.apply(lambda s: pd.to_numeric(s.astype(str).str.replace(\",\", \"\").replace(\"+\", \"1\").replace(\"-\", \"-1\"), errors='coerce'))# 顯示出來df.head() 基本上這個 code 可以直接複製貼上就可以用了！我們可以把df印出來： 可以看到我們有了所有上市的股票，當天所有的資料！ 接下來就是選股時間，我們想要選擇 本益比 &lt; 15 的所有股票： select stocks1df[pd.to_numeric(df['本益比'], errors='coerce') &lt; 15] 搭拉！是不是發現選股好簡單！我們之後還會有更多的教學，讓大家不只是選取本益比，還有更多更多的財報數據喔！ 但是有個問題，以上的範例只是爬取一天的股價，要是我想要爬很多的的要怎麼辦呢？可以參考時間序列實做這篇文章將所有的股價整理成時間序列喔！","raw":null,"content":null,"categories":[{"name":"財經Python教學","slug":"財經Python教學","permalink":"https://www.finlab.tw/categories/財經Python教學/"}],"tags":[{"name":"python","slug":"python","permalink":"https://www.finlab.tw/tags/python/"},{"name":"選股","slug":"選股","permalink":"https://www.finlab.tw/tags/選股/"},{"name":"程式交易","slug":"程式交易","permalink":"https://www.finlab.tw/tags/程式交易/"}]},{"title":"絕無僅有的超強指標！","slug":"絕無僅有的超強指標！","date":"2017-10-23T12:24:24.000Z","updated":"2020-06-05T07:29:49.232Z","comments":true,"path":"絕無僅有的超強指標！/","link":"","permalink":"https://www.finlab.tw/絕無僅有的超強指標！/","excerpt":"","text":"今天介紹一個滿常使用的指標，這套指標是我個人發明的，外面絕對看不到，然而我只講個大概，可以自己去實做，或是去拿來衡量個股。 上一篇中，機器學習發現月收入是一個很好的指標，而且不能只看最近一個月，要一次看好幾個月，其實跟我做出來的實驗結論一致。月收入真的非常好用！ 今天介紹的這個指標，其概念是：希望某股月營收越來越高，之後股價越容易上漲。但是很難定義越來越高，因為有時候會有一些不規則的地方，我們必須要先做一道手續讓它看起來是一個升冪排列，如下圖： 原本的月營收為橘色，雖然看起來有上漲的趨勢，但是參差不齊，所以很難寫成程式判斷條件。可以看到我們把每三個月做一次平均，可以發現曲線變得更平滑了，而且變成升冪排列！ 所以我們就可以寫一個條件，叫做：藍色線段連續N個月越來越大。 這樣篩選出來的股票真的很猛！ 下圖可以看出，假如我們持有這個方法篩選出來的股票，光是這個單一指標從2008年到現在有5倍的績效，我們可是只用了這個指標而已！算是蠻難能可貴的。 而且選出來很多股票，還有很多過濾的空間！可以從中再繼續篩選股票，這個是我動不動就會幫策略加上的一個條件！ 其中還可以再篩選，例如本益比、股價淨值比等等，可以自由搭配！ 這個指標有兩個參數： 當我們要平滑月營收曲線時，取最近的 M 個值平均，產生新的曲線 新的曲線連續 N 個月不斷變高。 M 跟 N 是很難決定的，我這邊所使用的參數是 M=4 跟 N=5，是試過所有參數的結果。當然大家不一定要用這麼數學的方式，每一支股票拿來慢慢算。最簡單的方法就是用眼睛感覺，股票月營收從大趨勢看，有沒有越來越高，偶爾的參差不齊可以忽略。 以上就是個人覺得超好用的，且網路上沒人在分享的方法！","raw":null,"content":null,"categories":[{"name":"指標分析","slug":"指標分析","permalink":"https://www.finlab.tw/categories/指標分析/"},{"name":"基本面","slug":"指標分析/基本面","permalink":"https://www.finlab.tw/categories/指標分析/基本面/"}],"tags":[{"name":"選股","slug":"選股","permalink":"https://www.finlab.tw/tags/選股/"},{"name":"指標","slug":"指標","permalink":"https://www.finlab.tw/tags/指標/"}]},{"title":"利用Machine Learning 選股新手教學","slug":"利用Machine-Learning-選股新手教學","date":"2017-10-20T04:58:23.000Z","updated":"2020-06-05T07:29:49.116Z","comments":true,"path":"利用Machine-Learning-選股新手教學/","link":"","permalink":"https://www.finlab.tw/利用Machine-Learning-選股新手教學/","excerpt":"","text":"最近一直在弄Machine Learning，都快忘記寫blog了，哈！ 其實要machine選股真的很簡單！這篇blog就會帶大家從頭開始，用最簡單的方式，將Machine Learning實做！這邊只是給大家一個簡單的架構，可以自己去嘗試優化，讓它更聰明！以下是用mac或是linux的command line完成的，假如有任何錯誤或不懂的地方歡迎聯絡我喔～ 1. 免費取得資料取得資料的方法很簡單，幫冷清的寒舍小小宣傳一下： 分享任一你覺得很有趣的FinLab文章於FB 將分享截圖傳到 finlabstaff@gmail.com 一兩天內即可獲得 data.csv！ 依照本blog的含金量、data.csv的完整程度，你一定不會後悔的！ 2. 架設環境假如你已經會使用python了，那可以直接跳過這個步驟，假如不會的話，可以照著下面的步驟完成： 到官網下載Python3，並且安裝 安裝pip 安裝virtualenv 為何要安裝pip呢？pip可以幫我們下載Machine Learning所需要的package（也就是python的libraries）。 為何要安裝 virtualenv 呢？virtualenv可以幫你產生project的環境，每一個project用自己的libraries，這樣比較不容易有衝突。 3. 建置project首先，先用virtualenv創建projectcreate project12virtualenv finance_mlcd finance_ml 接下來必須要開啟工作環境：activate and deactivate project12source bin/activatedeactivate 這邊有兩行，一行是開啟環境，一行是結束環境！假如你還要繼續，先不要輸入第二行。將data.csv複製到當前資料夾，並且安裝python packages install python packages1234pip install jupyterpip install pandaspip install sklearnpip install matplotlib 4. 開工！首先就是開啟jupyter notebook，並開一個python的環境start notebook1jupyter notebook這樣會開啟一個網頁版的GUI介面，只要新增python的notebook就可以用了！接下來進入我們的主題：機器學習程式碼！ A. 讀入資料這邊我們用 pandas 讀入所需要的資料，index_col可以設定要哪一個columns當作index。這邊的index選擇在 data.csv 中，第一個未命名的column。read data12import pandas as pddata = pd.read_csv('data.csv', index_col='Unnamed: 0', parse_dates=['buy_date', 'sell_date']) B.處理資料我們將資料分成三類，一類是跑回測用的dbacktest，另一類是機器學習用的dtraning，另外一個是traning完用來評估的dtest。 process data1234567891011121314from sklearn.model_selection import train_test_split# clear data 將爛資料去掉data.dropna(how='any', inplace=True)# 選擇2015年以後的資料作為回測用dbacktest = data[data['buy_date'] &gt; '2015']# 將其於的資料再分成兩類：dtrain 跟 dtestdataTrainTest = data[data['sell_date'] &lt; '2015']dtrain, dtest = train_test_split(dataTrainTest, test_size=0.10, random_state=42)# 設定我們的feature要用哪些features = data.columns[5:-1] C. 機器學習訓練資料這邊我們用很簡單的隨機森林，來完成的，可以參考連結來學習怎麼樣調整參數，這應該算是機器學習中，前置作業最少的模型了！ learning1234567891011121314from sklearn.ensemble import RandomForestClassifier# 創建機器學習的modelrf = RandomForestClassifier(n_estimators=10, criterion='gini', max_depth=None, min_samples_split=2, min_samples_leaf=1, min_weight_fraction_leaf=0.0, max_features='auto', max_leaf_nodes=None, bootstrap=True, oob_score=False, n_jobs=1, random_state=None, verbose=0, warm_start=False, class_weight=None)# 分類能獲利的股票rf.fit(dtrain[features], dtrain['獲利'] &gt; 1) D. 結果你說這樣就結束了！？對呀結束了。其實machine learning要簡單真的就只是這樣而已！接下來我們來看一下它預測的准不準： predict123456789101112131415result = rf.predict(dtest[features])print('test data')print('gain before filtered', dtest['獲利'].mean())print('gain after filtered', dtest['獲利'][result].mean())print('num stocks', sum(result), '/', len(dtest))result = rf.predict(dbacktest[features])print('backtest data')print('gain before filtered', dbacktest['獲利'].mean())print('gain after filtered', dbacktest['獲利'][result].mean())print('num stocks', sum(result), '/', len(dbacktest)) 假如一切順利就會看到以下結果： 這邊的gain是指平均的報酬率，也就是所有股票的價格在賣出時是否賺錢，小於一就是虧，大於一就是賺。結果看起來還滿猛的！竟然有接近7%的報酬率！但真的是如此嗎？我們把它畫成隨著時間，本金成長的獲利圖：backtest1234567891011%matplotlib inlinedbacktest['預測'] = pd.Series(result, index=dbacktest.index)dates = list(set(dbacktest['buy_date']))dates.sort()history = []for d in dates: history.append(dbacktest[(dbacktest['buy_date'] == d) &amp; (dbacktest['預測'])]['獲利'].mean()) pd.Series(history, index=dates).cumprod().plot() 發現其實沒有想像中那麼好。這是意料之中的結果，畢竟我們的learning時間才幾秒鐘，假如增加n_estimator這個變數，是否可以讓結果更好？假如使用Regression會不會更好？假如改變一下機器學習的參數、或修改一下features，是否可以選到更好的股票呢？就留給各位慢慢玩！以下是可以改進的地方： feature engineering：將features做修正、刪除、normalize等 篩選能獲利X%的股票 classification vs regression：可以兩種都試試看 不同的model，可以試試SVM、NN、XGBoost等等 不同的model都有可以調整超多參數來達到優化 利用early stop 來預防overfitting。 我只是列出最基本的，還有很多可以玩的，這也是我這禮拜正在弄的東西，害我都沒時間寫網誌XDD","raw":null,"content":null,"categories":[{"name":"AI看股票","slug":"AI看股票","permalink":"https://www.finlab.tw/categories/AI看股票/"}],"tags":[{"name":"機器學習","slug":"機器學習","permalink":"https://www.finlab.tw/tags/機器學習/"},{"name":"Machine Learning","slug":"Machine-Learning","permalink":"https://www.finlab.tw/tags/Machine-Learning/"},{"name":"python","slug":"python","permalink":"https://www.finlab.tw/tags/python/"}]},{"title":"Machine Learning 表示：看季線最無用！","slug":"Machine-Learning-表示：看季線最無用！","date":"2017-10-15T10:10:12.000Z","updated":"2020-06-05T07:29:48.398Z","comments":true,"path":"Machine-Learning-表示：看季線最無用！/","link":"","permalink":"https://www.finlab.tw/Machine-Learning-表示：看季線最無用！/","excerpt":"","text":"最近喜歡做 machine learning 的預測，發現機器學習看財報，預測下季收盤價還滿準的。 Alpha Go 讓人類的圍棋可以到達新境界，機器學習中學習到一些它判斷財報的方法，今天來剖開上一篇教學中，機器學習的大腦，來看一下機器人如何選股！ Machine Learning：季線無用！機器學習的模型就像是一個黑盒子，很難知道他其中的工作原理，只能看到線性化後，每個feature的權重。發現了一個很有趣的狀況，就是 “股價在季線上” 這個條件，權重超低！ 假如你買賣股票也跟我的模型一樣，是根據每一季財報來決定，那機器學習的結果，表示不用看季線，因為幾乎沒啥用。 看季線還不如看近10週收盤價！發現把週收盤價納入參考，也可以增進效果。代表長線的技術指標是有用的！ 重要的財報數據以下features的重要程度按順序排列： 月營收增長率很重要，而且不能只看一個月！ 當季ROE跟去年同季ROE很重要！ EPS季增長率也很重要！ 總資產轉換率 較不重要，但也不賴啦！ 其它，重要程度：股價淨值比 = 負債比率 &gt; 本益比 = 殖利率 週收盤價比上面的難用，但好像可以判斷一些東西，但一定是非線性的，所以不知道其中原理XD 重要程度趨近於0的：收盤 &gt; 季線 真的很少網站可以像這裡一樣，告訴你哪些是比較有用的數據，哪些比較難用，我們真的要跟機器來學習，一般人都會認為股價淨值比、本益比是最重要的，但是這邊做出了一個不一樣的結論：營收是否增加才是股票漲跌的關鍵。 這樣做的用意只是給大家一個概念，也不代表機器學習的結果就得奉為聖旨。 機器學習評分財報機器學習模型最後會幫每個股票評分，總共100分，最低0分，50分就是他覺得股票不漲不跌，所以我們將每季評分分成四組，由低到高： 可以看到有很多的評分都在0分跟100分，因為分數算法的關係，100分的部分可以想成超過一百分！（國軍online） 之後會在將 0 跟 100 分再區分清楚一點～ 回測！接下來我們將分數由低到高分4組，分別回測： 報酬率由低到高很漂亮的一字排開！分數低果然很差，而分數高真的很好。可以看到50分以上的兩組，其獲利贏過大盤（黃色），而50以下的兩組，其獲利小於大盤。 財報好的公司，抗跌！資優生組別（灰色）幾乎每季都漲！唯一一次跌是在2015年中，當時大盤大跌，但資優生那組並沒有跌非常多。 穩定的報酬率大盤三年1.05倍，而高分財報組1.75倍，平均報酬率20％每年。 別用這個策略亂放空！從上圖也可以看到一個現象：不要亂放空，不然會慘慘的。就算財報在爛，最差的那組還是沒辦法一直跌，但財報最好的那組可以漲很多！ 附註：現在就開始AI選股，免費取得訓練資料和教程取得訓練資料的方法很簡單，幫冷清的寒舍小小宣傳一下： 分享任一你覺得很有趣的FinLab文章於FB 將分享截圖傳到 finlabstaff@gmail.com 一兩天內即可獲得 data.csv！ 依照本blog的含金量、data.csv的完整程度，你一定不會後悔的！ 詳細的python教學：利用Machine-Learning-選股新手教學","raw":null,"content":null,"categories":[{"name":"AI看股票","slug":"AI看股票","permalink":"https://www.finlab.tw/categories/AI看股票/"}],"tags":[{"name":"機器學習","slug":"機器學習","permalink":"https://www.finlab.tw/tags/機器學習/"},{"name":"Machine Learning","slug":"Machine-Learning","permalink":"https://www.finlab.tw/tags/Machine-Learning/"},{"name":"python","slug":"python","permalink":"https://www.finlab.tw/tags/python/"},{"name":"選股","slug":"選股","permalink":"https://www.finlab.tw/tags/選股/"}]},{"title":"讓Machine Learning幫你看財報！","slug":"讓Machine-Learning幫你看財報！","date":"2017-10-13T04:07:13.000Z","updated":"2020-06-05T07:29:50.707Z","comments":true,"path":"讓Machine-Learning幫你看財報！/","link":"","permalink":"https://www.finlab.tw/讓Machine-Learning幫你看財報！/","excerpt":"","text":"機器學習不是我很專攻的領域，但幸好現在很多強大的package，可以直接使用，假如你不想深入開發model的話，只要把它當作黑盒子就好了，把它插上插頭，讓資料流進去、流出來。很簡單！ 免費訓練資料最下方免費有獲得2萬筆訓練資料的方式，在坊間一定是要賣錢的，甚至連課程一起賣，但我想說算了啦，反正我就是個草根碼農XDD，希望大家可以一起互相切磋。 之前寫的策略，選股方式都是用條件拼湊的： S={s∣ROEs&gt;3 and PBs&lt;1.5}\\mathbb{S}=\\left\\{ s\\mid\\text{ROE}_{s}&gt;3\\text{ and }\\text{PB}_{s}&lt;1.5\\right\\}S={s∣ROE​s​​&gt;3 and PB​s​​&lt;1.5} 但是現在用machine learning的話，就會寫成這樣： S={s∣f(ROEs,PBs)=1}\\mathbb{S}=\\left\\{ s\\mid f(\\text{ROE}_{s},\\text{PB}_{s})=1\\right\\}S={s∣f(ROE​s​​,PB​s​​)=1} 這邊用的是分類（classification），假如覺得會上漲，就是1，會下跌就是0。上面的 fff 就是機器學習的model，我們不太知道這個是個怎樣的函數，因為這個model不是一個公式，而是經過資料訓練而來的。這個簡單的範例只有2個features：ROE、PB。只是一個例子而已，下面會有更多的features： 資料資料是從2010年底，到2017年，每次財報截止的隔天買入，並在下次財報截止前賣出。至於features就是用之前寫文章，覺得好用的： 月營收 買入前12個月 ROE 買入前12季財報 本益比 買入前一天 股價淨值比 買入前一天 殖利率 最近一期 股價是否大於季線 股價是否大於半年線 負債比率 買入前12季財報 可以到這裡下載歷史資料，假如有人訓練的比我的好的話（應該滿簡單的），歡迎一起討論，我們可以一起合作建構一個初版的平台，或是有人想要train不同的feature，也歡迎留言給我。 除了上述的features，每筆資料還包含： stock_ID 股票的代號 buy_date 買入日期 buy_price 買入開盤價 sell_date 賣出開盤價 sell_price 賣出價格 gain 賣出價/買入價 不確定這些歷史數據，有沒有錯，假如不放心，可以幫我稍微檢驗一下，另外，關於買賣日期，我是參考IFRS制度上市前後不同的財報截止日，然而有些企業遲交財報，就沒辦法了…所以會包含一點未來數據。 這篇文章有講到財報遲交的公司，還是別買的好，而每年大約只有100家公司會遲交財報，以整體資料而言，未來數據應該不會太多（我覺得啦XD，但不知道資料科學家們怎麼看就是了）。 資料僅供學術發展，請勿用於商業用途！ 訓練model的方式由於我想要弄一個快速的prototype，所以先使用random forest model，這樣就不用pre-processing了XDD Model12from sklearn.ensemble import RandomForestClassifierrf = RandomForestClassifier(n_estimators=500, max_leaf_nodes=None, class_weight='balanced') 以上是用sklearn裡的模型，連參數什麼都沒給，這樣的效果還OK了。訓練時，training data使用2014年以前的資料，而test data是2015年以後的資料 結果太好了，我不敢相信…以下是還沒篩選前的獲利分佈圖，這邊的獲利是用倍數來衡量，也就是 賣出價格/買入價格。可以看到，這是一個對稱於1的分佈圖，大於1（賺）跟小於1（賠）其實很接近，其平均值是在1.005左右，你有看到一藍藍的地方嗎？那就是篩選後的標的： 下面我們把藍色的地方直接畫一張圖，可以發現篩選後，發現結果好很多，分佈偏向大於1，也就是很多的選擇是有獲利的！ 平均來到了1.10左右，代表每季買一群股票，平均來說會賺10％左右。且勝率來到了70.2% 對於這樣的結果，我感到有點難過，因為成果太好代表裡面一定有什麼問題，我還是抱著懷疑的態度，各位可以做最嚴格的檢驗，機器學習不是我的專長，願意虛心受教，或是你還希望有什麼額外的features呢？我幾乎都可以幫你生成客製的test data喔！ 附註：免費取得訓練資料取得資料的方法很簡單，幫冷清的寒舍小小宣傳一下： 按右下角分享於FB 將分享截圖傳到 finlabstaff@gmail.com 一兩天內即可獲得 data.csv！ 依照本blog的含金量、data.csv的完整程度，你一定不會後悔的！ 詳細的python教學：利用Machine-Learning-選股新手教學","raw":null,"content":null,"categories":[{"name":"AI看股票","slug":"AI看股票","permalink":"https://www.finlab.tw/categories/AI看股票/"}],"tags":[{"name":"機器學習","slug":"機器學習","permalink":"https://www.finlab.tw/tags/機器學習/"},{"name":"Machine Learning","slug":"Machine-Learning","permalink":"https://www.finlab.tw/tags/Machine-Learning/"},{"name":"python","slug":"python","permalink":"https://www.finlab.tw/tags/python/"}]},{"title":"回測框架介紹","slug":"回測框架介紹","date":"2017-10-12T05:39:12.000Z","updated":"2018-11-29T17:14:21.676Z","comments":true,"path":"回測框架介紹/","link":"","permalink":"https://www.finlab.tw/回測框架介紹/","excerpt":"","text":"每次回測的時候，大家一定會有疑問，雖然已經寫了程式交易的選股的條件，但實際上到底是怎麼運作的？這篇文章會介紹這個程式交易回測的方式。這篇比較數學一點，但用這種方法表示會比較明確，有線性代數的基礎就夠了。 首先我們先假設營業日，從1到ndn^{d}n​d​​天，代表所有回測的天數： d=1,...,ndd=1,...,n^{d}d=1,...,n​d​​ 另外還有一群股票，是我們可能買入的對象 s=1,...,nss=1,...,n^{s}s=1,...,n​s​​ 另外，而選股條件(constraints)叫做 c(d,s)∈{0,1}c(d,s)\\in\\{0,1\\}c(d,s)∈{0,1} 假如某日 ddd ，我們發現 sss 股票符合條件，那我們可以說c(d,s)=1c(d,s)=1c(d,s)=1，假如不符合條件，就是c(d,s)=0c(d,s)=0c(d,s)=0 為了方便，我們用一個向量來表示第 ddd 天每支股票是否符合條件： cd=[c(d,1),...,c(d,ns)]T\\bold{c}_{d}=[c(d, 1),...,c(d, n^s)]^Tc​d​​=[c(d,1),...,c(d,n​s​​)]​T​​ 然而我們只希望每 nnn 天換一次手上的持股，不要每天都換，不然會花太多手續費，所以我們定義一個過 nnn 天才檢查一次股票是否符合條件： cd∗=c⌊(d−1)/n⌋n+1\\bold{c}_{d}^{*} = \\bold{c}_{\\left\\lfloor (d-1)/n\\right\\rfloor n+1}c​d​∗​​=c​⌊(d−1)/n⌋n+1​​ 於是，我們在ddd 天晚上，用 cd∗\\bold{c}_{d}^{*}c​d​∗​​ 來決定明天如何買股： hd+1=(m+hd∗Tpdsum(cd∗)cd∗)T\\bold{h}_{d+1} = \\left(\\frac{m+\\bold{h}_{d}^{*T}\\bold{p}_{d}}{\\text{sum}(\\bold{c}_{d}^{*})}\\bold{c}_{d}^{*}\\right)^Th​d+1​​=(​sum(c​d​∗​​)​​m+h​d​∗T​​p​d​​​​c​d​∗​​)​T​​ 其中，hd+1\\bold{h}_{d+1}h​d+1​​ 代表明天每支股票要分多少錢， hd∗T\\bold{h}_{d}^{*T}h​d​∗T​​ 代表今晚持股（單位為一張），而 mmm 為帳戶資金 pd\\bold{p}_{d}p​d​​ 代表收盤價乘以1000。其實它只是看起來醜了點，概念很簡單，計算所有的資產，並且將資產平均分配給符合條件的股票。 以上的持股方式，就是一種完美分散的概念，是美好的想像，通常是blog中回測權益曲線的**藍線**，但現實生活中，資產不可能分散得如此完美，所以還必須算出可以買幾張股票： hd+1∗=[⌊hd+1,11.1pd,1⌋,...,⌊hd+1,ns1.1pd,ns⌋]T\\bold{h}_{d+1}^{*}=\\left[\\left\\lfloor \\frac{h_{d+1,1}}{1.1p_{d,1}}\\right\\rfloor ,...,\\left\\lfloor \\frac{h_{d+1,n^{s}}}{1.1p_{d,n^{s}}}\\right\\rfloor \\right]^{T}h​d+1​∗​​=[⌊​1.1p​d,1​​​​h​d+1,1​​​​⌋,...,⌊​1.1p​d,n​s​​​​​​h​d+1,n​s​​​​​​⌋]​T​​ 這邊有點要注意，hd+1∗\\bold{h}_{d+1}^{*}h​d+1​∗​​ 的單位是張數，而原本的 hd+1\\bold{h}_{d+1}h​d+1​​ 的單位是投資金額。乘以 1.1 是為了在開盤時用漲停板買入。然而這條公式每天都會計算，所以在歷史回測中，每天的張數是浮動的，也就是說，某天我買了6張某股，隔天我可能會變成5張、或7張某股，都是有可能的。 考慮了張數的，更貼近真實情況，通常是blog中回測權益曲線的紅線。 目前所知道的缺點 長線還算堪用，但短線上這種直接平分資產的方式，手續費還是太高了，到底要怎麼降低手續費呢？有沒有辦法不要單純平均分散？可以做到智慧型的平均分散？ 這個方法並沒有資產利用最大化（因為無條件捨去法），有沒有讓資產最大化、又可以考慮手續費的選股方法呢？","raw":null,"content":null,"categories":[{"name":"選股策略","slug":"選股策略","permalink":"https://www.finlab.tw/categories/選股策略/"}],"tags":[]},{"title":"財報狗選股讓你免費取得價值4000元/年的策略","slug":"財報狗選股條件最佳化","date":"2017-10-11T11:17:45.000Z","updated":"2020-06-05T07:29:48.089Z","comments":true,"path":"財報狗選股條件最佳化/","link":"","permalink":"https://www.finlab.tw/財報狗選股條件最佳化/","excerpt":"","text":"今天滿認真的，幫大家排列組合選股條件，這些選股條件都可以從財報狗的網站免費取得。 基本上這個策略，結果跟CMoney的富貴滿盈價值股差不多，但是人家一年要將近4000元，而財報狗是完全不用錢！ 財報狗的選股條件，自己排列組合可能會很慘，我用程式幫大家找，可以看到歷史績效，可能會比較可靠一點！ 分享目前自己發現最好，且可以用財報狗選股網站，免費選出股票的策略～ 免費的東西最貴？免費的東西真的很貴，假如你不靠任何投資老師，不靠長輩指導，短時間學會如何買股票，並能穩定獲利，基本上不太可能。（除非你也寫程式XD） 另外一個方式就是多來這晃晃XDDD（推銷）今天就來打破這個概念，從免費垃圾中挖出寶！把財報狗所有條件排列組合，自己能力所及，產生的最好回測，重點是免費！ 回測的心得我發現，財報狗條件，最主要就是選擇好公司，然而好公司股價不一定便宜，所以另外要用本益比跟股價淨值比來篩選出便宜股。 另外也發現本益比不是越小越好，這個策略調成15倍以下，再低就不行了，會造成波動變大，但是股價淨值比，可以調到1以下，結果還是不錯！ 假如股票數目太多，可先挑股價淨值比小的，可能會比較好！（只是推測）但假如不想要深入研究每支股票，大前提一定是盡量分散，不然就得認真研究公司的體質！ 回測方法這個策略所用到的條件（財報狗都有）： EPS近五年成長率 &gt; 1.1 ROE近四季總和 &gt; 0 流動比率1年 &gt; 200 近5年EPS &gt; 0 本益比 &lt; 15 股價淨值比 &lt; 1.5 另外，我測試了60天跟120天的，發現差不多，所以大約半年換股一次就可以了以下是回測結果，紅色是用100萬當起始資金，並考慮手續費、減資、利息，主要是以逼近藍色的選股策略為準，盡量平均分散，最小單位1張： 可以發現金融海嘯的時候，還是很可怕，海嘯完反彈也很猛！但是照這樣投資，2009年心臟要夠大顆，因為100萬就這麼沒了… 除非你的策略天生可以躲避大盤，不然一定要做大盤的篩選！之後也想寫一些預測大盤的策略，大家不妨偶爾來拜訪一下這個部落格。 接下來來看股票數： 有時候要買到75張不同的股票，大家應該都沒有這麼多財力吧XD，有時候覺得自己的blog根本是為了有錢人寫的？XD其實我也不想…但本金夠真的比較好買股票。 小提醒有些地方我好像定義的跟財報狗不太一樣，例如：一年ROE，我是用4季去加總的，可能會有點誤差，畢竟我也不在財報狗裡面上班XDD，但結果應該差不了太多。 結語那！今天分享了一個可以模仿的策略了，歡迎其它人來檢查一下，這樣的策略是否能夠獲利，畢竟我是工程師，工程師的程式裡，一定會有bug。。。歡迎大家來找碴！ 今天從頭到尾，花了2個小時才寫完的，假如喜歡我的部落格，可以加一下我的最愛，每個禮拜都有兩三篇新文章喔！（不敢再說每天，上週末已破功XDD）","raw":null,"content":null,"categories":[{"name":"財報狗分析","slug":"財報狗分析","permalink":"https://www.finlab.tw/categories/財報狗分析/"}],"tags":[{"name":"如何買股票","slug":"如何買股票","permalink":"https://www.finlab.tw/tags/如何買股票/"},{"name":"選股策略","slug":"選股策略","permalink":"https://www.finlab.tw/tags/選股策略/"}]},{"title":"教你用財報狗巴菲特免費選股","slug":"教你用財報狗巴菲特免費選股","date":"2017-10-10T15:51:50.000Z","updated":"2020-06-05T07:29:48.271Z","comments":true,"path":"教你用財報狗巴菲特免費選股/","link":"","permalink":"https://www.finlab.tw/教你用財報狗巴菲特免費選股/","excerpt":"","text":"今天來試試看財報狗的巴菲特選股條件，由於是免費的，任何人都可以使用他們的工具來篩選股票喔！用起來很方便，但是沒有歷史回測，不知道要怎麼選才好？繼續往下看吧！ 總共有九種條件、三個三個一組 但一眼看過去就知道，就算這九個全選，還是會有問題：無法選出便宜股！ 沒差，今天就是給大家一個感覺，想說將 3 x 3 x 3 = 27種 回測都跑一遍，來看一下哪些條件適合幾年！ 回測方法回測每125天重新篩選一次股票，當即將減資時，會賣出股票，等到減資完才買回（方便做回測），假設資產平均分散，不計算手續費，以下是2010年到現在的獲利： 負債比率n年小於30％ ROE近n年大於15% 自由現金流n年大於0 2010到至今結果 1 1 1 1.81485895666 1 1 3 1.80611662219 1 1 5 1.80843692158 1 3 1 1.72557247746 1 3 3 1.73936608665 1 3 5 1.74036307227 1 5 1 1.66120834512 1 5 3 1.67544848703 1 5 5 1.67539061791 3 1 1 1.86507507328 3 1 3 1.8550489791 3 1 5 1.85421160215 3 3 1 1.76061835832 3 3 3 1.7777823463 3 3 5 1.77461231039 3 5 1 1.69140364261 3 5 3 1.70853820166 3 5 5 1.704449199 5 1 1 1.65133067584 5 1 3 1.63659256796 5 1 5 1.6355617308 5 3 1 1.72904553438 5 3 3 1.7426988829 5 3 5 1.74016318508 5 5 1 1.641334841 5 5 3 1.65510389983 5 5 5 1.65245003808 接下來是60天換一次股票，獲利似乎有變比較好喔！ 負債比率n年小於30％ ROE近n年大於15% 自由現金流n年大於0 2010到至今結果 1 1 1 2.04865034635 1 1 3 2.00438077419 1 1 5 1.86690744291 1 3 1 1.84763217744 1 3 3 1.86161269191 1 3 5 1.78116963449 1 5 1 1.74354058836 1 5 3 1.76992960676 1 5 5 1.73239549677 3 1 1 2.2271403266 3 1 3 2.12840290727 3 1 5 1.93661630865 3 3 1 1.81760398688 3 3 3 1.8053067449 3 3 5 1.70637963884 3 5 1 1.68466765715 3 5 3 1.68890106012 3 5 5 1.63688323755 5 1 1 1.99109248921 5 1 3 1.89184010495 5 1 5 1.7179670741 5 3 1 1.84039390361 5 3 3 1.84483796041 5 3 5 1.7357332421 5 5 1 1.69260093206 5 5 3 1.712534655 5 5 5 1.65978846222 同期大盤 1.26倍 結論以下是我的觀察： 最好約60天換一次股，比120天換一次股還要好 負債比率：三年最好，不多也不少 ROE：肯定看一年就好 自由現金流：越多年似乎越有效，但效果較不明顯 然而只看這三種不同類型的條件，還是很難找到好的策略。明天來看看其它的條件，能不能幫大家組合出好策略！不知道大家有什麼想法？","raw":null,"content":null,"categories":[{"name":"財報狗分析","slug":"財報狗分析","permalink":"https://www.finlab.tw/categories/財報狗分析/"}],"tags":[{"name":"如何買股票","slug":"如何買股票","permalink":"https://www.finlab.tw/tags/如何買股票/"},{"name":"選股策略","slug":"選股策略","permalink":"https://www.finlab.tw/tags/選股策略/"}]},{"title":"價值股策略","slug":"價值股回測","date":"2017-10-09T08:31:56.000Z","updated":"2020-06-05T07:29:50.424Z","comments":true,"path":"價值股回測/","link":"","permalink":"https://www.finlab.tw/價值股回測/","excerpt":"","text":"今天剛結束期中口試（資格考），在法國99％的博士班，都可以通過，但重點是通過成績如何。今天總算是落幕了！可以好好來寫網誌，但今天還是有點想要休息一下，所以把網路上的方法拿來回測XD 富貴滿盈價值股今天回測了 富貴滿盈價值股 這個方法，名稱有點俗氣，但是回測效果算還不錯。 以下是此策略的選股條件： 本益比 &lt; 15 股價淨值比 &lt; 2 殖利率 &gt; 4 成交量大於50％的股票 收盤價 &gt; 60日均線 收盤價 &gt; 120日均線 EPS &gt; 前季EPS 月營收 &gt; 前年同月月營收 廢話不多說，看結果 紅色線跟藍色線，感覺已經講到爛了XD，下次乾脆直接寫一篇教學，以後都直接連到那個教學…。 這個策略適用於200萬以上的股票池，比較小的我沒有試過，有人有興趣的話，可以留言給我，我會試試看假如最多選5個公司買，會有怎樣的結果。 下跌幅度還算是滿大的，但下跌情況在2013年以後好很多，是因為改用IFRS的關係嗎？這個就不清楚啦！XD 回測好，沒辦法用，看這個blog做啥？大家可以看，用怎樣的條件選股，可以產生好策略，看越多會發現，好用的數據就那些！ 而且等之後有空，會有個平台放上免費的策略，且每天更新，就跟財報狗一樣。 為何跟財報狗一樣還要做？恩～因為無聊吧～證明自己的能力。 要是我一個人可以做出跟策略狗平台不相上下的平台，那不是很猛嗎！？可以當作自己能力記錄的證明。 希望能做友善且功能強大的平台不僅限於基本面，還有籌碼面跟技術面！還有行動助手幫忙提醒該換股了！另外有些厲害的策略還是得收點錢，畢竟這個平台是我吃飯的傢伙呀XD 之後再寫跟machine learning有關的策略根據我們現在的介紹，本人真的覺得 machine learning 在分析財報上，有很大的潛力，之後有時間來試試看！","raw":null,"content":null,"categories":[{"name":"選股策略","slug":"選股策略","permalink":"https://www.finlab.tw/categories/選股策略/"}],"tags":[{"name":"如何買股票","slug":"如何買股票","permalink":"https://www.finlab.tw/tags/如何買股票/"},{"name":"選股策略","slug":"選股策略","permalink":"https://www.finlab.tw/tags/選股策略/"},{"name":"歷史回測","slug":"歷史回測","permalink":"https://www.finlab.tw/tags/歷史回測/"},{"name":"價值股","slug":"價值股","permalink":"https://www.finlab.tw/tags/價值股/"}]},{"title":"用杜邦分析加強你的選股技巧（下）回測","slug":"用杜邦分析加強你的選股技巧（下）回測","date":"2017-10-06T20:45:40.000Z","updated":"2020-06-05T07:29:50.770Z","comments":true,"path":"用杜邦分析加強你的選股技巧（下）回測/","link":"","permalink":"https://www.finlab.tw/用杜邦分析加強你的選股技巧（下）回測/","excerpt":"","text":"今天介紹一個簡單至少近7年有效的方法，考慮杜邦分析的指標，排列組合後，我能得出的最好結果。 選股條件： 總資產轉換率 &gt; 0.3 （選擇獲利高的公司） ROE &gt; 5 （選擇能真正盈利的公司） PB &lt; 3 （選便宜一點的公司） 發現 淨利率 莫名的失效，較難拿來選一小群股票，而 權益乘數 較也是，畢竟一家公司的槓桿程度，不代表公司體質好不好。我發現 總資產轉換率，是一個很好的條件，看企業是否有妥善運用自己的資產，能夠有盈利，回測的效果也比較穩定。 歷史績效 藍色是投資完美分配的狀況，而紅色是用100萬當作起始資金，考慮買賣張數。用此策略投資，資產穩定成長。 適用於IFRS制度開始後 這個策略在2013之前，一次會買很多張股票，且獲利比較不穩定。我個人覺得可能是2013年時改為 IFRSs 後的關係。因為2013年後，企業可以用 “公允” 價值入帳。所以許多有很多資產的公司，淨值大幅成長。實際擁有的東西沒變，只因為遊戲規則改變，產生”看起來好像改善的”現象。 雖然淨值大幅成長，但假如營運狀況沒改善，則總資產轉換率反而會降低，因此總資產轉換率高的公司，2013年後才被真正的篩選出來，也是此策略歷史績效開始變好的時機。","raw":null,"content":null,"categories":[{"name":"指標分析","slug":"指標分析","permalink":"https://www.finlab.tw/categories/指標分析/"},{"name":"基本面","slug":"指標分析/基本面","permalink":"https://www.finlab.tw/categories/指標分析/基本面/"}],"tags":[{"name":"如何買股票","slug":"如何買股票","permalink":"https://www.finlab.tw/tags/如何買股票/"},{"name":"選股策略","slug":"選股策略","permalink":"https://www.finlab.tw/tags/選股策略/"},{"name":"歷史回測","slug":"歷史回測","permalink":"https://www.finlab.tw/tags/歷史回測/"},{"name":"杜邦分析","slug":"杜邦分析","permalink":"https://www.finlab.tw/tags/杜邦分析/"}]},{"title":"用杜邦分析加強你的選股技巧（中）淨利率","slug":"用杜邦分析加強你的選股技巧（中）淨利率","date":"2017-10-05T15:07:14.000Z","updated":"2020-06-05T07:29:49.718Z","comments":true,"path":"用杜邦分析加強你的選股技巧（中）淨利率/","link":"","permalink":"https://www.finlab.tw/用杜邦分析加強你的選股技巧（中）淨利率/","excerpt":"","text":"淨利率就是指企業從營業收入，真正收進口袋的錢： 分佈圖以下是淨利率的分佈圖： 數量 平均 標準差 0% 25% 50% 75% 100% 1693 -100 2234 -76488.52 0.24 5.09 11.56 5458.2 台灣有滿多企業沒有辦法賺錢！但有少數公司獲利滿驚人的，然而接近0的地方會產生一個很明顯的突波，看來滿多企業盡量讓自己的淨利大於0的，讓財報好看一點。 淨利率高的企業股價更容易成長！我們將淨利率分五組，由低到高，低的是深色，高的是黃色，每60天重新選擇一次，每一條曲線，代表我們長期投入，買入其中一組的股票，所獲得的報酬： 我們發現，投資淨利率高的公司，比較容易獲利！ 杜邦分析的指標終於說完了！總結一下，目前杜邦分析的系列文章中，我們講了三個重要的指標： 淨利率 總資產轉換率 權益乘數 目前看起來，是淨利率跟總資產轉換率比較好用，可以利用這兩個指標選股！而權益乘數其實是比較難用的，因為很難斷定會借貸的公司到底好不好。 而下一篇，我們會能不能整合三個指標，找出比較好的優質股～","raw":null,"content":null,"categories":[{"name":"指標分析","slug":"指標分析","permalink":"https://www.finlab.tw/categories/指標分析/"},{"name":"基本面","slug":"指標分析/基本面","permalink":"https://www.finlab.tw/categories/指標分析/基本面/"}],"tags":[{"name":"入門教學","slug":"入門教學","permalink":"https://www.finlab.tw/tags/入門教學/"},{"name":"杜邦分析","slug":"杜邦分析","permalink":"https://www.finlab.tw/tags/杜邦分析/"}]},{"title":"小資族也可以使用的選股法！","slug":"小資族也可以使用的選股法！","date":"2017-10-04T03:40:42.000Z","updated":"2020-06-05T07:29:48.582Z","comments":true,"path":"小資族也可以使用的選股法！/","link":"","permalink":"https://www.finlab.tw/小資族也可以使用的選股法！/","excerpt":"","text":"其實這篇還是14年14倍的選股策略！一模一樣的方法XD，建議先複習一下，這篇只用本金10萬元開始，看會發生什麼問題！ 原諒今天我比較混水摸魚，下禮拜要博士班資格考～～ 附上每天操作紀錄，證明沒在虎爛XD會寫這篇是因為有人問上次那個14年14倍選股法，怎麼可能一次買50檔股票，太扯了吧！被他這麼一說，突然我也覺得有點扯，該不會是回測寫錯，有bug吧！？ 目前又檢查了一次，應該是沒找到什麼問題。策略都是考慮真實買賣（本金、張數、手續費都考慮），至於怎麼考慮，下面會更詳細的跟大家介紹。 拉到文章下方，有歷史回測的每天操作紀錄，以示我真的沒在唬XD，但交易這種東西，還是自己對自己負責。 假如歷史紀錄有問題，也歡迎隨時聯絡我喔（左上角有信箱和FB），很樂意跟大家討論。 為何一次買這麼多股票？因為我想利用空間與時間選股！ 做回測到現在的心得是，自己真的是凡人，無法預測股票是漲是跌，要用時間跟空間來換取你的零用錢！ 時間，就是指長線，利用一兩個月，讓基本面很好的股票發酵。空間，就是指分散風險，投資多支股票，買到雷股時，才不至於太慘。 Q&amp;A 時間1.這個策略是上市上櫃大於100家時，只挑選上市收盤大於10元的買，上櫃的不考慮對嗎?YES 2.假設上市上櫃的便宜股大於100家公司，選擇收盤價10元以上的上市公司，100萬真的夠嗎?這些雞蛋水餃股特別便宜，下面圖一是該策略所有買入股票的價格分佈圖 幾乎都是在10～20元，然而程式沒有設定最低買入手續費20元，但低頻率的投資應該不會造成太大的影響 3.若是像2008年一樣，一堆便宜股票100萬如何足以購買符合條件的股票呢?上一篇起始資金100萬，但到2008年已經有200萬了，這個時候買50支雞蛋水餃股是沒問題的！ 為了體現買不動這個問題，另外跑了只用10萬元投資的回測： 紅色是用10萬起始資金，並考慮手續費；而藍色則是資產完美平均、不算手續費。結論是：用10萬買當起始資金也行，但獲利倍數會減少： 原本100萬起始的話，參考上篇文章，到今天可以有14倍獲利； 然而現在用10萬當起始資金，考慮真實情況（上圖紅線），到今天只有8倍，但權益曲線很相似！ 假如可以完美平均分散，不真實情況（上圖藍線），不管起始資金多少，都能有近16倍獲利。 接下來就回答關鍵問題：2009年這麼多股票，錢那麼少，怎麼買呢？這邊的策略是：假設n檔股票要買，將總資產分成n份，買不起就不買！ 就這麼簡單，所以接下來，用十萬當起始資金，看每日持股數目，就會更瞭解： 上圖可以發現，在2009年時，因為股票太多，藍色線建議購買超過50支股票，而紅線因為本金不足幾乎沒有購買任何股票。 策略都是考慮真實買賣（本金、張數、手續費都考慮），個人覺得這個策略，是有機會真倉使用，然而我自己沒在用就是了XD，這是某天好玩做出來的結果。 所以十萬理論上也是可以的，無論多少錢，回測程式都會將資產分n份，再等比例買入每一支不同的股票！ 4.能否列出在符合條件的年度，各買一張需要多少本金，根據此策略計算結果是符合條件的上市公司各買一張嗎?或是根據您的統計是以資金平均分配在各家公司的結果?附上歷史操作數據 連結一，買股票歷史紀錄：https://drive.google.com/file/d/0B440aEV9RNPTX2xTWUd0ZVF6Unc/view連結二，每天操作的詳細記錄：https://drive.google.com/file/d/0B440aEV9RNPTMGpuZFNfLURwa0k/view 這個策略只是我學習路上，有一點小成果，跟大家分享而已，我一定也有很多不足，要向大家學習的，有什麼問題歡迎留言一起討論喔～～","raw":null,"content":null,"categories":[{"name":"選股策略","slug":"選股策略","permalink":"https://www.finlab.tw/categories/選股策略/"}],"tags":[{"name":"如何買股票","slug":"如何買股票","permalink":"https://www.finlab.tw/tags/如何買股票/"},{"name":"選股策略","slug":"選股策略","permalink":"https://www.finlab.tw/tags/選股策略/"},{"name":"歷史回測","slug":"歷史回測","permalink":"https://www.finlab.tw/tags/歷史回測/"},{"name":"本益比","slug":"本益比","permalink":"https://www.finlab.tw/tags/本益比/"},{"name":"股價淨值比","slug":"股價淨值比","permalink":"https://www.finlab.tw/tags/股價淨值比/"}]},{"title":"用杜邦分析加強你的選股技巧（中）總資產週轉率","slug":"用杜邦分析加強你的選股技巧（中）總資產轉換率","date":"2017-10-03T04:42:44.000Z","updated":"2020-06-05T07:29:51.203Z","comments":true,"path":"用杜邦分析加強你的選股技巧（中）總資產轉換率/","link":"","permalink":"https://www.finlab.tw/用杜邦分析加強你的選股技巧（中）總資產轉換率/","excerpt":"","text":"總資產週轉率，是一個很有用的指標，可以觀察企業的營運能力，管理階層運用總資產創造營收的能力，也就是代表管理能力。複習一下公式： $$總資產週轉率=\\frac{營收}{總資產}$$ 分佈圖這張分佈圖x軸是總資產週轉率，Y軸是有多少公司 數量 平均 標準差 0% 25% 50% 75% 100% 1696 0.19 0.15 0 0.10 0.17 0.24 3.11 可以發現大部分的公司的總資產週轉率，落在17％左右，可以用這個值來判斷公司的營運是否有效率。我們之後的回測，會利用總資產週轉率來找出優質股，在大盤下跌時，優質股比較不容易下跌。 回測我們把全台灣企業，大致上分成5組來做歷史回測，每60天換一次股票，黑色到黃色代表總資產報酬率由低到高，看他們的平均漲跌幅： 投資淺色會比深色組別的股票還要好，代表投資體質好的公司，真的比差的公司還要穩定很多！下次選股前不妨看一下總資產週轉率，來決定該股票適不適合買入！尤其適合同產業的公司互相比較，更能看出好壞！ 另外也有一個有趣的現象，深黑色有時候也會意外變成第一，這方面我就不知道為什麼了XD，是因為有些公司還沒開始盈利但前景看好？ 除了深黑色那條線以外，大致上還算符合深到淺，低到高的一個走勢。 人即是公司總資產週轉率也可以拿來評量一個人，想像某人資產有100萬，而他每個月的開銷是： 吃飯、水電生活等，花了3萬元，而每天上班月入6萬元 看起來生活水平還算優渥！ 但假如把他當作一家公司，則他的總資產週轉率是6/100每個月，就這麼讓97萬躺在銀行裡任由通貨膨脹摧殘，要是他可以利用存款，投資自己來幫自己的人生滾雪球，那一定會產生很厲害的複利效應！ 我自己是沒有辦法忍受存款在那裡閒涼，所以才編寫投資程式：利用已有資產來提高資產週轉率！ 從總資產週轉率看買房這件事要怎麼決定你要不要買房子呢？也可以從資產週轉率來思考，首先第一個迷思就是買了房，總資產會變少。 其實資產不會變少的，因為我們只是拿錢換房子，房子也算資產的一部份（假如不貸款）。 但假如你很會投資，那買了房，會變得沒錢理財，會導致總資產週轉率會瞬間大減，任憑你投資技巧再好，投資淨利率在高，乘以總資產週轉率後，到頭來你的個人ROE還是會大衰退！ 有人說房租那麼貴，還不如直接買房，每月繳貸款也比房租高一點點而已。 但對於善於投資的人來說，傷害最大的，不是房貸，而是頭期款！將你的金錢瞬間換成磚頭！XD 滾雪球是很驚人的，然而從一個大雪球開始滾跟小雪球開始滾，會差很多，可以參考Mr. Market的文章算一下自己什麼時候買房合適。 當然假如買房也是一種投資，那就另當別論！ 有點離題了…拉回來一下 總之提高個人總資產週轉率的好方法投資自己也是很好的選擇，例如增進第一專長，學第二專長，學習如何創業，都是我正在努力的目標！大家有什麼好方法提高自己的總資產週轉率呢？每天來看一下FinLab也是一個很好的投資喔！（自己打廣告XD）","raw":null,"content":null,"categories":[{"name":"指標分析","slug":"指標分析","permalink":"https://www.finlab.tw/categories/指標分析/"},{"name":"基本面","slug":"指標分析/基本面","permalink":"https://www.finlab.tw/categories/指標分析/基本面/"}],"tags":[{"name":"入門教學","slug":"入門教學","permalink":"https://www.finlab.tw/tags/入門教學/"},{"name":"杜邦分析","slug":"杜邦分析","permalink":"https://www.finlab.tw/tags/杜邦分析/"},{"name":"總資產轉換率","slug":"總資產轉換率","permalink":"https://www.finlab.tw/tags/總資產轉換率/"}]},{"title":"拆解ROE用杜邦分析加強你的選股技巧（中）權益乘數","slug":"用杜邦分析加強你的選股技巧（中）權益乘數","date":"2017-10-02T07:53:41.000Z","updated":"2020-06-05T07:29:50.347Z","comments":true,"path":"用杜邦分析加強你的選股技巧（中）權益乘數/","link":"","permalink":"https://www.finlab.tw/用杜邦分析加強你的選股技巧（中）權益乘數/","excerpt":"","text":"今天這篇繼續討論杜邦分析，其中的三個最重要的數字 權益乘數 總資產週轉率 淨利率 今天就來看一下台灣的公司在權益乘數是如何分佈的！ 權益乘數權益乘數，也就是企業負債的比率！負債是一個兩面刃，有很多錢的話，企業可以將錢轉化成自己的產品，並將產品賣出去，但風險隨之升高，萬一還不出錢可是會瞬間破產。 數量 平均 標準差 0% 25% 50% 75% 100% 1703 2.35 2.78 -39.23 1.43 1.77 2.32 33.70 仔細看一看竟然還有負數，哈哈也太誇張了吧！ 還記得上次跟各位說明，權益乘數 = 總資產 / 股東權益 我更深入檢查下發現，台灣總共有8家公司的權益乘數是負數，其中並不是總資產是負的，而是股東權益是負的！代表全體投資人還必須多付一些錢才能把公司的債還清，滿可怕的XD！ 負債沒想像中的這麼不好！接下來我們一樣把所有的公司分成五組，去看看每季買入它們的歷史績效！ 可以發現負債越多的那組，其實並沒有想像中的那麼可怕，，在歷史績效中，算是高段班！畢竟會使用負債來增加自己的收入，也是公司的能力一部份，不是嗎？ 反而可以看到，槓桿最小那組，都是吊車尾，就算去掉了負的那群，實驗結果還是吊車尾！代表不會用槓桿的公司，似乎在業績表現上也會比較無法那麼亮眼。 會善用槓桿的人更厲害人活在這個複雜的世界，本來就應該學會如何安全的運用槓桿，才能達到事半功倍之效果。這邊指的不是投資的槓桿，是指生活中的各種槓桿，阿基米德說： 給我一個支點，我可以舉起整個地球。","raw":null,"content":null,"categories":[{"name":"指標分析","slug":"指標分析","permalink":"https://www.finlab.tw/categories/指標分析/"},{"name":"基本面","slug":"指標分析/基本面","permalink":"https://www.finlab.tw/categories/指標分析/基本面/"}],"tags":[{"name":"入門教學","slug":"入門教學","permalink":"https://www.finlab.tw/tags/入門教學/"},{"name":"杜邦分析","slug":"杜邦分析","permalink":"https://www.finlab.tw/tags/杜邦分析/"}]},{"title":"用杜邦分析加強你的選股技巧（上）","slug":"用杜邦分析加強你的選股技巧（上）","date":"2017-10-01T08:01:09.000Z","updated":"2018-08-21T22:04:56.000Z","comments":true,"path":"用杜邦分析加強你的選股技巧（上）/","link":"","permalink":"https://www.finlab.tw/用杜邦分析加強你的選股技巧（上）/","excerpt":"","text":"前幾篇，我們連講了PE、PB、ROE，這些是價值型選股最重要、最最簡單的幾個要素，也寫了一些還不賴的歷史回測，10萬起始資金也能有模有樣。這篇將會更深入一層，介紹杜邦分析！ 學習回顧我們瞭解了幾個元素： 投資人的錢 企業的收益 企業的股價 3/1=PB、3/2=PE、2/1=ROE。（這邊是很大概的講，用詞比較不精確，請多包涵！） 然而真正的企業有麼簡單嗎？應該不至於吧？ 更深入一點點今天介紹比較複雜名詞：杜邦分析（DuPont Analysis）！杜邦分析將財務報表上的精華濃縮成三個數字，分別代表： 企業的槓桿 企業銷售能力 企業賣出一樣商品是否賺錢 這東西有沒有用？我還不知道XD，想說一邊介紹，一邊做回測給大家看。 杜邦分析超無腦介紹企業的金流，跟個人金流是一樣的道理，所以我用一個很簡單的例子介紹： 假如你有2萬元，跟爸媽借了1萬元買了熱賣的iphone X（3萬），再用4萬元的高價賣給別人，淨賺1萬。 例子結束了！就是這麼簡單。 首先我們先來計算一下ROE，因為你投入了2萬，淨賺1萬，所以ROE是1/2，但ROE像是故事的開頭跟結尾相除，中間的過程完全被省略了，杜邦分析可以補足： 首先，因為你原本有2萬借了1萬，槓桿是(2+1)/2 = 3/2倍，通常命名為權益乘數再來，你用3萬換4萬，總資產週轉率是4/3倍最後，獲得的4萬中，其實只賺了其中的1萬，所以淨利率是1/4 所以最後 ROC=14×43×32=12\\text{ROC}=\\frac{1}{4}\\times\\frac{4}{3}\\times\\frac{3}{2}=\\frac{1}{2}ROC=​4​​1​​×​3​​4​​×​2​​3​​=​2​​1​​ 當然這只是個超簡單的例子，稅呀什麼都通通沒管，將以上的數值寫成公式： ROE = 淨利率 x 總資產週轉率 x 權益乘數 = 稅後淨利 / 營收 x 營收 / 總資產 x 總資產 / 股東權益 股東權益，就是所有投資人的錢，在這個例子中就是你自己的錢(2萬)而總資產最主要包含：借貸的錢（1萬）、你本來的錢（2萬）營收則是（4萬），稅後淨利是你真正真正獲利的部分（1萬） 明天就來回測給大家看～明天見吧！","raw":null,"content":null,"categories":[{"name":"指標分析","slug":"指標分析","permalink":"https://www.finlab.tw/categories/指標分析/"},{"name":"基本面","slug":"指標分析/基本面","permalink":"https://www.finlab.tw/categories/指標分析/基本面/"}],"tags":[{"name":"入門教學","slug":"入門教學","permalink":"https://www.finlab.tw/tags/入門教學/"},{"name":"杜邦分析","slug":"杜邦分析","permalink":"https://www.finlab.tw/tags/杜邦分析/"}]},{"title":"買股票只考慮ROE是不夠的！","slug":"買股票只考慮ROE是不夠的！","date":"2017-09-30T05:28:20.000Z","updated":"2020-06-05T07:29:51.764Z","comments":true,"path":"買股票只考慮ROE是不夠的！/","link":"","permalink":"https://www.finlab.tw/買股票只考慮ROE是不夠的！/","excerpt":"","text":"昨天的文章介紹了ROE，是一個企業用資本賺錢的能力，可以用ROE找出會賺錢的公司，買入其股票。 但這樣會有問題！因為ROE跟價格並沒有連動！也就是你無法確認這家公司股價漲過頭了 公式推導為了更深入瞭解ROE，並且找一個適合的指標跟他搭配，我們再把ROE的公式拿出來討論一下：我們先定義：淨利（net income N）股東權益（Shareholder’s equity SE）市值（Market capitalization MC）股價淨值比（Price-to-Book Ratio PB）本益比（Price-Earnings Ratio PE） ROE=NSE=MC/SEMC/N=PBPE\\text{ROE}=\\frac{\\text{N}}{\\text{SE}}=\\frac{\\text{MC/SE}}{\\text{MC/N}}=\\frac{\\text{PB}}{\\text{PE}}ROE=​SE​​N​​=​MC/N​​MC/SE​​=​PE​​PB​​ 由上述公式可以發現，ROE又可以跟PB、PE扯上關係。首先先來看PE： PE 越小造成 ROE 越大，而兩者都代表公司的獲利很好，可以買入！很好的現象 但接下來看到PB的時候，奇妙的事就發生了： PB越大會影響ROE也會越大，前者大說明股票被高估，後者越大說明公司投資報酬率很好，於是我們可以得到一個結論： ROE高並不代表其價格值得買入！ 歷史回測由以上結論我們可以發現，除了用ROE來選擇投資報酬率高的公司外，我們還必須利用PB選擇便宜股。 策略名稱 策略一（只考慮ROE） 策略二（考慮ROE跟PB） 選股條件 ROE &gt; 5 同策略一 收盤價 &gt; 10 PB &lt; 1.2 每60天更新一次持股，不計算手續費： 其中策略一每次都把資產分散在100支股票左右，而策略二把資產分散在平均為10支股票左右。 策略二每次持有的股票非常少且獲利更勝策略一！ 每次買入個位數股票，小資族會比較好投資，當然我真的不知道有沒有做錯，所以我將策略二的持股歷史紀錄供大家下載：csv檔 金融海嘯資產少60％！但這個策略也是教學用，大家不要輕易使用，畢竟在金融海嘯時，其虧損來到了非常驚人的60％。如何判斷大盤是否大跌，可以參考之前很多篇的介紹。 策略二今天持股策略二目前持股為： 第一個column是股票代號，第二個column是買入日期，第三個columns為價格，約60個交易日後，我們再來看一下這幾支股票是賺錢還是賠錢。有興趣可以追蹤一下！","raw":null,"content":null,"categories":[{"name":"指標分析","slug":"指標分析","permalink":"https://www.finlab.tw/categories/指標分析/"},{"name":"基本面","slug":"指標分析/基本面","permalink":"https://www.finlab.tw/categories/指標分析/基本面/"}],"tags":[{"name":"ROE","slug":"ROE","permalink":"https://www.finlab.tw/tags/ROE/"},{"name":"如何買股票","slug":"如何買股票","permalink":"https://www.finlab.tw/tags/如何買股票/"},{"name":"選股策略","slug":"選股策略","permalink":"https://www.finlab.tw/tags/選股策略/"},{"name":"歷史回測","slug":"歷史回測","permalink":"https://www.finlab.tw/tags/歷史回測/"},{"name":"股價淨值比","slug":"股價淨值比","permalink":"https://www.finlab.tw/tags/股價淨值比/"}]},{"title":"EPS跟ROE哪個比較好用？","slug":"EPS跟ROE哪個比較好用？","date":"2017-09-29T05:51:12.000Z","updated":"2020-06-05T07:29:48.244Z","comments":true,"path":"EPS跟ROE哪個比較好用？/","link":"","permalink":"https://www.finlab.tw/EPS跟ROE哪個比較好用？/","excerpt":"","text":"投資人最喜歡看每股盈餘（EPS）來決定股票的好壞，股票雜誌也喜歡說某家公司EPS多好，但今天所做的回測發現，根據每季EPS選擇股票並不好！ EPS 介紹EPS = 稅後淨利 / 在外流通股數 間單來講就是投資人每投入一股，一個月可以賺多少錢回來。公司賺的錢越多，其EPS越大公司發行了很多股票，EPS越小 但是這樣有個問題：公司賺多少錢不等於公司經營的好壞！例如：大公司掙錢肯定要比小公司多，但我們買股票的重點不在誰獲利較高，而是在哪家公司成長比較快速！ 所以只比較不同股票當季EPS，其實是有弊端的，我們用實驗來舉例給你看： EPS低到高的歷史回測我們將EPS由低到高分成五組，每一組的股票大約是一樣多的，每60天調整一次，選擇EPS在範圍內的股票，同樣假設資產可以平均分散，不算手續費： 我們發現，買EPS大於0的股票獲利會高於EPS小於0的組別。 但，是假如EPS大於0的組別之間並沒有太大的關係。 代表假如你的買股票時，假如平均是買2～3個月的話，可以稍微看一下當季EPS只要不要小於0就可以了，就算很高也不一樣定有用，但小於0的話就要注意了！ 跟ROE做比較ROE就是一個考慮了公司可用資金與報酬的指標： 股東權益 = 總資產 - 總負債ROE = 稅後盈餘 / 股東權益 * 100% ROE就變成，公司投入了一些資產，可以賺多少錢回來的指標！ ROE歷史回測我們同樣將ROE從高到低分成五組，每60天換股，取全台灣上市公司介於某一組ROE之間的股票： 可以發現，用ROE來跑歷史回測，真的比較不一樣，獲利跟ROE成很漂亮的正比！買ROE越高的公司，比買EPS高的公司更容易挑到優質股！","raw":null,"content":null,"categories":[{"name":"指標分析","slug":"指標分析","permalink":"https://www.finlab.tw/categories/指標分析/"},{"name":"基本面","slug":"指標分析/基本面","permalink":"https://www.finlab.tw/categories/指標分析/基本面/"}],"tags":[{"name":"EPS","slug":"EPS","permalink":"https://www.finlab.tw/tags/EPS/"},{"name":"每股盈餘","slug":"每股盈餘","permalink":"https://www.finlab.tw/tags/每股盈餘/"},{"name":"ROE","slug":"ROE","permalink":"https://www.finlab.tw/tags/ROE/"},{"name":"如何買股票","slug":"如何買股票","permalink":"https://www.finlab.tw/tags/如何買股票/"}]},{"title":"14年14倍的選股策略！","slug":"比策略狗還要安全的選股策略！","date":"2017-09-28T06:05:16.000Z","updated":"2020-06-05T07:29:48.802Z","comments":true,"path":"比策略狗還要安全的選股策略！/","link":"","permalink":"https://www.finlab.tw/比策略狗還要安全的選股策略！/","excerpt":"","text":"究竟如何買到好股票呢？用超簡單的財經指標就可以有14年約獲利14倍的策略，重點是可以躲過致命的金融海嘯、大盤崩跌！半年只要調動一次持股，甚至偶爾叫你半年不碰股票去放個假。當然此策略主要是教學用，建議自行調整後再真實投入市場。 從統計的角度帶你一步一步設計量化策略一般的財經文章都是講講理論，算算公式，套幾個例子，就結束了。 問題是，你怎麼知道那個例子是湊巧還是真的有用？ FinLab跟一般的財經部落格不一樣，我們把全台灣所有的公司做統計整理給大家，讓大家瞭解如何從股市中獲利，透過長時間的投資，為自己增加買菜錢。 此篇是前幾篇的一個小統整在股價淨值比有這麼神？跟本益比能幫你選出優質股？中，裡面介紹了用不同的本益比和股價淨值比跑歷史回測 於是今天來總結一下這兩個指標，寫一個策略，讓大家瞭解股價淨值比跟本益比合在一起迸出什麼樣的火花！ 策略就是這麼簡單：找便宜且會賺錢的公司簡單來說這個就是一個雞蛋水餃股策略～ 先用以下條件篩選出雞蛋水餃股： 股價淨值比 &lt; 0.7 的股票 （被嚴重低估股票） 本益比 &lt; 13 的股票 （還算會賺點錢的公司） 我們先把它們定義為”便宜股” 還必須去除大盤大跌的時刻這種便宜股在股市大跌的時候，跌得非常驚人，一定要避開！ 還記得在股價淨值比有這麼神？ 這篇中，有介紹當大盤大跌後，便宜股會變多！反之，當大盤過熱時，便宜股會很少。就是利用這個原理，來進行對大盤時間的過濾： 假如便宜股太少（上市上櫃小於100家公司），代表大盤處於漲多的狀態，清空所有股票，不持股半年！可以去放放假，陪陪家人，休息一下！ 假如便宜股夠多，則買收盤價在10元以上的上市股票 (畢竟太便宜的股票還是會怕怕的XDD) 每半年換一次股，選擇滿足以上條件的所有股票，本金100萬元台幣，手續費不打折，交易稅0.3％ 事實上十萬本金就可以了，只是獲利從14倍減少到8倍左右 常常休息的策略，卻可以有如此高的績效！這個策略常常休息，甚至在2010~2011這兩年完全沒買股票！真的很扯！ 大盤高檔之際完全不用盯盤，不用每天提心吊膽的，你說這種輕鬆的策略，怎麼可能賺到什麼錢？ 但，這就是一個跟財報狗的績優股獵犬不相上下的交易策略，不鳴則已，一鳴驚人，平常不買股票，等到台股崩跌時，能夠快速的獲利！ 策略是否持股也是一種指標～這個策略躲過了從2004年來每一次的台股慘案，所以也可以用這個策略持股數來看出大盤現在是否漲過頭。持股數0代表大盤漲過頭了： 最近股票會崩跌嗎？針對這個問題，到今天為止，這個策略還在持股，所以我認為現在崩跌的機率不大，然而歷史真的會跟未來相似嗎？沒有人可以說的准。 當市場受到空頭洗禮，許多好公司都跌回雞蛋水餃股之際，就是這個策略出動的好時機！ 比績優股獵犬的虧損還小，但還是要注意虧損！其實，虧損還是有的，2012年有點慘，一直盤整，沒有繼續突破新高，最大的虧損來到了25%： 你絕對不能輕易使用這個策略！ 當你決定採用這個策略時，代表你已經檢驗過它數百遍，你相信這個策略，也代表當這個策略產生了25%的虧損時，你都必須視之理所當然，無動於衷，繼續相信它。 我不保證這邊的績效是否正確，也不保證之後這個策略不會失效但你可以參考這邊的方法，實際模擬半年，甚至去實現自己的策略，把它修改的更好！ 光看這兩種數據，就有這樣的功效了，更何況是考慮更多因素！目前介紹了本益比、股價淨值比，並且用這兩個數值當作買賣標準，就能得到這樣的策略！ 更別提後續介紹更多種的基本面、技術面、甚至是籌碼面的選股方式，來讓大家對於股市更有感覺，更輕鬆的選擇股票標的！ 你知道為何我有勇氣把自己覺得賺錢的策略免費分享給大家嗎？因為更猛的在後面～XD 我盡量每天都會發一篇，假如你覺得到目前為止還喜歡的話，可以繼續關注這個blog，或是留言給我一點建議，接下來想做的主題： 更多的財經指標、回測 Machine Learning 選股 python 完全新手股市分析（包含歷史財經數據包及其研究方法） 請問哪個你會比較有興趣呢？","raw":null,"content":null,"categories":[{"name":"選股策略","slug":"選股策略","permalink":"https://www.finlab.tw/categories/選股策略/"}],"tags":[{"name":"如何買股票","slug":"如何買股票","permalink":"https://www.finlab.tw/tags/如何買股票/"},{"name":"選股策略","slug":"選股策略","permalink":"https://www.finlab.tw/tags/選股策略/"},{"name":"歷史回測","slug":"歷史回測","permalink":"https://www.finlab.tw/tags/歷史回測/"},{"name":"本益比","slug":"本益比","permalink":"https://www.finlab.tw/tags/本益比/"},{"name":"股價淨值比","slug":"股價淨值比","permalink":"https://www.finlab.tw/tags/股價淨值比/"}]},{"title":"大盤要跌了嗎？利用企業本益比分佈來判斷！","slug":"大盤要跌了嗎？利用企業本益比分佈來判斷！","date":"2017-09-27T06:52:52.000Z","updated":"2020-06-05T07:29:51.683Z","comments":true,"path":"大盤要跌了嗎？利用企業本益比分佈來判斷！/","link":"","permalink":"https://www.finlab.tw/大盤要跌了嗎？利用企業本益比分佈來判斷！/","excerpt":"","text":"最近大盤一直跌，大家都不禁懷疑是否開始大崩盤了？因為前幾天寫了一篇用淨值比判斷大盤漲跌，想說本益比是不是也可以這樣如法炮製呢？於是做了台股企業本益比中位數隨時間的變化圖。 在看圖之前不免俗的先講講本益比（PE） 本益比中位數介紹本益比的簡單公式是：本益比 = 每股市價／每股盈利。 本益比越高，代表你用較多錢買一間盈利低的公司股票本益比越低，代表你用較少錢買一間盈利高的公司股票 利用本益比中位數來判斷大盤大趨勢下圖紅線是是每天大盤上市上櫃股票的本益比中位數（取過對數的）隨時間變化圖，藍線是2個標準差，灰色是大盤： 大家可以觀察一下，以下是我發現有趣的點： 假如我們現在有個策略在紅線為2.5左右買進大盤，而3左右出清，感覺獲利會滿可觀的！（然而金融海嘯還是得凹一下單就是了XD） 用本益比中位數台股2000年上萬點為3.5，而今年上萬點只有2.6，代表兩次上萬點意義不太一樣，2000年那次比較像是泡沫，破了後來很慘烈；而今年是大盤破新高，而紅線沒破新高，代表企業的盈利目前來講還算是跟的上股價的漲幅，沒有太誇張，所以這幾天雖然都慘慘的，我個人還是保持平常心。 大家可以搭配之前用淨值比判斷大盤漲跌的文章看，雖然股價淨值比的中位數有點偏高，但目前都沒有大暴跌的明顯徵兆，但我真的不是叫你相信這些指標，因為每個指標的結論很有可能不一樣，例如下面就是一個例子： 反面例子：GOOGLE TREND這個指標已經被Mr.Market在這篇文中介紹過了，簡而言之：google trend 指標就是 “台股” 這個關鍵字的熱門程度，是反指標。 事隔多年看一下，發現最近有點散戶真的是灌入台股這樣： 最近”股票”的搜尋人氣已經達到歷史新高更勝2008金融海嘯前… 為什麼”股票”關鍵字人氣越高，股票越容易跌？因為用google搜”股票”這兩個字的，大部分都是新手散戶，有人把股市當做是一種心理學的競技場，新手往往沒有交易的心理素質，容易買高賣低。引用巴菲特的名言： We simply attempt to be fearful when others are greedy and to be greedy only when others are fearful. 總結：雖然淨值比來看，企業的盈利目前來講還算是跟的上股價的漲幅，但投資時還是得參考更多的指標再做決定，並自行負責！ 我喜歡跑一些歷史數據找一些規律性，但絕對不做預測，希望可以用最中性、較科學的方式來跟大家一起研究投資這門學問。","raw":null,"content":null,"categories":[{"name":"大盤漲跌","slug":"大盤漲跌","permalink":"https://www.finlab.tw/categories/大盤漲跌/"}],"tags":[{"name":"簡易策略","slug":"簡易策略","permalink":"https://www.finlab.tw/tags/簡易策略/"},{"name":"本益比","slug":"本益比","permalink":"https://www.finlab.tw/tags/本益比/"},{"name":"大盤","slug":"大盤","permalink":"https://www.finlab.tw/tags/大盤/"}]},{"title":"本益比能幫你選出優質股？","slug":"本益比能幫你選出優質股？","date":"2017-09-26T07:32:28.000Z","updated":"2020-06-05T07:29:49.127Z","comments":true,"path":"本益比能幫你選出優質股？/","link":"","permalink":"https://www.finlab.tw/本益比能幫你選出優質股？/","excerpt":"","text":"如何買到好股票呢？本文用統計的方式讓大家感受本益比（PE）的高低究竟跟股價有多少的影響？是否選擇低本益比（PE）的股票就沒問題？這些都是我自己入門股票買賣最想問的問題，究竟一家公司的PE要看得多重才對。 網路上已經一堆網站都在介紹PE了，今天做一些別的統計給大家看，常常聽別人說PE約在10～20之間，但是我們還是來看一張讓你很有感覺且非常新鮮（昨天的）的台股每間公司的PE分佈圖： 就像大家說的，真的集中在10～20之間，然而我們可以看到此分佈的兩個標準差來到了5～37左右，而更大一部份的PE市集中在10~15之間。 接下來我們就來做個小實驗，把2005年～2017年所有的台股上市公司都拿來回測，每隔半年選入本益比符合條件的全體公司，並且平均分配現有資金，當然實際這樣玩你得身價好幾個億，但我們這邊只是假設一個理想的狀態，手續費也是0，我們一共有七組不同的實驗： 本益比介於 05 ~ 10 之間 介於 10 ~ 15 之間 介於 15 ~ 20 之間 介於 20 ~ 25 之間 介於 25 ~ 30 之間 介於 30 ~ 35 之間 介於 35 ~ 40 之間 每一組都模擬12年看一下投資報酬會如何： Y軸是獲利的倍數，可以發現定10~15普遍比其它組還要好，證明在市場上買低本益比的股票是可以長期看多的，那為何最低本益比的5~10這組，會比較差呢？我個人認為可能是股票的多樣性不足導致的，因為本益比介於5～10的股票本來就比較少，沒有足夠的分散風險。另外也有可能是，某家爛公司突然大量的業外收入，讓我們以為它賺很多，但體質還是很差導致的。來看一下這七組12年的獲利倍數： 這邊的Y軸一樣是獲利的倍數，可以發現本益比越大，獲益就越差，跟報酬呈現反比。也證實了本益比越小的股票，是越值得投資的！ 但！ 這邊指的是投資風險足夠分散的情況下得到的結論，假如你的金額不大，只看本益比買股票會發生什麼事情呢？以下我們再做兩組實驗： 本益比介於12.9~13.1 本益比介於12.5~13.5 這兩種不同的組合，其平均本益比都在13左右，但為何獲利差這麼多呢？答案是因為選股的數量不一樣，第一組實驗每次都選了30支左右的股票，而第二組實驗每次都只選了小貓兩三隻： 可以發現，當你只選了兩三支本益比很小的股票時，根本一點用都沒有用！財經數據就像超級大雜訊，100支股票是可以簡單找到規律性的，但挑一支說會漲，一定是在騙自己。 總結： 本益比重看不重用（XD），不是啦，應該說本益比平常買股票參考用，但絕對不能當作唯一的指標！ 像巴菲特一樣看準了重壓一家公司，實在是很有難度，像我這種散戶，假如資本夠，還是好好的分散風險吧！ 資本不夠的話，得配合其它條件篩選出更好的股票，盡量平均分配，是比較恰當的。","raw":null,"content":null,"categories":[{"name":"指標分析","slug":"指標分析","permalink":"https://www.finlab.tw/categories/指標分析/"},{"name":"基本面","slug":"指標分析/基本面","permalink":"https://www.finlab.tw/categories/指標分析/基本面/"}],"tags":[{"name":"如何買股票","slug":"如何買股票","permalink":"https://www.finlab.tw/tags/如何買股票/"},{"name":"歷史回測","slug":"歷史回測","permalink":"https://www.finlab.tw/tags/歷史回測/"},{"name":"本益比","slug":"本益比","permalink":"https://www.finlab.tw/tags/本益比/"},{"name":"分佈圖","slug":"分佈圖","permalink":"https://www.finlab.tw/tags/分佈圖/"},{"name":"統計","slug":"統計","permalink":"https://www.finlab.tw/tags/統計/"}]},{"title":"用股價淨值比來判斷大盤漲跌","slug":"用股價淨值比來判斷大盤漲跌","date":"2017-09-25T12:52:40.000Z","updated":"2020-06-05T07:29:51.534Z","comments":true,"path":"用股價淨值比來判斷大盤漲跌/","link":"","permalink":"https://www.finlab.tw/用股價淨值比來判斷大盤漲跌/","excerpt":"","text":"股價淨值比(PB)真的能夠判斷台股大盤漲跌嗎？今天做了一張gif動圖，讓各位用眼睛觀察台股是否漲多了，是否有泡沫要破的跡象，甚至讓你有機會可以買在大盤低點。 股價淨值比(PB)，可以拿來判斷股民對這某家公司的看法，假如大家覺得這家公司未來會壯大，則淨值比會大於1，如果這家公司會衰退，則淨值比會小於1。那剛好我們就可以做出一張分佈圖，來看一下全體投資人對每一家公司看好看衰的分佈圖，跟大盤之間的變化（這張圖稍大可能要等久一點…）。結果發現，當大盤大跌之前，會有類似的前兆，想知道前兆是什麼？請接著看這張圖： 這張圖的上半部，是用來看多少個企業被看好，多少企業被看衰。分佈圖的x軸分成左右兩邊，大於零代表樂觀，小於零代表悲觀。其實x軸就是股價淨值比取log(PB)的分佈，為什麼要用log呢？是為了讓分佈圖更接近高斯，也讓多空變成在零的對稱位置。此圖的每一根bar代表有多少支股票，其股價淨值比為log(PB)。此圖有五條垂直線，代表著中位數加減兩個標準差。這張圖的下半部則是對照大盤的某個時間點，我們從2010年統計到2015年，每20天計算一次股價淨值比分佈圖。 大部分的時候，投資人基本上看好台灣的市場，所以分佈普遍偏向0的右邊，而且事實發現，近來台股加權指數破萬，並不是大泡泡，而是台灣的企業真的慢慢隨著時間在壯大，因為當大盤破萬點時，分佈圖並沒有超級偏右邊，代表台灣的企業是真的有跟上投資人的期待。然而最近還是有點太過樂觀的氣氛瀰漫，還是得懂得居高思危才行XD。 可以發現一些有趣的現象： 中位數平常都待在log(PB) = 0 ~ 1 之間，當大盤跌到最低點時，會回到0～0.05附近，可以當作大盤買點，成功在2004、2005、2012、2015歸零附近時買入成功買在超低點，唯獨金融海嘯時，中位數最小來到了-0.4左右才反轉，所以還是要看一下中位數是否在&lt;=0附近反轉，比較保險。 大盤在高點時，PB標準差會比其它時候略小，而中位數最大約在 log(PB) = 0.4～0.5 左右（可以當作大盤賣點，但較難判斷） 當大盤要大跌前的前兆是分佈的標準差會明顯變大，且伴隨中位數些許變低 接下來我們用更簡明的圖讓大家更一目了然： 圖中的五條線（紅、黃、藍）分別對應到上面動畫圖分佈的中位數及兩個標準差（紅、黃、白）唯獨中位數的顏色從白色改成藍色，比較清楚。另外灰色的是大盤，發現近五年藍色線接近0且反轉時，都是大盤很好的買點，另外當大盤到高點時，通常這五條線會跟大盤產生背離！也就是大盤越來越高，但分佈線高點卻越來越低。現階段，雖然大盤到 10500 點了，但還未產生背離現象，可以推斷最近的大跌應該不是真正的超大跌（吧？），但這也只是我的猜測啦，股市中沒有什麼是絕對的。 以上就是簡單判斷大盤多空的簡單方法！","raw":null,"content":null,"categories":[{"name":"大盤漲跌","slug":"大盤漲跌","permalink":"https://www.finlab.tw/categories/大盤漲跌/"}],"tags":[{"name":"簡易策略","slug":"簡易策略","permalink":"https://www.finlab.tw/tags/簡易策略/"},{"name":"股價淨值比","slug":"股價淨值比","permalink":"https://www.finlab.tw/tags/股價淨值比/"},{"name":"大盤","slug":"大盤","permalink":"https://www.finlab.tw/tags/大盤/"}]},{"title":"股價淨值比有這麼神？","slug":"股價淨值比有這麼神？","date":"2017-09-24T05:09:52.000Z","updated":"2020-06-05T07:29:51.558Z","comments":true,"path":"股價淨值比有這麼神？/","link":"","permalink":"https://www.finlab.tw/股價淨值比有這麼神？/","excerpt":"股價淨值比(PB)，是一個用來判斷究竟公司是被高估還是低估的指標，可以參考介紹\n究竟如何用PB買到好股票呢？PB真的越低越好嗎？我們來看看。","text":"股價淨值比(PB)，是一個用來判斷究竟公司是被高估還是低估的指標，可以參考介紹 究竟如何用PB買到好股票呢？PB真的越低越好嗎？我們來看看。 設計以下實驗：每半年（125天）換一次持股，從2010年到2017年選取台股上市公司所有 PB &lt; N 的公司，並將資產平均作分配，持有半年。 這張圖的Y軸是從2010年開始投資，資產的倍數變化圖，可以發現PB小的股票真的有比大盤好，原本我以為PB不能越低越好，但最後發現，PB越小，報酬率真的越高（只限於這個簡單策略），但我這邊說的是一群股票的整體結果，不代表單一股票PB越小就一定越好喔！可以看出 PB&lt;0.5 的時候，回測結果大起大落，我們來仔細看其中到底怎麼回事： 這個是 PB &lt; 0.5 的歷史績效圖，藍色是不考慮手續費跟稅，且資產可以完全平均分散買入所選的股票；紅色是起始100萬，也是盡量平均分散，但最小張數是一張，不能買零股，並且會放棄太貴的股票。可以發現紅色跟藍色差滿多的，最後結果可以差到50萬元，其中手續費佔了不少，為什麼2015～2016年下滑這麼大呢？我們接著來看一下手中持股數量： 此圖的Y軸是手上持股的數量，可以發現，2015～2016年只買了非常少檔股票，可能才2～3檔。這就像是把雞蛋都放在同一個籃子很危險，造成鉅額損失。另外可以觀察到，買入的股票數量似乎跟大盤成反比，大盤漲，手上股票就變少，大盤跌，手上股票就變多，是不是PB 小的股票變少，反過來想是大部分股票被高估，整體台股過於樂觀，泡沫即將破滅？之後可以來研究看看。 最後我們來看一下最大的下滑損失了多少%的總資產： 此圖的Y軸為下跌百分比，可以發現在2015～2016年，損失了40%的總資產，假如我們剛好在那時候投資，100萬就只剩60萬，實在有點可怕。 於是我們總結一下： 選擇PB越小的一群標的（PB &lt; 0.6~0.8），半年更新一次還不錯，但一定要做好風險管理，千萬別將全部的雞蛋放在同一個籃子裡！也可以配合其它的財報選出優質股～","raw":null,"content":null,"categories":[{"name":"指標分析","slug":"指標分析","permalink":"https://www.finlab.tw/categories/指標分析/"},{"name":"基本面","slug":"指標分析/基本面","permalink":"https://www.finlab.tw/categories/指標分析/基本面/"}],"tags":[{"name":"如何買股票","slug":"如何買股票","permalink":"https://www.finlab.tw/tags/如何買股票/"},{"name":"歷史回測","slug":"歷史回測","permalink":"https://www.finlab.tw/tags/歷史回測/"},{"name":"股價淨值比","slug":"股價淨值比","permalink":"https://www.finlab.tw/tags/股價淨值比/"}]},{"title":"策略狗。績優股獵犬3。簡單回測","slug":"策略狗。績優股獵犬3。簡單回測","date":"2017-09-23T03:34:35.000Z","updated":"2020-06-05T07:29:51.568Z","comments":true,"path":"策略狗。績優股獵犬3。簡單回測/","link":"","permalink":"https://www.finlab.tw/策略狗。績優股獵犬3。簡單回測/","excerpt":"","text":"今天來做個間單的回測，為策略狗文章作一個總結： 我們選股條件： “自由現金報酬率”最高的前30% 本益比 &lt; 25 股價淨值比 &lt; 1.5 每格N天就重新選一次手中的股票，比較跟策略狗不一樣的是，回測不只限於20支，只要滿足條件，就會買入，例如當手上要換成30張股票時，會將自己的所有現金平均分配到此30張股票，不計算手續費。 以下是回測結果： 其中Y軸為你的資產的倍數。可以發現，回測結果跟策略狗上面的曲線是相似的。不論N是多少，都比大盤還要好，然而其中N=60的較差，有可能的原因是換股的頻率太高了，”自由現金報酬率”還沒醞釀完。另外，半年是比一年換一次股好一點點而已，幾乎可以忽略不計。 幫大家測完的結果，雖然我寫的方法跟策略狗有點不一樣，但是用非常雷同的方法，結論是：真的每年再換一次股就好了！ 我每天都會放一篇跟選股有關的新文章，假如你覺得FinLab對你有幫助，也可以告訴我你最想看到哪些內容喔！","raw":null,"content":null,"categories":[{"name":"財報狗分析","slug":"財報狗分析","permalink":"https://www.finlab.tw/categories/財報狗分析/"}],"tags":[{"name":"歷史回測","slug":"歷史回測","permalink":"https://www.finlab.tw/tags/歷史回測/"},{"name":"策略狗","slug":"策略狗","permalink":"https://www.finlab.tw/tags/策略狗/"},{"name":"自由現金報酬率","slug":"自由現金報酬率","permalink":"https://www.finlab.tw/tags/自由現金報酬率/"}]},{"title":"策略狗。績優股獵犬2。何時買股才對？","slug":"策略狗。績優股獵犬2。何時買股才對？","date":"2017-09-22T07:47:06.000Z","updated":"2020-06-05T07:29:47.708Z","comments":true,"path":"策略狗。績優股獵犬2。何時買股才對？/","link":"","permalink":"https://www.finlab.tw/策略狗。績優股獵犬2。何時買股才對？/","excerpt":"上一篇介紹了”自由現金報酬率”高的股票，不容易大起大落。\n這篇就來分析一下，”自由現金報酬率” 每隔多少天重新買一次，獲利比較好。","text":"上一篇介紹了”自由現金報酬率”高的股票，不容易大起大落。 這篇就來分析一下，”自由現金報酬率” 每隔多少天重新買一次，獲利比較好。 首先，我們先取2010年到2017年所有低估的股票： 股價淨值比 &lt; 1 本益比 &lt; 15 每隔N天就重新選取低估股票，並觀察其漲跌是否與它的”自由現金報酬率”成正比： X軸為持有的週期，這邊的天數是指股票有開市的天數，理論上一年是250天左右，Y軸為相關性，有關相關性，在這邊做一個簡單的介紹： 相關性正數越高（最大是1），代表”自由現金報酬率”跟股票漲跌越成正比。 相關性接近0，代表，”自由現金報酬率”跟股價沒關係。 相關性越負（最小是-1），代表”自由現金報酬率”跟股票漲跌越成反比。 可以發現當週期從50天到150天期間，相關性是慢慢增加的，代表股票的”自由現金報酬率”需要一點時間醞釀，醞釀時間大概半年。然而，約在半年之後，correlation就開始大起大落（但好在幾乎都是正的），所以我們可以推斷：持股長達半年以後，股價漲跌跟”自由現金報酬率”較不相干。 於是，從上圖我們可以推斷： 可以約每半年換一次手上的股票，讓”自由現金報酬率”有時間反映在股價上！ 雖然策略狗官網的指導是說一年，但從圖中發現半年或許更合適。（沒準明天寫一篇推翻今天的結論也說不定XDD） 當然，沒有人能保證這些研究都是絕對正確的，假如大家覺得我的實驗哪裡不夠完善，要如何改善，歡迎跟我一起討論。下一篇我們將回測台股2010到2015年所有股票，看看是否跟此結論吻合。 我每天都會放一篇跟選股有關的新文章，假如你覺得FinLab對你有幫助，可以偶爾來追蹤一下～","raw":null,"content":null,"categories":[{"name":"財報狗分析","slug":"財報狗分析","permalink":"https://www.finlab.tw/categories/財報狗分析/"}],"tags":[{"name":"策略狗","slug":"策略狗","permalink":"https://www.finlab.tw/tags/策略狗/"},{"name":"自由現金報酬率","slug":"自由現金報酬率","permalink":"https://www.finlab.tw/tags/自由現金報酬率/"}]},{"title":"策略狗。績優股獵犬1。如何找到優質股？","slug":"策略狗。績優股獵犬1。如何找到優質股？","date":"2017-09-21T07:47:06.000Z","updated":"2020-06-05T07:29:50.448Z","comments":true,"path":"策略狗。績優股獵犬1。如何找到優質股？/","link":"","permalink":"https://www.finlab.tw/策略狗。績優股獵犬1。如何找到優質股？/","excerpt":"最近財報狗出了一個新的功能：策略狗。\n來研究一下它最新公開的指標～","text":"最近財報狗出了一個新的功能：策略狗。 來研究一下它最新公開的指標～ 財報狗教大家如何打敗大盤，但滿貴的400＊12個月，要4800每年，優點是可以每年操作一次就好了，缺點是你一次就得買12個月！ 針對績優股的”自由現金報酬率”這個比較不常見的指標，想來做個研究。 什麼是自由現金呢？這邊我就直接複製策略狗的教學： 投資資本 = 股東權益 + 長短期金融借款自由現金流 = 營業現金流 - 資本支出自由現金報酬率 = 自由現金流 / 投資資本 既然策略狗告訴我：取”自由現金報酬率”高的股票，買一年會漲的機率較高。我進一步想要分析的是，假如只買一個月會如何呢？ 於是做了一個相關性的比較 以原點(0,0)可以將這張圖表分成上下左右四個象現，此圖的左右，代表任意買入一個月是否獲利，正的是股價上漲，負的是下跌。此圖的上下，代表”自由現金流報酬率”的高低。 很對稱…沒什麼相關性，可以能是一個月還太快，畢竟這個指標是用於長期投資，一個月的漲跌還太短了。但可以發現，在圖的下半部，股價比較容易發散，而上半部股價比較集中，這是一個有趣的現象： “自由現金流報酬率”高的股票，似乎短時間（單月）內不易大起大落。 那把一個月調整成一季、半年、一年，對獲利又帶來什麼影響呢？下一篇再告訴大家。 我每天都會放一篇跟選股有關的新文章，假如你覺得FinLab對你有幫助，可以偶爾來追蹤一下～","raw":null,"content":null,"categories":[{"name":"財報狗分析","slug":"財報狗分析","permalink":"https://www.finlab.tw/categories/財報狗分析/"}],"tags":[{"name":"策略狗","slug":"策略狗","permalink":"https://www.finlab.tw/tags/策略狗/"},{"name":"自由現金報酬率","slug":"自由現金報酬率","permalink":"https://www.finlab.tw/tags/自由現金報酬率/"}]},{"title":"如何戰勝惰性？","slug":"每天至少寫一行","date":"2017-09-20T05:09:42.000Z","updated":"2018-01-24T11:42:29.000Z","comments":true,"path":"每天至少寫一行/","link":"","permalink":"https://www.finlab.tw/每天至少寫一行/","excerpt":"如何持續運動不中斷？跨年的願望完成了沒？說好每天背英文單字呢？\n這些都需要毅力，我所沒有的毅力。\n然而，最近聽到好友說的話，讓我有點頓悟！","text":"如何持續運動不中斷？跨年的願望完成了沒？說好每天背英文單字呢？ 這些都需要毅力，我所沒有的毅力。 然而，最近聽到好友說的話，讓我有點頓悟！ 其實我們不需要有毅力，我們需要拆解任務的能力。 讓我來說明一下，通常一個任務(task)，跟我的毅力(willpower)可以量化的話，會是這樣子：任務與毅力12task = 100 # 任務willpower = 5 # 毅力別懷疑，我的毅力真的很薄弱。 但沒關係，我們將任務分解成很小塊的子任務(subtask)：分解任務123subtask = taskwhile (subtask &gt; willpower) subtask /= 2秘訣就在這！要分解到一個你覺得可笑的地步，例如： 一天一下仰臥起做 一天寫一行部落格 一天花一小時研究 一定要夠可笑，才會成功。 重點不在於做的多或少，而是在於你是否開始做。很多事情痛苦的是靜摩擦力，後面就輕鬆了！ 一天一下仰臥起做：都做一下了怎麼可能不多做幾下。 一天寫一行部落格：你看我今天都寫多少行了。 一天作一小時研究：0.0 聽起來不錯 每天會有額外的動力去多做一點，甚至很多點每天的任務123progress = 0while(progress &lt; task) progress += subtask + random.randint(0, 10*subtask) 所以，我給自己的標準是：每天寫一行部落格，就好了！","raw":null,"content":null,"categories":[],"tags":[{"name":"生活","slug":"生活","permalink":"https://www.finlab.tw/tags/生活/"},{"name":"一行","slug":"一行","permalink":"https://www.finlab.tw/tags/一行/"}]},{"title":"立誓：每天都寫吧！","slug":"立誓：每天都寫吧！","date":"2017-09-19T12:14:58.000Z","updated":"2018-01-24T11:42:21.000Z","comments":true,"path":"立誓：每天都寫吧！/","link":"","permalink":"https://www.finlab.tw/立誓：每天都寫吧！/","excerpt":"","text":"橘色的夕陽說明今天又結束了。 還有一年365個夜晚可以浪費，但就這麼浪費太可惜了，還是來做些什麼吧！ 於是開始了，希望不要半途而廢的旅程！ Hello World1print(\"Hello world!\")","raw":null,"content":null,"categories":[],"tags":[{"name":"生活","slug":"生活","permalink":"https://www.finlab.tw/tags/生活/"}]}]}